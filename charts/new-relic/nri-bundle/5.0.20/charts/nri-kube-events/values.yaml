# -- Override the name of the chart
nameOverride: ""
# -- Override the full name of the release
fullnameOverride: ""

# -- Name of the Kubernetes cluster monitored. Mandatory. Can be configured also with `global.cluster`
cluster: ""
# -- This set this license key to use. Can be configured also with `global.licenseKey`
licenseKey: ""
# -- In case you don't want to have the license key in you values, this allows you to point to a user created secret to get the key from there. Can be configured also with `global.customSecretName`
customSecretName: ""
# -- In case you don't want to have the license key in you values, this allows you to point to which secret key is the license key located. Can be configured also with `global.customSecretLicenseKey`
customSecretLicenseKey: ""

# -- Images used by the chart for the integration and agents
# @default -- See `values.yaml`
images:
  # -- Image for the New Relic Kubernetes integration
  # @default -- See `values.yaml`
  integration:
    registry:
    repository: newrelic/nri-kube-events
    tag:
    pullPolicy: IfNotPresent
  # -- Image for the New Relic Infrastructure Agent sidecar
  # @default -- See `values.yaml`
  agent:
    registry:
    repository: newrelic/k8s-events-forwarder
    tag: 1.42.1
    pullPolicy: IfNotPresent
  # -- The secrets that are needed to pull images from a custom registry.
  pullSecrets: []
  # - name: regsecret

# -- Resources for the integration container
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Resources for the forwarder sidecar container
forwarder:
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

rbac:
  # -- Specifies whether RBAC resources should be created
  create: true

# -- Settings controlling ServiceAccount creation
# @default -- See `values.yaml`
serviceAccount:
  # serviceAccount.create -- (bool) Specifies whether a ServiceAccount should be created
  # @default -- `true`
  create:
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Specify any annotations to add to the ServiceAccount
  annotations:

# -- Annotations to add to the pod.
podAnnotations: {}
deployment:
  # deployment.annotations -- Annotations to add to the Deployment.
  annotations: {}
# -- Additional labels for chart pods
podLabels: {}
# -- Additional labels for chart objects
labels: {}

# -- Amount of time to wait until timeout to send metrics to the metric forwarder
agentHTTPTimeout: "30s"

# -- Configure where will the metrics be written. Mostly for debugging purposes.
# @default -- See `values.yaml`
sinks:
  # -- Enable the stdout sink to also see all events in the logs.
  stdout: false
  # -- The newRelicInfra sink sends all events to New Relic.
  newRelicInfra: true

# -- Configure the various kinds of scrapers that should be run.
# @default -- See `values.yaml`
scrapers:
  descriptions:
    enabled: true
    resyncPeriod: "24h"
  events:
    enabled: true

# -- Sets pod's priorityClassName. Can be configured also with `global.priorityClassName`
priorityClassName: ""
# -- (bool) Sets pod's hostNetwork. Can be configured also with `global.hostNetwork`
# @default -- `false`
hostNetwork:
# -- Sets pod's dnsConfig. Can be configured also with `global.dnsConfig`
dnsConfig: {}
# -- Sets security context (at pod level). Can be configured also with `global.podSecurityContext`
podSecurityContext: {}
# -- Sets security context (at container level). Can be configured also with `global.containerSecurityContext`
containerSecurityContext: {}

# -- Sets pod/node affinities. Can be configured also with `global.affinity`
affinity: {}
# -- Sets pod's node selector. Can be configured also with `global.nodeSelector`
nodeSelector: {}
# -- Sets pod's tolerations to node taints. Can be configured also with `global.tolerations`
tolerations: []

# -- Adds extra attributes to the cluster and all the metrics emitted to the backend. Can be configured also with `global.customAttributes`
customAttributes: {}

# -- Configures the integration to send all HTTP/HTTPS request through the proxy in that URL. The URL should have a standard format like `https://user:password@hostname:port`. Can be configured also with `global.proxy`
proxy: ""

# -- (bool) Send the metrics to the staging backend. Requires a valid staging license key. Can be configured also with `global.nrStaging`
# @default -- `false`
nrStaging:
fedramp:
  # -- (bool) Enables FedRAMP. Can be configured also with `global.fedramp.enabled`
  # @default -- `false`
  enabled:

# -- (bool) Sets the debug logs to this integration or all integrations if it is set globally. Can be configured also with `global.verboseLog`
# @default -- `false`
verboseLog:
