apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "k8s-agents-operator.serviceAccountName" . }}
  labels:
  {{- include "k8s-agents-operator.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "k8s-agents-operator.fullname" . }}
  labels:
    control-plane: controller-manager
  {{- include "k8s-agents-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-agents-operator
      control-plane: controller-manager
    {{- include "k8s-agents-operator.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-agents-operator
        control-plane: controller-manager
      {{- include "k8s-agents-operator.labels" . | nindent 8 }}
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        {{- if .Values.controllerManager.manager.leaderElection.enabled }}
        - --enable-leader-election
        {{- end }}
        - --zap-log-level=info
        - --zap-time-encoding=rfc3339nano
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        - name: ENABLE_WEBHOOKS
          value: "true"
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.controllerManager.manager.image.pullPolicy | default "Always" }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag | default .Chart.AppVersion }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.kubeRbacProxy.resources | nindent 10 }}
      serviceAccountName: {{ template "k8s-agents-operator.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      {{- if or .Values.admissionWebhooks.create .Values.admissionWebhooks.secretName }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ template "k8s-agents-operator.certificateSecret" . }}
      {{- end }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
