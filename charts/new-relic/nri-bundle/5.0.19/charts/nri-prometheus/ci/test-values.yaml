global:
  licenseKey: 1234567890abcdef1234567890abcdef12345678
  cluster: test-cluster

lowDataMode: true

nameOverride: my-custom-name

image:
  registry:
  repository: e2e/nri-prometheus
  tag: "test"
  imagePullPolicy: IfNotPresent

resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

rbac:
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the name template
  name: ""
  # Specify any annotations to add to the ServiceAccount
  annotations:
    foo: bar

# If you wish to provide your own config.yaml file include it under config:
# the sample config file is included here as an example.
config:
  scrape_duration: "60s"
  scrape_timeout: "15s"

  scrape_services: false
  scrape_endpoints: true

  audit: false

  insecure_skip_verify: false

  scrape_enabled_label: "prometheus.io/scrape"

  require_scrape_enabled_label_for_nodes: true

  transformations:
  - description: "Custom transformation Example"
    rename_attributes:
      - metric_prefix: "foo_"
        attributes:
          old_label: "newLabel"
    ignore_metrics:
      - prefixes:
        - bar_
    copy_attributes:
      - from_metric: "foo_info"
        to_metrics: "foo_"
        match_by:
          - namespace

podAnnotations:
  custom-pod-annotation: test

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 3000
  fsGroup: 2000

containerSecurityContext:
  runAsUser: 2000

tolerations:
  - key: "key1"
    operator: "Exists"
    effect: "NoSchedule"

nodeSelector:
  kubernetes.io/os: linux

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux

nrStaging: false

fedramp:
  enabled: true

proxy:

verboseLog: true
