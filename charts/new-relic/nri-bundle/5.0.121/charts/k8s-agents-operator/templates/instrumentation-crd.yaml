{{- $tls := fromYaml (include "k8s-agents-operator.webhookCert" .) }}
{{- if .Values.admissionWebhooks.autoGenerateCert.enabled }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ include "k8s-agents-operator.certificateSecret.name" . }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    {{- include "newrelic.common.labels" . | nindent 4 }}
    app.kubernetes.io/component: webhook
  namespace: {{ .Release.Namespace }}
data:
  tls.crt: {{ $tls.clientCert }}
  tls.key: {{ $tls.clientKey }}
  ca.crt: {{ $tls.caCert }}
{{- end }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "k8s-agents-operator.webhook.mutating.name" . }}
  {{- if .Values.admissionWebhooks.certManager.enabled }}
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "k8s-agents-operator.cert-manager.certificate.name" . }}
  {{- end }}
  labels:
    {{- include "newrelic.common.labels" . | nindent 4 }}
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if .Values.admissionWebhooks.autoGenerateCert.enabled }}
      caBundle: {{ $tls.caCert }}
      {{- end }}
      service:
        name: {{ include "k8s-agents-operator.webhook.service.name" . }}
        namespace: {{ .Release.Namespace }}
        path: /mutate-newrelic-com-v1beta1-instrumentation
    failurePolicy: Fail
    name: minstrumentation-v1beta1.kb.io
    rules:
      - apiGroups:
          - newrelic.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - instrumentations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if .Values.admissionWebhooks.autoGenerateCert.enabled }}
      caBundle: {{ $tls.caCert }}
      {{- end }}
      service:
        name: {{ include "k8s-agents-operator.webhook.service.name" . }}
        namespace: {{ .Release.Namespace }}
        path: /mutate-newrelic-com-v1alpha2-instrumentation
    failurePolicy: Fail
    name: minstrumentation-v1alpha2.kb.io
    rules:
      - apiGroups:
          - newrelic.com
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
          - UPDATE
        resources:
          - instrumentations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if .Values.admissionWebhooks.autoGenerateCert.enabled }}
      caBundle: {{ $tls.caCert }}
      {{- end }}
      service:
        name: {{ include "k8s-agents-operator.webhook.service.name" . }}
        namespace: {{ .Release.Namespace }}
        path: /mutate-v1-pod
    failurePolicy: Ignore
    name: mpod.kb.io
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - pods
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ include "k8s-agents-operator.webhook.validating.name" . }}
  {{- if .Values.admissionWebhooks.certManager.enabled }}
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "k8s-agents-operator.cert-manager.certificate.name" . }}
  {{- end }}
  labels:
    {{- include "newrelic.common.labels" . | nindent 4 }}
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if .Values.admissionWebhooks.autoGenerateCert.enabled }}
      caBundle: {{ $tls.caCert }}
      {{- end }}
      service:
        name: {{ include "k8s-agents-operator.webhook.service.name" . }}
        namespace: {{ .Release.Namespace }}
        path: /validate-newrelic-com-v1beta1-instrumentation
    failurePolicy: Fail
    name: vinstrumentationcreateupdate-v1beta1.kb.io
    rules:
      - apiGroups:
          - newrelic.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - instrumentations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if .Values.admissionWebhooks.autoGenerateCert.enabled }}
      caBundle: {{ $tls.caCert }}
      {{- end }}
      service:
        name: {{ include "k8s-agents-operator.webhook.service.name" . }}
        namespace: {{ .Release.Namespace }}
        path: /validate-newrelic-com-v1beta1-instrumentation
    failurePolicy: Ignore
    name: vinstrumentationdelete-v1beta1.kb.io
    rules:
      - apiGroups:
          - newrelic.com
        apiVersions:
          - v1beta1
        operations:
          - DELETE
        resources:
          - instrumentations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if .Values.admissionWebhooks.autoGenerateCert.enabled }}
      caBundle: {{ $tls.caCert }}
      {{- end }}
      service:
        name: {{ include "k8s-agents-operator.webhook.service.name" . }}
        namespace: {{ .Release.Namespace }}
        path: /validate-newrelic-com-v1alpha2-instrumentation
    failurePolicy: Fail
    name: vinstrumentationcreateupdate-v1alpha2.kb.io
    rules:
      - apiGroups:
          - newrelic.com
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
          - UPDATE
        resources:
          - instrumentations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if .Values.admissionWebhooks.autoGenerateCert.enabled }}
      caBundle: {{ $tls.caCert }}
      {{- end }}
      service:
        name: {{ include "k8s-agents-operator.webhook.service.name" . }}
        namespace: {{ .Release.Namespace }}
        path: /validate-newrelic-com-v1alpha2-instrumentation
    failurePolicy: Ignore
    name: vinstrumentationdelete-v1alpha2.kb.io
    rules:
      - apiGroups:
          - newrelic.com
        apiVersions:
          - v1alpha2
        operations:
          - DELETE
        resources:
          - instrumentations
    sideEffects: None
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: instrumentations.newrelic.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
    {{- if .Values.admissionWebhooks.certManager.enabled }}
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "k8s-agents-operator.cert-manager.certificate.name" . }}
    {{- end }}
  labels:
    {{- include "newrelic.common.labels" . | nindent 4 }}
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        {{- if .Values.admissionWebhooks.autoGenerateCert.enabled }}
        caBundle: {{ $tls.caCert }}
        {{- end }}
        service:
          name: {{ include "k8s-agents-operator.webhook.service.name" . }}
          namespace: {{ .Release.Namespace }}
          path: /convert
      conversionReviewVersions:
      - v1alpha2
      - v1beta1
  group: newrelic.com
  names:
    kind: Instrumentation
    listKind: InstrumentationList
    plural: instrumentations
    shortNames:
    - nragent
    - nragents
    singular: instrumentation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Instrumentation is the Schema for the instrumentations API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InstrumentationSpec defines the desired state of Instrumentation
            properties:
              agent:
                description: Agent defines configuration for agent instrumentation.
                properties:
                  env:
                    description: |-
                      Env defines Go specific env vars. There are four layers for env vars' definitions and
                      the precedence order is: `original container env vars` > `language specific env vars` > `common env vars` > `instrument spec configs' vars`.
                      If the former var had been defined, then the other vars would be ignored.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath is
                                    written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the specified
                                    API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the exposed
                                    resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    description: Image is a container image with Go SDK and auto-instrumentation.
                    type: string
                  language:
                    description: Language is the language that will be instrumented.
                    type: string
                  resourceRequirements:
                    description: Resources describes the compute resource requirements.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.
  
                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.
  
                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  volumeLimitSize:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      VolumeSizeLimit defines size limit for volume used for auto-instrumentation.
                      The default size is 200Mi.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              exporter:
                description: Exporter defines exporter configuration.
                properties:
                  endpoint:
                    description: Endpoint is address of the collector with OTLP endpoint.
                    type: string
                type: object
              licenseKeySecret:
                description: |-
                  LicenseKeySecret defines where to take the licenseKeySecret.
                  it should be present in the operator namespace.
                type: string
              namespaceLabelSelector:
                description: PodLabelSelector defines to which pods the config should
                  be applied.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              podLabelSelector:
                description: PodLabelSelector defines to which pods the config should
                  be applied.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              propagators:
                description: |-
                  Propagators defines inter-process context propagation configuration.
                  Values in this list will be set in the OTEL_PROPAGATORS env var.
                  Enum=tracecontext;none
                items:
                  description: Propagator represents the propagation type.
                  enum:
                  - tracecontext
                  - none
                  type: string
                type: array
              resource:
                description: Resource defines the configuration for the resource attributes,
                  as defined by the OpenTelemetry specification.
                properties:
                  addK8sUIDAttributes:
                    description: AddK8sUIDAttributes defines whether K8s UID attributes
                      should be collected (e.g. k8s.deployment.uid).
                    type: boolean
                  resourceAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      Attributes defines attributes that are added to the resource.
                      For example environment: dev
                    type: object
                type: object
              sampler:
                description: Sampler defines sampling configuration.
                properties:
                  argument:
                    description: |-
                      Argument defines sampler argument.
                      The value depends on the sampler type.
                      For instance for parentbased_traceidratio sampler type it is a number in range [0..1] e.g. 0.25.
                      The value will be set in the OTEL_TRACES_SAMPLER_ARG env var.
                    type: string
                  type:
                    description: |-
                      Type defines sampler type.
                      The value will be set in the OTEL_TRACES_SAMPLER env var.
                      The value can be for instance parentbased_always_on, parentbased_always_off, parentbased_traceidratio...
                    enum:
                    - always_on
                    - always_off
                    - traceidratio
                    - parentbased_always_on
                    - parentbased_always_off
                    - parentbased_traceidratio
                    type: string
                type: object
            type: object
          status:
            description: InstrumentationStatus defines the observed state of Instrumentation
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.podsMatching
      name: PodsMatching
      type: integer
    - jsonPath: .status.podsInjected
      name: PodsInjected
      type: integer
    - jsonPath: .status.podsNotReady
      name: PodsNotReady
      type: integer
    - jsonPath: .status.podsOutdated
      name: PodsOutdated
      type: integer
    - jsonPath: .status.podsHealthy
      name: PodsHealthy
      type: integer
    - jsonPath: .status.podsUnhealthy
      name: PodsUnhealthy
      type: integer
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Instrumentation is the Schema for the instrumentations API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InstrumentationSpec defines the desired state of Instrumentation
            properties:
              agent:
                description: Agent defines configuration for agent instrumentation.
                properties:
                  env:
                    description: |-
                      Env defines Go specific env vars. There are four layers for env vars' definitions and
                      the precedence order is: `original container env vars` > `language specific env vars` > `common env vars` > `instrument spec configs' vars`.
                      If the former var had been defined, then the other vars would be ignored.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath is
                                    written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the specified
                                    API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the exposed
                                    resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    description: Image is a container image with Go SDK and auto-instrumentation.
                    type: string
                  language:
                    description: Language is the language that will be instrumented.
                    type: string
                  resourceRequirements:
                    description: Resources describes the compute resource requirements.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  volumeLimitSize:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      VolumeSizeLimit defines size limit for volume used for auto-instrumentation.
                      The default size is 200Mi.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              agentConfigMap:
                description: |-
                  AgentConfigMap defines where to take the agent configuration from.
                  it should be present in the operator namespace.
                type: string
              exporter:
                description: Exporter defines exporter configuration.
                properties:
                  endpoint:
                    description: Endpoint is address of the collector with OTLP endpoint.
                    type: string
                type: object
              healthAgent:
                description: HealthAgent defines configuration for healthAgent instrumentation.
                properties:
                  env:
                    description: |-
                      Env defines Go specific env vars. There are four layers for env vars' definitions and
                      the precedence order is: `original container env vars` > `language specific env vars` > `common env vars` > `instrument spec configs' vars`.
                      If the former var had been defined, then the other vars would be ignored.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath is
                                    written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the specified
                                    API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the exposed
                                    resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    description: Image is a container image with Go SDK and auto-instrumentation.
                    type: string
                type: object
              licenseKeySecret:
                description: |-
                  LicenseKeySecret defines where to take the licenseKeySecret from.
                  it should be present in the operator namespace.
                type: string
              namespaceLabelSelector:
                description: PodLabelSelector defines to which pods the config should
                  be applied.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              podLabelSelector:
                description: PodLabelSelector defines to which pods the config should
                  be applied.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              propagators:
                description: |-
                  Propagators defines inter-process context propagation configuration.
                  Values in this list will be set in the OTEL_PROPAGATORS env var.
                  Enum=tracecontext;none
                items:
                  description: Propagator represents the propagation type.
                  enum:
                  - tracecontext
                  - none
                  type: string
                type: array
              resource:
                description: Resource defines the configuration for the resource attributes,
                  as defined by the OpenTelemetry specification.
                properties:
                  addK8sUIDAttributes:
                    description: AddK8sUIDAttributes defines whether K8s UID attributes
                      should be collected (e.g. k8s.deployment.uid).
                    type: boolean
                  resourceAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      Attributes defines attributes that are added to the resource.
                      For example environment: dev
                    type: object
                type: object
              sampler:
                description: Sampler defines sampling configuration.
                properties:
                  argument:
                    description: |-
                      Argument defines sampler argument.
                      The value depends on the sampler type.
                      For instance for parentbased_traceidratio sampler type it is a number in range [0..1] e.g. 0.25.
                      The value will be set in the OTEL_TRACES_SAMPLER_ARG env var.
                    type: string
                  type:
                    description: |-
                      Type defines sampler type.
                      The value will be set in the OTEL_TRACES_SAMPLER env var.
                      The value can be for instance parentbased_always_on, parentbased_always_off, parentbased_traceidratio...
                    enum:
                    - always_on
                    - always_off
                    - traceidratio
                    - parentbased_always_on
                    - parentbased_always_off
                    - parentbased_traceidratio
                    type: string
                type: object
            type: object
          status:
            description: InstrumentationStatus defines the observed state of Instrumentation
            properties:
              lastUpdated:
                format: date-time
                type: string
              podsHealthy:
                format: int64
                type: integer
              podsInjected:
                format: int64
                type: integer
              podsMatching:
                format: int64
                type: integer
              podsNotReady:
                format: int64
                type: integer
              podsOutdated:
                format: int64
                type: integer
              podsUnhealthy:
                format: int64
                type: integer
              unhealthyPodsErrors:
                items:
                  properties:
                    lastError:
                      type: string
                    pod:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
