apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "newrelic.common.naming.fullname" . }}
{{- if .Values.certManager.enabled }}
  annotations:
    certmanager.k8s.io/inject-ca-from: {{ printf "%s/%s-root-cert" .Release.Namespace (include "newrelic.common.naming.fullname" .) | quote }}
    cert-manager.io/inject-ca-from: {{ printf "%s/%s-root-cert" .Release.Namespace (include "newrelic.common.naming.fullname" .) | quote }}
{{- end }}
  labels:
    {{- include "newrelic.common.labels" . | nindent 4 }}
webhooks:
- name: metadata-injection.newrelic.com
  clientConfig:
    service:
      name: {{ include "newrelic.common.naming.fullname" . }}
      namespace: {{ .Release.Namespace }}
      path: "/mutate"
{{- if not .Values.certManager.enabled }}
    caBundle: ""
{{- end }}
  rules:
  - operations: ["CREATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
{{- if or .Values.ignoreNamespaces .Values.injectOnlyLabeledNamespaces }}
    scope: Namespaced
  namespaceSelector:
{{- if .Values.ignoreNamespaces }}
    matchExpressions:
      - key: kubernetes.io/metadata.name
        operator: NotIn
        values: {{ .Values.ignoreNamespaces | toJson }}
{{- end }}
{{- if .Values.injectOnlyLabeledNamespaces }}
    matchLabels:
      newrelic-metadata-injection: enabled
{{- end }}
{{- end }}
  failurePolicy: Ignore
  timeoutSeconds: {{ .Values.timeoutSeconds }}
  sideEffects: None
  admissionReviewVersions: ["v1", "v1beta1"]
