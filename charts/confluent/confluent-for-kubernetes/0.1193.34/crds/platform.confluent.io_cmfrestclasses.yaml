---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.0
    platform.confluent.io/app-version: 2.11.1
    platform.confluent.io/chart-version: v0.1193.34
  name: cmfrestclasses.platform.confluent.io
spec:
  group: platform.confluent.io
  names:
    categories:
      - all
      - confluent-platform
      - confluent
    kind: CMFRestClass
    listKind: CMFRestClassList
    plural: cmfrestclasses
    shortNames:
      - cmfrestclass
    singular: cmfrestclass
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: CMFRestClass is the Schema for the cmfrestclasses API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec defines the desired state of the CMFRestClass.
              properties:
                cmfRest:
                  description: cmfRest specifies the CMF REST API configuration.
                  properties:
                    authentication:
                      description: authentication specifies the REST API authentication mechanism.
                      properties:
                        basic:
                          description: basic specifies the basic authentication settings for the REST API client.
                          properties:
                            debug:
                              description: debug enables the basic authentication debug logs for JaaS configuration.
                              type: boolean
                            directoryPathInContainer:
                              description: |-
                                directoryPathInContainer allows to pass the basic credential through a directory path in the container.
                                More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                              minLength: 1
                              type: string
                            restrictedRoles:
                              description: |-
                                restrictedRoles specify the restricted roles on the server side only.
                                Changes will be only reflected in Control Center.
                                This configuration is ignored on the client side configuration.
                              items:
                                type: string
                              minItems: 1
                              type: array
                            roles:
                              description: |-
                                roles specify the roles on the server side only.
                                This configuration is ignored on the client side configuration.
                              items:
                                type: string
                              type: array
                            secretRef:
                              description: |-
                                secretRef defines secret reference to pass the required credentials.
                                More info: https://docs.confluent.io/operator/current/co-authenticate.html#basic-authentication
                              maxLength: 30
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          type: object
                        bearer:
                          description: bearer specifies the bearer authentication settings for the REST API client.
                          properties:
                            directoryPathInContainer:
                              description: |-
                                directoryPathInContainer specifies the directory path in the container
                                where the credential is mounted.
                              minLength: 1
                              type: string
                            secretRef:
                              description: |-
                                secretRef specifies the name of the secret that contains the credential.
                                More info: https://docs.confluent.io/operator/current/co-authenticate.html#bearer-authentication
                              maxLength: 30
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          type: object
                        oauth:
                          description: oauth specifies the OAuth authentication settings for the REST API client.
                          properties:
                            configuration:
                              description: configuration specifies the OAuth server settings.
                              properties:
                                audience:
                                  description: audience specifies the audience claim in the JWT payload.
                                  minLength: 1
                                  type: string
                                expectedIssuer:
                                  description: expectedIssuer specifies the expected issuer in the JWT payload.
                                  minLength: 1
                                  type: string
                                groupsClaimName:
                                  description: groupsClaimName specifies the name of claim in token for identifying the groups of subject in the JWT payload.
                                  minLength: 1
                                  type: string
                                jwksEndpointUri:
                                  description: |-
                                    jwksEndpointUri specifies the uri for the JSON Web Key Set (JWKS).
                                    It is used to get set of keys containing the public keys used to verify any JWT issued by the IdP's Authorization Server.
                                  minLength: 1
                                  type: string
                                loginConnectTimeoutMs:
                                  description: LoginConnectTimeoutMs sets connect timeout with IDP in ms
                                  format: int32
                                  type: integer
                                loginReadTimeoutMs:
                                  description: LoginReadTimeoutMs sets read timeout with IDP in ms
                                  format: int32
                                  type: integer
                                loginRetryBackoffMaxMs:
                                  description: LoginRetryBackoffMaxMs sets max retry backoff with IDP in ms
                                  format: int32
                                  type: integer
                                loginRetryBackoffMs:
                                  description: LoginRetryBackoffMs sets retry backoff with IDP in ms
                                  format: int32
                                  type: integer
                                scope:
                                  description: |-
                                    scope is optional and required only when your identity provider doesn't have
                                    a default scope or your groups claim is linked to a scope.
                                  minLength: 1
                                  type: string
                                subClaimName:
                                  description: subClaimName specifies name of claim in JWT to use for the subject.
                                  minLength: 1
                                  type: string
                                tokenEndpointUri:
                                  description: |-
                                    tokenBaseEndpointUri specifies the base uri for token endpoint.
                                    This is required for OAuth for inter broker communication along with
                                    clientId & clientSecret in JassConfig or JassConfigPassthrough
                                  minLength: 1
                                  type: string
                              type: object
                            directoryPathInContainer:
                              description: directoryPathInContainer allows to pass the basic credential through a directory path in the container.
                              minLength: 1
                              type: string
                            secretRef:
                              description: secretRef defines secret reference to pass the required credentials.
                              maxLength: 30
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          required:
                            - configuration
                          type: object
                        sslClientAuthentication:
                          description: sslClientAuthentication enables the clients side mtls for the REST API client.
                          type: boolean
                        type:
                          description: type specifies the REST API authentication type. Valid options are `basic`, `bearer`, `mtls` and `oauth`.
                          enum:
                            - basic
                            - bearer
                            - mtls
                            - oauth
                          type: string
                      required:
                        - type
                      type: object
                    endpoint:
                      description: endpoint specifies where Confluent REST API is running.
                      minLength: 1
                      pattern: ^https?://.*
                      type: string
                    tls:
                      description: "tls specifies the custom TLS structure for the application resources,\n\t// e.g. connector, topic, schema, of the Confluent Platform components.\n\t// +optional"
                      properties:
                        directoryPathInContainer:
                          description: |-
                            directoryPathInContainer contains the directory path in the container where
                            `keystore.jks`, `truststore.jks`, `jksPassword.txt` keys are mounted.
                          minLength: 1
                          type: string
                        jksPassword:
                          description: jksPassword specifies the secret name that contains the JKS password.
                          properties:
                            secretRef:
                              description: |-
                                secretRef references the name of the secret containing the JKS password.
                                More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                              maxLength: 30
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          required:
                            - secretRef
                          type: object
                        secretRef:
                          description: |-
                            secretRef specifies the secret name that contains the certificates.
                            More info about certificates key/value format: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                      type: object
                  type: object
              required:
                - cmfRest
              type: object
            status:
              description: status defines the observed state of the CMFRestClass.
              properties:
                conditions:
                  description: conditions are the latest available observed state of the kafkaRestClass.
                  items:
                    description: Condition represent the latest available observations of the current state.
                    properties:
                      lastProbeTime:
                        description: lastProbeTime shows the last time the condition was evaluated.
                        format: date-time
                        type: string
                      lastTransitionTime:
                        description: lastTransitionTime shows the last time the condition was transitioned from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: message shows a human-readable message with details about the transition.
                        type: string
                      reason:
                        description: reason shows the reason for the last transition of the condition.
                        type: string
                      status:
                        description: status shows the status of the condition, one of `True`, `False`, or `Unknown`.
                        type: string
                      type:
                        description: type shows the condition type.
                        type: string
                    type: object
                  type: array
                endpoint:
                  description: endpoint specifies the Kafka REST API / MDS endpoint.
                  type: string
                observedGeneration:
                  description: observedGeneration is the most recent generation observed for this Confluent component.
                  format: int64
                  type: integer
                state:
                  description: state is the state of the FlinkApplication.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
