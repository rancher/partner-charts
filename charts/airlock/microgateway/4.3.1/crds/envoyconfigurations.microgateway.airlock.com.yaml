apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  labels:
    app.kubernetes.io/name: airlock-microgateway-operator
    app.kubernetes.io/version: 4.3.1
  name: envoyconfigurations.microgateway.airlock.com
spec:
  group: microgateway.airlock.com
  names:
    categories:
      - airlock-microgateway
    kind: EnvoyConfiguration
    listKind: EnvoyConfigurationList
    plural: envoyconfigurations
    singular: envoyconfiguration
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.status
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            EnvoyConfiguration is the Schema for the envoyconfigurations API
            {{% notice warning %}} EnvoyConfiguration resources may contain sensitive information and thus RBAC permissions should be granted with care. {{% /notice %}}
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: EnvoyConfigurationSpec defines the desired state of EnvoyConfiguration
              properties:
                envoyResources:
                  properties:
                    clusters:
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: array
                    endpoints:
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: array
                    extensions:
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: array
                    listeners:
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: array
                    routes:
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: array
                    runtimes:
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: array
                    scopedRoutes:
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: array
                    secrets:
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: array
                  type: object
                envoyResourcesRaw:
                  description: |-
                    EnvoyResourcesRaw defines the desired state for each resource type. The resources are stored as zstd compressed JSON bytes.
                    For debugging purposes, the resources can be inspected with the following command: `kubectl get envoyconfiguration <name> -ojsonpath='{.spec.envoyResourcesRaw}' | base64 -d | zstd -d | jq`
                  format: byte
                  type: string
                nodeID:
                  description: '**Deprecated:** This field is now ignored as NodeID is always derived from the resource name.'
                  type: string
              type: object
            status:
              description: EnvoyConfigurationStatus defines the observed state of EnvoyConfiguration
              properties:
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: A human-readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of EnvoyConfiguration condition.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                status:
                  type: string
                xds:
                  properties:
                    resourceTypes:
                      additionalProperties:
                        description: XdsResourceTypeSyncStatus defines the sync status of xDS for a specific resource type
                        properties:
                          errorMessage:
                            description: ErrorMessage defines an optional message why the currently served resources of this resource type are rejected by the client.
                            type: string
                          resources:
                            additionalProperties:
                              description: XdsResourceStatus defines the status of xDS for a specific resource
                              properties:
                                version:
                                  description: Version defines the version which is currently served for this resource.
                                  type: string
                              required:
                                - version
                              type: object
                            description: Resources defines the resources which are currently served for this resource type.
                            type: object
                          status:
                            description: Status defines the current sync status of this resource type.
                            type: string
                          version:
                            description: Version defines the version which is currently served for this resource type.
                            type: string
                        required:
                          - resources
                          - status
                          - version
                        type: object
                      description: ResourceTypes defines the sync statuses for each resource type.
                      type: object
                    version:
                      description: Version defines the version of the underlying xDS snapshot.
                      type: integer
                  required:
                    - version
                  type: object
              required:
                - status
                - xds
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
