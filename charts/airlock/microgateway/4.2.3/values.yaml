# -- Allows overriding the name to use instead of "microgateway".
nameOverride: ""
# -- Allows overriding the name to use as full name of resources.
fullnameOverride: ""
# -- Labels to add to all resources.
commonLabels: {}
# -- Annotations to add to all resources.
commonAnnotations: {}
# -- ImagePullSecrets to use when pulling images.
imagePullSecrets: []
#   - name: myRegistryKeySecretName

crds:
  # -- Whether to skip the sanity check which prevents installing/upgrading the helm chart in a cluster with outdated Airlock Microgateway CRDs.
  # The check aims to prevent unexpected behavior and issues due to Helm v3 not automatically upgrading CRDs which are already present in the cluster
  # when performing a "helm install/upgrade".
  skipVersionCheck: false
operator:
  # -- Number of replicas for the operator Deployment.
  replicaCount: 2
  # -- Specifies the operator update strategy.
  updateStrategy:
    type: RollingUpdate
  # Specifies the Airlock Microgateway Operator image.
  image:
    # -- Image repository from which to pull the Airlock Microgateway Operator image.
    repository: "quay.io/airlock/microgateway-operator"
    # -- Image tag to pull.
    tag: "4.2.3"
    # -- SHA256 image digest to pull (in the format "sha256:c79ee3f85862fb386e9dd62b901b607161d27807f512d7fbdece05e9ee3d7c63").
    # Overrides tag when specified.
    digest: "sha256:a429dfdb636e76bfbee7c59cfbe53d5f396c1f5603d5cb187f6283301ba4d7ba"
    # -- Pull policy for this image.
    pullPolicy: IfNotPresent
  # -- Annotations to add to all Pods.
  podAnnotations: {}
  # -- Labels to add to all Pods.
  podLabels: {}
  # -- Annotations to add to the Service.
  serviceAnnotations: {}
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "8080"

  # -- Labels to add to the Service.
  serviceLabels: {}
  # -- Resource restrictions to apply to the operator container.
  resources: {}
  # We recommend at least the following resource specification.
  #  limits:
  #    cpu: 1000m
  #    memory: 512Mi
  #  requests:
  #    cpu: 100m
  #    memory: 512Mi

  # -- Custom nodeSelector to apply to the operator Deployment in order to constrain its Pods to certain nodes.
  nodeSelector: {}
  # -- Custom tolerations to apply to the operator Deployment in order to allow its Pods to run on tainted nodes.
  tolerations: []
  # -- Custom affinity to apply to the operator Deployment. Used to influence the scheduling.
  affinity: {}
  # Parameters for the operator configuration.
  config:
    # -- Operator application log level.
    logLevel: "info"
  # Configures the generation of the ServiceAccount.
  serviceAccount:
    # -- Whether a ServiceAccount should be created.
    create: true
    # -- Annotations to add to the ServiceAccount.
    annotations: {}
    # -- Name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template.
    name: ""
  # Configures the generation of Role and RoleBinding as well ClusterRoles and ClusterRoleBinding pairs for the ServiceAccount specified above.
  rbac:
    # -- Whether to create RBAC resources which are required for the Airlock Microgateway Operator to function.
    create: true
  # Configures the generation of a Prometheus Operator ServiceMonitor.
  serviceMonitor:
    # -- Whether to create a ServiceMonitor resource for monitoring.
    create: false
    # -- Labels to add to the ServiceMonitor.
    labels: {}
    # release: "<prometheus-operator-release>"
engine:
  # Specifies the Airlock Microgateway Engine image.
  image:
    # -- Image repository from which to pull the Airlock Microgateway Engine image.
    repository: "quay.io/airlock/microgateway-engine"
    # -- Image tag to pull.
    tag: "4.2.3"
    # -- SHA256 image digest to pull (in the format "sha256:a3051f42d3013813b05f7513bb86ed6a3209cb3003f1bb2f7b72df249aa544d3").
    # Overrides tag when specified.
    digest: "sha256:9b0debeef611172aa5ca79c6b8cd045e56a3c883763ec62c0fa211bb86d35304"
    # -- Pull policy for this image.
    pullPolicy: IfNotPresent
  # -- Resource restrictions to apply to the Airlock Microgateway Engine container.
  resources: {}
  # We recommend at least the following resource specification.
  #  limits:
  #    cpu: 500m
  #    memory: 128Mi
  #  requests:
  #    cpu: 10m
  #    memory: 40Mi

  # Additional configuration when deployed as a sidecar.
  sidecar:
    # Configures the generation of a Prometheus Operator PodMonitor.
    podMonitor:
      # -- Whether to create a PodMonitor resource for monitoring.
      create: false
      # -- Labels to add to the PodMonitor.
      labels: {}
      # release: "<prometheus-operator-release>"
networkValidator:
  # Specifies the Airlock Microgateway Network Validator image to be injected as an init-container.
  image:
    # -- Image repository from which to pull the busybox image for the Airlock Microgateway Network Validator init-container.
    repository: "cgr.dev/chainguard/busybox"
    # -- Image tag to pull.
    tag: ""
    # -- SHA256 image digest to pull (in the format "sha256:a212cef6665b2464a41307162fa96e9623aa45c3fa32c39d320eae8b730d81e0").
    # Overrides tag when specified.
    digest: "sha256:a212cef6665b2464a41307162fa96e9623aa45c3fa32c39d320eae8b730d81e0"
    # -- Pull policy for this image.
    pullPolicy: IfNotPresent
license:
  # -- Name of the secret containing the "microgateway-license.txt" key.
  secretName: "airlock-microgateway-license"
# Check whether the installation of the Airlock Microgateway Helm Chart was successful.
# Requires a secret with a valid Airlock Microgateway license key already to be present.
tests:
  # -- Whether additional resources required for running `helm test` should be created (e.g. Roles and ServiceAccounts).
  # If set to false, `helm test` will not run any tests.
  enabled: false
