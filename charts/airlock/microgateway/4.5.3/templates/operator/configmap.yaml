apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "airlock-microgateway.operator.fullname" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "airlock-microgateway.operator.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  engine_bootstrap_config_template.yaml: |
    # Base configuration, admin interface on port 19000
    admin:
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 19000
    dynamic_resources:
      cds_config:
        initial_fetch_timeout: 10s
        resource_api_version: V3
        api_config_source:
          api_type: GRPC
          transport_api_version: V3
          grpc_services:
          - envoy_grpc:
              cluster_name: xds_cluster
          set_node_on_first_message_only: true
          # Prevent Envoy Node from overloading the xDS server due to rejected configuration when using xDS SotW gRPC
          rate_limit_settings:
            max_tokens: 5
            fill_rate: 0.2
      lds_config:
        resource_api_version: V3
        initial_fetch_timeout: 10s
        api_config_source:
          api_type: GRPC
          transport_api_version: V3
          grpc_services:
          - envoy_grpc:
              cluster_name: xds_cluster
          set_node_on_first_message_only: true
          # Prevent Envoy Node from overloading the xDS server due to rejected configuration when using xDS SotW gRPC
          rate_limit_settings:
            max_tokens: 5
            fill_rate: 0.2
    static_resources:
      listeners:
      - name: probe
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 19001
        filter_chains:
        - filters:
          - name: http_connection_manager
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: probe
              codec_type: AUTO
              http2_protocol_options:
                initial_connection_window_size: 1048576
                initial_stream_window_size: 65536
                max_concurrent_streams: 100
              route_config:
                name: probe
                virtual_hosts:
                - name: probe
                  domains:
                  - '*'
                  routes:
                  - name: ready
                    match:
                      path: /ready
                      headers:
                      - name: ':method'
                        string_match:
                          exact: 'GET'
                    route:
                      cluster: airlock_microgateway_engine_admin
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      - name: metrics
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 19002
        filter_chains:
          - filters:
              - name: http_connection_manager
                typed_config:
                  '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  stat_prefix: metrics
                  codec_type: AUTO
                  http2_protocol_options:
                    initial_connection_window_size: 1048576
                    initial_stream_window_size: 65536
                    max_concurrent_streams: 100
                  route_config:
                    name: metrics
                    virtual_hosts:
                      - name: metrics
                        domains:
                          - '*'
                        routes:
                          - name: metrics
                            match:
                              path: /metrics
                              headers:
                                - name: ':method'
                                  string_match:
                                    exact: 'GET'
                            route:
                              prefix_rewrite: '/stats/prometheus'
                              cluster: airlock_microgateway_engine_admin
                  http_filters:
                    - name: envoy.filters.http.router
                      typed_config:
                        '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
      - name: xds_cluster
        connect_timeout: 1s
        type: STRICT_DNS
        respect_dns_ttl: true
        load_assignment:
          cluster_name: xds_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: airlock-microgateway-operator-xds.$(OPERATOR_NAMESPACE).svc.cluster.local
                    port_value: 13377
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options:
                connection_keepalive:
                  interval: 360s
                  timeout: 5s
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              tls_params:
                tls_minimum_protocol_version: TLSv1_3
                tls_maximum_protocol_version: TLSv1_3
              validation_context_sds_secret_config:
                name: validation_context_sds
                sds_config:
                  resource_api_version: V3
                  path_config_source:
                    path: /app/config/validation_context_sds_secret.yaml
                    watched_directory:
                      path: /app/config/
              tls_certificate_sds_secret_configs:
                - name: tls_certificate_sds
                  sds_config:
                    resource_api_version: V3
                    path_config_source:
                      path: /app/config/tls_certificate_sds_secret.yaml
                      watched_directory:
                        path: /app/config/
      - name: airlock_microgateway_engine_admin
        connect_timeout: 1s
        type: STATIC
        load_assignment:
          cluster_name: airlock_microgateway_engine_admin
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 19000
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options:
                connection_keepalive:
                  interval: 360s
                  timeout: 5s
    stats_config:
      stats_tags:
        - tag_name: "block_type"
          regex: "\\.(block_type\\.([^.]+))"
        - tag_name: "block_subtype"
          regex: "\\.(block_subtype\\.([^.]+))"
        - tag_name: "envoy_cluster_name"
          regex: "\\.(cluster\\.([^.]+))"
        - tag_name: "upstream"
          regex: "\\.(cluster\\.upstream_(\\d+))"
        - tag_name: "upstream"
          regex: "^cluster\\.(upstream_(\\d+))"
        - tag_name: "upstream"
          regex: "\\.(cluster\\.httproute/([^.]+)/rule/[^.]+)"
        - tag_name: "upstream"
          regex: "^cluster\\.(httproute/([^.]+)/rule/[^.]+)"
      use_all_default_tags: true
    overload_manager:
      resource_monitors:
      - name: "envoy.resource_monitors.global_downstream_max_connections"
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig
          max_active_downstream_connections: 50000
    bootstrap_extensions:
      - name: airlock.bootstrap.engine_stats
        typed_config:
          '@type': type.googleapis.com/airlock.extensions.bootstrap.stats.v1alpha.Stats
          health_probe_approx_req_per_hour: $(HEALTH_PROBE_REQUESTS_PER_HOUR)
    application_log_config:
      log_format:
        text_format: '{"@timestamp":"%Y-%m-%dT%T.%e%z","log":{"logger":"%n","level":"%l","origin":{"file":{"name":"%g","line":%#},"function":"%!"}},"event":{"module":"envoy","dataset":"envoy.application"},"process":{"pid":%P,"thread":{"id":%t}},"ecs":{"version":"8.5"},"message":"%j"}'
  engine_container_template.yaml: |
    name: "$(ENGINE_NAME)"
    image: "$(ENGINE_IMAGE)"
    imagePullPolicy: {{ .Values.engine.image.pullPolicy }}
    args:
      - "--config-path"
      - "/app/config/bootstrap_config.yaml"
      - "--base-id"
      - "$(BASE_ID)"
      - "--file-flush-interval-msec"
      - '1000'
      - "--drain-time-s"
      - '60'
      - "--service-node"
      - "$(POD_NAME).$(POD_NAMESPACE)"
      - "--service-cluster"
      - "$(APP_NAME).$(POD_NAMESPACE)"
      - "--log-path"
      - "/dev/stdout"
      - "--log-level"
      - "$(LOG_LEVEL)"
    volumeMounts:
    - name: airlock-microgateway-bootstrap-secret-volume
      mountPath: /app/config/
      readOnly: true
    env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
    ports:
      - containerPort: 13378
        protocol: TCP
      - containerPort: 19001
        protocol: TCP
      - containerPort: 19002
        protocol: TCP
    livenessProbe:
      httpGet:
        path: /ready
        port: 19001
        scheme: HTTP
      initialDelaySeconds: 0
      periodSeconds: 10
      failureThreshold: 3
      successThreshold: 1
      timeoutSeconds: 2
    readinessProbe:
      httpGet:
        path: /ready
        port: 19001
        scheme: HTTP
      initialDelaySeconds: 0
      periodSeconds: 5
      failureThreshold: 3
      successThreshold: 1
      timeoutSeconds: 1
    startupProbe:
      httpGet:
        path: /ready
        port: 19001
        scheme: HTTP
      initialDelaySeconds: 0
      periodSeconds: 1
      failureThreshold: 30
      successThreshold: 1
      timeoutSeconds: 1
    securityContext:
      {{- include "airlock-microgateway.restrictedSecurityContext" . | nindent 6 }}
      runAsUser: $(SECURITYCONTEXT_UID)
    {{- with .Values.engine.resources }}
    resources:
      {{- toYaml . | nindent 6 }}
    {{- end }}
  session_agent_container_template.yaml: |
    name: "$(SESSION_AGENT_NAME)"
    image: "$(SESSION_AGENT_IMAGE)"
    imagePullPolicy: {{ .Values.sessionAgent.image.pullPolicy }}
    args:
      - "--port"
      - "19004"
      - "--config-path"
      - "/app/config/config.json"
    volumeMounts:
    - name: airlock-microgateway-session-agent-volume
      mountPath: /app/config/
      readOnly: true
    env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
    ports:
      - containerPort: 19004
    livenessProbe:
      {{- if (semverCompare ">=1.27 || >=1.27.1-0" .Capabilities.KubeVersion.Version)}}
      grpc:
        port: 19004
      {{- else }}
      tcpSocket:
        port: 19004
      {{- end }}
      initialDelaySeconds: 0
      periodSeconds: 10
      failureThreshold: 3
      successThreshold: 1
      timeoutSeconds: 2
    readinessProbe:
      {{- if (semverCompare ">=1.27 || >=1.27.1-0" .Capabilities.KubeVersion.Version)}}
      grpc:
        port: 19004
      {{- else }}
      tcpSocket:
        port: 19004
      {{- end }}
      initialDelaySeconds: 0
      periodSeconds: 5
      failureThreshold: 3
      successThreshold: 1
      timeoutSeconds: 1
    startupProbe:
      {{- if (semverCompare ">=1.27 || >=1.27.1-0" .Capabilities.KubeVersion.Version)}}
      grpc:
        port: 19004
      {{- else }}
      tcpSocket:
        port: 19004
      {{- end }}
      initialDelaySeconds: 0
      periodSeconds: 1
      failureThreshold: 30
      successThreshold: 1
      timeoutSeconds: 1
    securityContext:
      {{- include "airlock-microgateway.restrictedSecurityContext" . | nindent 6 }}
      runAsUser: $(SECURITYCONTEXT_UID)
    {{- with .Values.sessionAgent.resources }}
    resources:
      {{- toYaml . | nindent 6 }}
    {{- end }}
  network_validator_container_template.yaml: |
    name: "$(NETWORK_VALIDATOR_NAME)"
    image: "$(ENGINE_IMAGE)"
    imagePullPolicy: {{ .Values.engine.image.pullPolicy }}
    command: ["/app/microgateway-network-validator"]
    securityContext:
      {{- include "airlock-microgateway.restrictedSecurityContext" . | nindent 6 }}
      runAsUser: $(SECURITYCONTEXT_UID)
    {{- with .Values.networkValidator.resources }}
    resources:
      {{- toYaml . | nindent 6 }}
    {{- end }}
  operator_config.yaml: |
    apiVersion: config.airlock.com/v1alpha1
    kind: OperatorConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 0.0.0.0:8080
    webhook:
      port: 9443
    deployment:
      sidecar:
        engineContainerTemplate: "/app/config/sidecar/engine_container_template.yaml"
        networkValidatorContainerTemplate: "/app/config/sidecar/network_validator_container_template.yaml"
        sessionAgentContainerTemplate: "/app/config/sidecar/session_agent_container_template.yaml"
    engine:
      bootstrapConfigTemplate: "/app/config/engine_bootstrap_config_template.yaml"
    {{- with $.Values.operator.watchNamespaceSelector }}
    namespaces:
      selector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $.Values.operator.watchNamespaces }}
    namespaces:
      list:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $.Values.engine.sidecar.podMonitor }}
    podMonitor:
      create: {{ .create }}
      {{- with .labels }}
      additionalLabels:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
