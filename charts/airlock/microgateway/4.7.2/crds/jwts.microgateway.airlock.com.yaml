apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    app.kubernetes.io/name: airlock-microgateway-operator
    app.kubernetes.io/version: 4.7.2
  name: jwts.microgateway.airlock.com
spec:
  group: microgateway.airlock.com
  names:
    categories:
      - airlock-microgateway
    kind: JWT
    listKind: JWTList
    plural: jwts
    singular: jwt
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: JWT configures client authentication via a JSON Web Token.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the JWT authentication.
              properties:
                clockSkewTolerance:
                  default: 60s
                  description: ClockSkewTolerance specifies the maximum allowed clock skew when verifying JWT time constraints (such as `exp` or `nbf`).
                  type: string
                expirationRequired:
                  description: |-
                    ExpirationRequired specifies whether the `exp` claim is mandatory.
                    If set to true and the extracted JWT does not contain a valid `exp` claim, the request will be blocked.
                  type: boolean
                extractionSources:
                  description: |-
                    ExtractionSources defines possible JWT sources. The JWT is extracted from the first source (in list order) that is present in the request.
                    If not specified, the JWT is extracted from the Authorization (Bearer) header.
                  items:
                    properties:
                      bearerToken:
                        description: BearerToken specifies to extract the bearer token from the Authorization header.
                        type: object
                      cookie:
                        description: Cookie from which to extract the token.
                        properties:
                          name:
                            description: Name of the cookie.
                            minLength: 1
                            type: string
                        required:
                          - name
                        type: object
                      header:
                        description: Header from which to extract the token.
                        properties:
                          name:
                            description: Name of the header (case-insensitive).
                            minLength: 1
                            type: string
                        required:
                          - name
                        type: object
                      queryParameter:
                        description: QueryParameter from which to extract the token.
                        properties:
                          name:
                            description: Name of the parameter.
                            minLength: 1
                            type: string
                        required:
                          - name
                        type: object
                    type: object
                  minItems: 1
                  type: array
                maxLifetime:
                  description: |-
                    MaxLifetime specifies the maximum allowed token lifetime.
                    If set, JWTs with a lifetime (`exp` - `nbf`, or `exp` - `iat` if no `nbf`) greater than this value and JWTs without the necessary claims (`exp` and `nbf` or `iat`) will be considered invalid and the corresponding request will be blocked.
                  type: string
                requireAny:
                  description: |-
                    RequireAny defines a list of requirements of which at least one must be satisfied by the extracted JWT.
                    A JWT satisfies a requirement (list entry) if it is verifiable by the entry's JWKS and matches all additional specified matchers (e.g. `issuer`, `audiences`).
                  items:
                    properties:
                      audiences:
                        description: Audiences specifies the accepted token audiences. If specified, the JWT's `aud` claim must contain at least one of these audiences.
                        items:
                          minLength: 1
                          type: string
                        minItems: 1
                        type: array
                      issuer:
                        description: Issuer specifies the accepted issuer. If specified, the JWT's `iss` claim must match this value.
                        minLength: 1
                        type: string
                      jwksRef:
                        description: JWKSRef selects the JWKS used to verify the token signature.
                        properties:
                          name:
                            description: Name of the resource
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                          - name
                        type: object
                      subject:
                        description: Subject matches the accepted token subjects. If specified, the JWT's `sub` claim must match.
                        properties:
                          matcher:
                            description: StringMatcher defines the way to match a string.
                            properties:
                              contains:
                                description: |-
                                  Contains defines a substring match on the substring specified here. Empty contains match is not allowed, please use regex instead.
                                  Only one of exact, prefix, suffix, regex or contains can be set.
                                minLength: 1
                                type: string
                              exact:
                                description: |-
                                  Exact defines an explicit match on the string specified here.
                                  Only one of exact, prefix, suffix, regex or contains can be set.
                                minLength: 1
                                type: string
                              ignoreCase:
                                default: false
                                description: IgnoreCase indicates whether the matching should be case-insensitive. In case of a regex match, the regex gets wrapped with a group `(?i:...)`.
                                type: boolean
                              prefix:
                                description: |-
                                  Prefix defines a prefix match on the prefix specified here. Empty prefix is not allowed, please use regex instead.
                                  Only one of exact, prefix, suffix, regex or contains can be set.
                                minLength: 1
                                type: string
                              regex:
                                description: |-
                                  Regex defines a regex match on the regular expression specified here. Google's [RE2 regex engine](https://github.com/google/re2/wiki/Syntax) is used.
                                  The regex matches only single-line by default, even with ".*". To match a multi-line string prepend (?s) to your regex.
                                  Only one of exact, prefix, suffix, regex or contains can be set.
                                minLength: 1
                                type: string
                              suffix:
                                description: |-
                                  Suffix defines a suffix match on the suffix specified here. Empty suffix is not allowed, please use regex instead.
                                  Only one of exact, prefix, suffix, regex or contains can be set.
                                minLength: 1
                                type: string
                            type: object
                        required:
                          - matcher
                        type: object
                    required:
                      - jwksRef
                    type: object
                  minItems: 1
                  type: array
              required:
                - expirationRequired
                - requireAny
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
