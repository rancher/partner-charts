apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    app.kubernetes.io/name: airlock-microgateway-operator
    app.kubernetes.io/version: 4.7.3
  name: sessionhandlings.microgateway.airlock.com
spec:
  group: microgateway.airlock.com
  names:
    categories:
      - airlock-microgateway
    kind: SessionHandling
    listKind: SessionHandlingList
    plural: sessionhandlings
    singular: sessionhandling
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SessionHandling contains the configuration for session handling.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired session handling behavior.
              properties:
                cookie:
                  description: Cookie configures the session cookie used for cookie-based session tracking.
                  properties:
                    attributes:
                      description: Attributes specifies additional attributes set on the session cookie.
                      properties:
                        domain:
                          description: Domain attribute to set. If not present, the attribute is omitted. A typical use case is to share the session cookie with sub-domains.
                          minLength: 1
                          type: string
                        path:
                          description: Path attribute to set. If not present, the attribute is omitted. Specifies a path prefix which the requested URL must match in order for the cookie to be sent.
                          pattern: ^/.*
                          type: string
                        sameSite:
                          default: Lax
                          description: SameSite attribute to set. Specifies whether and when cookies are sent with cross-site requests.
                          enum:
                            - None
                            - Lax
                            - Strict
                          type: string
                        secure:
                          default: true
                          description: Secure attribute to set. A cookie with the Secure attribute is only sent to the server with an encrypted request over the HTTPS protocol.
                          type: boolean
                      type: object
                    name:
                      default: AL_SESS
                      description: Name specifies the name of the session cookie.
                      minLength: 1
                      pattern: ^[-!#$%&'*+.^_`|~0-9a-zA-Z]+$
                      type: string
                  type: object
                defaultTimeouts:
                  description: DefaultTimeouts specifies the session timeouts to apply when not provided by the authentication method.
                  properties:
                    idle:
                      default: 10m
                      description: Idle specifies the maximum duration a session can remain inactive before it is considered expired.
                      type: string
                    lifetime:
                      default: 12h
                      description: Lifetime specifies the maximum duration a session can exist.
                      type: string
                  type: object
                mode:
                  default: OnDemand
                  description: |-
                    Mode specifies the session handling mode. Meaning of the possible values:
                    _Enforce_: All requests are aggregated into sessions. For requests without a session, a new session is created. For requests with an existing session, the session is reused and the idle time reset.
                    _OnDemand_: Behaves like `Enforce` for routes which have access control with OIDC authentication configured. For all other routes, sessions will be neither created nor used.
                  enum:
                    - Enforce
                    - OnDemand
                  type: string
                persistence:
                  description: Persistence configures where to store the session state.
                  properties:
                    redisProviderRef:
                      description: RedisProviderRef specifies to cache session information in the provided Redis instance.
                      properties:
                        name:
                          description: Name of the resource
                          maxLength: 253
                          minLength: 1
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - redisProviderRef
                  type: object
                prefix:
                  description: |-
                    Prefix specifies the prefix under which the sessions should be stored in the persistence layer.
                    If not specified, an automatic prefix derived from the namespaced SessionHandling CR name is used, which ensures that sessions will always be isolated on Microgateways configured with different SessionHandling CRs, even if they share the same persistence backend.

                    To allow session sharing between different Microgateway deployments, ensure that the cookie domain, prefix and persistence backend is the same across all corresponding SessionHandling CRs.
                  maxLength: 64
                  minLength: 1
                  pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
                  type: string
              required:
                - persistence
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
