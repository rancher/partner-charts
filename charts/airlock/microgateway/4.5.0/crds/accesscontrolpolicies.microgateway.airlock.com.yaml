apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  labels:
    app.kubernetes.io/name: airlock-microgateway-operator
    app.kubernetes.io/version: 4.5.0
    gateway.networking.k8s.io/policy: direct
  name: accesscontrolpolicies.microgateway.airlock.com
spec:
  group: microgateway.airlock.com
  names:
    categories:
      - airlock-microgateway
    kind: AccessControlPolicy
    listKind: AccessControlPolicyList
    plural: accesscontrolpolicies
    singular: accesscontrolpolicy
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AccessControlPolicy is a Direct Attached Policy for the Kubernetes Gateway API. It specifies the options to perform access control with a Microgateway.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of AccessControlPolicy.
              properties:
                policies:
                  description: Policies configures access control policies. The first matching policy (from top to bottom) applies.
                  items:
                    properties:
                      authorization:
                        description: Authorization configures how requests are authorized. An empty object value {} disables authorization.
                        properties:
                          authentication:
                            description: Authentication specifies that clients need to be authenticated with the provided method.
                            properties:
                              oidc:
                                description: OIDC configures client authentication using OpenID Connect.
                                properties:
                                  introspection:
                                    description: Introspection configures how token introspection is performed. An empty object value {} defaults to the _always_ strategy.
                                    properties:
                                      strategy:
                                        description: Strategy defines the behavior for token introspection.
                                        properties:
                                          always:
                                            description: Always strategy defines a strategy for checking every request.
                                            type: object
                                          random:
                                            description: Random strategy defines a probabilistic strategy for checking the `x-th` request.
                                            properties:
                                              probability:
                                                description: |-
                                                  Probability specifies the probability in % with which a request is selected to be introspected.
                                                  A valid value for probability must be from the range: [`0.01%`,`99.99%`].
                                                  To introspect the token on every request the _always_ strategy must be used.
                                                maxLength: 6
                                                minLength: 2
                                                type: string
                                                x-kubernetes-validations:
                                                  - message: 'Probability must have a value from the valid range: [`0.01%`,`99.99%`]'
                                                    rule: self.matches(r"""^[1-9]?[0-9](\.[0-9]{1,2})?%$""") && self != '0%' && self != '0.0%' && self != '0.00%'
                                            required:
                                              - probability
                                            type: object
                                        type: object
                                    type: object
                                  oidcRelyingPartyRef:
                                    description: OIDCRelyingPartyRef configures how the Airlock Microgateway Engine interacts with the OpenID provider.
                                    properties:
                                      name:
                                        description: Name of the resource
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                    type: object
                                required:
                                  - oidcRelyingPartyRef
                                type: object
                            type: object
                          deny:
                            description: Deny specifies to deny access for all requests matching this policy.
                            type: object
                          requireAll:
                            description: RequireAll specifies conditions which must all be satisfied for the request to be authorized.
                            items:
                              properties:
                                oidc:
                                  description: OIDC specifies a condition on the result of an OpenID Connect flow.
                                  properties:
                                    claim:
                                      description: Claim specifies a condition on a JWT claim.
                                      properties:
                                        name:
                                          description: Name of the claim.
                                          minLength: 1
                                          type: string
                                        value:
                                          description: |-
                                            Value of the claim. If not specified, only existence of the claim is checked (any value is allowed).

                                            Value matching is only supported if the data type of the claim is either primitive (`number`, `boolean`, `string`) or `array` of primitives.
                                            In case of a non-string value, the match will be performed against the stringified value.

                                            If the claim has an unsupported data type (e.g. `object` or `null`), its value will never match.
                                          properties:
                                            matcher:
                                              description: StringMatcher defines the way to match a string.
                                              properties:
                                                contains:
                                                  description: |-
                                                    Contains defines a substring match on the substring specified here. Empty contains match is not allowed, please use regex instead.
                                                    Only one of exact, prefix, suffix, regex or contains can be set.
                                                  minLength: 1
                                                  type: string
                                                exact:
                                                  description: |-
                                                    Exact defines an explicit match on the string specified here.
                                                    Only one of exact, prefix, suffix, regex or contains can be set.
                                                  minLength: 1
                                                  type: string
                                                ignoreCase:
                                                  default: false
                                                  description: IgnoreCase indicates whether the matching should be case-insensitive. In case of a regex match, the regex gets wrapped with a group `(?i:...)`.
                                                  type: boolean
                                                prefix:
                                                  description: |-
                                                    Prefix defines a prefix match on the prefix specified here. Empty prefix is not allowed, please use regex instead.
                                                    Only one of exact, prefix, suffix, regex or contains can be set.
                                                  minLength: 1
                                                  type: string
                                                regex:
                                                  description: |-
                                                    Regex defines a regex match on the regular expression specified here. Google's [RE2 regex engine](https://github.com/google/re2/wiki/Syntax) is used.
                                                    The regex matches only single-line by default, even with ".*". To match a multi-line string prepend (?s) to your regex.
                                                    Only one of exact, prefix, suffix, regex or contains can be set.
                                                  minLength: 1
                                                  type: string
                                                suffix:
                                                  description: |-
                                                    Suffix defines a suffix match on the suffix specified here. Empty suffix is not allowed, please use regex instead.
                                                    Only one of exact, prefix, suffix, regex or contains can be set.
                                                  minLength: 1
                                                  type: string
                                              type: object
                                          required:
                                            - matcher
                                          type: object
                                      required:
                                        - name
                                      type: object
                                  required:
                                    - claim
                                  type: object
                              required:
                                - oidc
                              type: object
                            minItems: 1
                            type: array
                          requireAny:
                            description: RequireAny specifies conditions of which at least one must be satisfied for the request to be authorized.
                            items:
                              properties:
                                oidc:
                                  description: OIDC specifies a condition on the result of an OpenID Connect flow.
                                  properties:
                                    claim:
                                      description: Claim specifies a condition on a JWT claim.
                                      properties:
                                        name:
                                          description: Name of the claim.
                                          minLength: 1
                                          type: string
                                        value:
                                          description: |-
                                            Value of the claim. If not specified, only existence of the claim is checked (any value is allowed).

                                            Value matching is only supported if the data type of the claim is either primitive (`number`, `boolean`, `string`) or `array` of primitives.
                                            In case of a non-string value, the match will be performed against the stringified value.

                                            If the claim has an unsupported data type (e.g. `object` or `null`), its value will never match.
                                          properties:
                                            matcher:
                                              description: StringMatcher defines the way to match a string.
                                              properties:
                                                contains:
                                                  description: |-
                                                    Contains defines a substring match on the substring specified here. Empty contains match is not allowed, please use regex instead.
                                                    Only one of exact, prefix, suffix, regex or contains can be set.
                                                  minLength: 1
                                                  type: string
                                                exact:
                                                  description: |-
                                                    Exact defines an explicit match on the string specified here.
                                                    Only one of exact, prefix, suffix, regex or contains can be set.
                                                  minLength: 1
                                                  type: string
                                                ignoreCase:
                                                  default: false
                                                  description: IgnoreCase indicates whether the matching should be case-insensitive. In case of a regex match, the regex gets wrapped with a group `(?i:...)`.
                                                  type: boolean
                                                prefix:
                                                  description: |-
                                                    Prefix defines a prefix match on the prefix specified here. Empty prefix is not allowed, please use regex instead.
                                                    Only one of exact, prefix, suffix, regex or contains can be set.
                                                  minLength: 1
                                                  type: string
                                                regex:
                                                  description: |-
                                                    Regex defines a regex match on the regular expression specified here. Google's [RE2 regex engine](https://github.com/google/re2/wiki/Syntax) is used.
                                                    The regex matches only single-line by default, even with ".*". To match a multi-line string prepend (?s) to your regex.
                                                    Only one of exact, prefix, suffix, regex or contains can be set.
                                                  minLength: 1
                                                  type: string
                                                suffix:
                                                  description: |-
                                                    Suffix defines a suffix match on the suffix specified here. Empty suffix is not allowed, please use regex instead.
                                                    Only one of exact, prefix, suffix, regex or contains can be set.
                                                  minLength: 1
                                                  type: string
                                              type: object
                                          required:
                                            - matcher
                                          type: object
                                      required:
                                        - name
                                      type: object
                                  required:
                                    - claim
                                  type: object
                              required:
                                - oidc
                              type: object
                            minItems: 1
                            type: array
                        type: object
                      identityPropagation:
                        description: IdentityPropagation configures how the authenticated user's identity is communicated to the protected application.
                        properties:
                          actions:
                            description: Actions specifies the propagation actions.
                            items:
                              properties:
                                identityPropagationRef:
                                  description: IdentityPropagationRef selects an IdentityPropagation to apply.
                                  properties:
                                    name:
                                      description: Name of the resource
                                      minLength: 1
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - identityPropagationRef
                              type: object
                            type: array
                          onFailure:
                            description: |-
                              OnFailure configures what should happen, if an identity propagation fails. Meaning of the possible values:
                              _Pass_: The request should be forwarded to the upstream, without including the information from the failed identity propagations.
                            enum:
                              - Pass
                            type: string
                        required:
                          - actions
                          - onFailure
                        type: object
                      requestConditions:
                        description: |-
                          RequestConditions defines additional request properties which must be matched in order for this policy to apply. A policy without request conditions will always match.

                          WARNING: There is currently a limitation that if `authentication.oidc` is configured for this policy, you must ensure that the request condition also matches logout requests and callback redirects from the OIDC Provider as configured in the OIDCRelyingParty (`pathMapping.logoutPath` / `pathMapping.redirectPath`).
                        properties:
                          header:
                            description: Header defines the matching headers of a request.
                            properties:
                              name:
                                description: Name defines the name of a header.
                                properties:
                                  matcher:
                                    description: Matcher defines the way to match a string. In comparison to a normal StringMatcher, a value is always matched ignoring the case and can't be inverted.
                                    properties:
                                      contains:
                                        description: |-
                                          Contains defines a substring match on the substring specified here. Empty contains match is not allowed, please use regex instead.
                                          Only one of exact, prefix, suffix, regex or contains can be set.
                                        minLength: 1
                                        type: string
                                      exact:
                                        description: |-
                                          Exact defines an explicit match on the string specified here.
                                          Only one of exact, prefix, suffix, regex or contains can be set.
                                        minLength: 1
                                        type: string
                                      prefix:
                                        description: |-
                                          Prefix defines a prefix match on the prefix specified here. Empty prefix is not allowed, please use regex instead.
                                          Only one of exact, prefix, suffix, regex or contains can be set.
                                        minLength: 1
                                        type: string
                                      regex:
                                        description: |-
                                          Regex defines a regex match on the regular expression specified here. Google's [RE2 regex engine](https://github.com/google/re2/wiki/Syntax) is used.
                                          The regex matches only single-line by default, even with ".*". To match a multi-line string prepend (?s) to your regex.
                                          Only one of exact, prefix, suffix, regex or contains can be set.
                                        minLength: 1
                                        type: string
                                      suffix:
                                        description: |-
                                          Suffix defines a suffix match on the suffix specified here. Empty suffix is not allowed, please use regex instead.
                                          Only one of exact, prefix, suffix, regex or contains can be set.
                                        minLength: 1
                                        type: string
                                    type: object
                                required:
                                  - matcher
                                type: object
                              value:
                                description: Value defines the value of a header.
                                properties:
                                  matcher:
                                    description: StringMatcher defines the way to match a string.
                                    properties:
                                      contains:
                                        description: |-
                                          Contains defines a substring match on the substring specified here. Empty contains match is not allowed, please use regex instead.
                                          Only one of exact, prefix, suffix, regex or contains can be set.
                                        minLength: 1
                                        type: string
                                      exact:
                                        description: |-
                                          Exact defines an explicit match on the string specified here.
                                          Only one of exact, prefix, suffix, regex or contains can be set.
                                        minLength: 1
                                        type: string
                                      ignoreCase:
                                        default: false
                                        description: IgnoreCase indicates whether the matching should be case-insensitive. In case of a regex match, the regex gets wrapped with a group `(?i:...)`.
                                        type: boolean
                                      prefix:
                                        description: |-
                                          Prefix defines a prefix match on the prefix specified here. Empty prefix is not allowed, please use regex instead.
                                          Only one of exact, prefix, suffix, regex or contains can be set.
                                        minLength: 1
                                        type: string
                                      regex:
                                        description: |-
                                          Regex defines a regex match on the regular expression specified here. Google's [RE2 regex engine](https://github.com/google/re2/wiki/Syntax) is used.
                                          The regex matches only single-line by default, even with ".*". To match a multi-line string prepend (?s) to your regex.
                                          Only one of exact, prefix, suffix, regex or contains can be set.
                                        minLength: 1
                                        type: string
                                      suffix:
                                        description: |-
                                          Suffix defines a suffix match on the suffix specified here. Empty suffix is not allowed, please use regex instead.
                                          Only one of exact, prefix, suffix, regex or contains can be set.
                                        minLength: 1
                                        type: string
                                    type: object
                                required:
                                  - matcher
                                type: object
                            type: object
                          invert:
                            default: false
                            description: Invert indicates whether the request condition should be inverted.
                            type: boolean
                          mediaType:
                            description: MediaType defines the matching media type from the content-type header of a request.
                            properties:
                              matcher:
                                description: |-
                                  NonInvertableCaseInsensitiveStringMatcher defines the way to match a string.
                                  In comparison to a normal StringMatcher, a value is always matched ignoring the case and can't be inverted.
                                properties:
                                  contains:
                                    description: |-
                                      Contains defines a substring match on the substring specified here. Empty contains match is not allowed, please use regex instead.
                                      Only one of exact, prefix, suffix, regex or contains can be set.
                                    minLength: 1
                                    type: string
                                  exact:
                                    description: |-
                                      Exact defines an explicit match on the string specified here.
                                      Only one of exact, prefix, suffix, regex or contains can be set.
                                    minLength: 1
                                    type: string
                                  prefix:
                                    description: |-
                                      Prefix defines a prefix match on the prefix specified here. Empty prefix is not allowed, please use regex instead.
                                      Only one of exact, prefix, suffix, regex or contains can be set.
                                    minLength: 1
                                    type: string
                                  regex:
                                    description: |-
                                      Regex defines a regex match on the regular expression specified here. Google's [RE2 regex engine](https://github.com/google/re2/wiki/Syntax) is used.
                                      The regex matches only single-line by default, even with ".*". To match a multi-line string prepend (?s) to your regex.
                                      Only one of exact, prefix, suffix, regex or contains can be set.
                                    minLength: 1
                                    type: string
                                  suffix:
                                    description: |-
                                      Suffix defines a suffix match on the suffix specified here. Empty suffix is not allowed, please use regex instead.
                                      Only one of exact, prefix, suffix, regex or contains can be set.
                                    minLength: 1
                                    type: string
                                type: object
                            required:
                              - matcher
                            type: object
                          method:
                            description: Method defines the matching methods of a request.
                            items:
                              description: Method defines common HTTP methods.
                              enum:
                                - GET
                                - HEAD
                                - POST
                                - PUT
                                - PATCH
                                - DELETE
                                - CONNECT
                                - OPTIONS
                                - TRACE
                              type: string
                            type: array
                          path:
                            description: Path defines the matching path of a request.
                            properties:
                              matcher:
                                description: StringMatcher defines the way to match a string.
                                properties:
                                  contains:
                                    description: |-
                                      Contains defines a substring match on the substring specified here. Empty contains match is not allowed, please use regex instead.
                                      Only one of exact, prefix, suffix, regex or contains can be set.
                                    minLength: 1
                                    type: string
                                  exact:
                                    description: |-
                                      Exact defines an explicit match on the string specified here.
                                      Only one of exact, prefix, suffix, regex or contains can be set.
                                    minLength: 1
                                    type: string
                                  ignoreCase:
                                    default: false
                                    description: IgnoreCase indicates whether the matching should be case-insensitive. In case of a regex match, the regex gets wrapped with a group `(?i:...)`.
                                    type: boolean
                                  prefix:
                                    description: |-
                                      Prefix defines a prefix match on the prefix specified here. Empty prefix is not allowed, please use regex instead.
                                      Only one of exact, prefix, suffix, regex or contains can be set.
                                    minLength: 1
                                    type: string
                                  regex:
                                    description: |-
                                      Regex defines a regex match on the regular expression specified here. Google's [RE2 regex engine](https://github.com/google/re2/wiki/Syntax) is used.
                                      The regex matches only single-line by default, even with ".*". To match a multi-line string prepend (?s) to your regex.
                                      Only one of exact, prefix, suffix, regex or contains can be set.
                                    minLength: 1
                                    type: string
                                  suffix:
                                    description: |-
                                      Suffix defines a suffix match on the suffix specified here. Empty suffix is not allowed, please use regex instead.
                                      Only one of exact, prefix, suffix, regex or contains can be set.
                                    minLength: 1
                                    type: string
                                type: object
                            required:
                              - matcher
                            type: object
                          remoteIP:
                            description: |-
                              RemoteIP defines the matching remote IPs of a request.
                              Note: Depending on your setup you may need to adapt the `remoteIP` configuration in the `SidecarGateway` / `GatewayParameters` resource to ensure correct client IP detection.
                            properties:
                              cidrRanges:
                                description: CIDRRanges defines the IPv4 or IPv6 CIDR ranges, e.g. ``196.148.3.128/26`` or ``2001:db8::/28``.
                                items:
                                  description: CIDRRange defines an IPv4 or IPv6 CIDR range, e.g. “196.148.3.128/26“ or “2001:db8::/28“.
                                  format: cidr
                                  type: string
                                minItems: 1
                                type: array
                              invert:
                                default: false
                                description: Invert indicates whether the match should be inverted.
                                type: boolean
                            required:
                              - cidrRanges
                            type: object
                        type: object
                    required:
                      - authorization
                    type: object
                  maxItems: 128
                  minItems: 1
                  type: array
                targetRefs:
                  description: |-
                    TargetRefs are the resources this policy is being attached to. Referenced resources must be in the same namespace as the policy.
                    Support: HTTPRoute.
                  items:
                    description: |-
                      LocalPolicyTargetReference identifies an API object to apply a direct or
                      inherited policy to. This should be used as part of Policy resources
                      that can target Gateway API resources. For more information on how this
                      policy attachment model works, and a sample Policy resource, refer to
                      the policy attachment documentation for Gateway API.
                    properties:
                      group:
                        description: Group is the group of the target resource.
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: Kind is kind of the target resource.
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the target resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - group
                      - kind
                      - name
                    type: object
                  maxItems: 16
                  minItems: 1
                  type: array
                  x-kubernetes-validations:
                    - message: 'TargetRef Kind must be: HTTPRoute'
                      rule: self.all(t, t.kind == 'HTTPRoute')
                    - message: TargetRef Group must be gateway.networking.k8s.io.
                      rule: self.all(t, t.group == 'gateway.networking.k8s.io')
                    - message: Combination of name, group and kind must be unique for each TargetRef
                      rule: self.all(t1, self.exists_one(t2, t1.group == t2.group && t1.kind == t2.kind && t1.name == t2.name))
              required:
                - policies
                - targetRefs
              type: object
            status:
              description: Status defines the state of the AccessControlPolicy.
              properties:
                ancestors:
                  description: |-
                    Ancestors is a list of ancestor resources (usually Gateways) that are
                    associated with the policy, and the status of the policy with respect to
                    each ancestor. When this policy attaches to a parent, the controller that
                    manages the parent and the ancestors MUST add an entry to this list when
                    the controller first sees the policy and SHOULD update the entry as
                    appropriate when the relevant ancestor is modified.

                    Note that choosing the relevant ancestor is left to the Policy designers;
                    an important part of Policy design is designing the right object level at
                    which to namespace this status.

                    Note also that implementations MUST ONLY populate ancestor status for
                    the Ancestor resources they are responsible for. Implementations MUST
                    use the ControllerName field to uniquely identify the entries in this list
                    that they are responsible for.

                    Note that to achieve this, the list of PolicyAncestorStatus structs
                    MUST be treated as a map with a composite key, made up of the AncestorRef
                    and ControllerName fields combined.

                    A maximum of 16 ancestors will be represented in this list. An empty list
                    means the Policy is not relevant for any ancestors.

                    If this slice is full, implementations MUST NOT add further entries.
                    Instead they MUST consider the policy unimplementable and signal that
                    on any related resources such as the ancestor that would be referenced
                    here. For example, if this list was full on BackendTLSPolicy, no
                    additional Gateways would be able to reference the Service targeted by
                    the BackendTLSPolicy.
                  items:
                    description: |-
                      PolicyAncestorStatus describes the status of a route with respect to an
                      associated Ancestor.

                      Ancestors refer to objects that are either the Target of a policy or above it
                      in terms of object hierarchy. For example, if a policy targets a Service, the
                      Policy's Ancestors are, in order, the Service, the HTTPRoute, the Gateway, and
                      the GatewayClass. Almost always, in this hierarchy, the Gateway will be the most
                      useful object to place Policy status on, so we recommend that implementations
                      SHOULD use Gateway as the PolicyAncestorStatus object unless the designers
                      have a _very_ good reason otherwise.

                      In the context of policy attachment, the Ancestor is used to distinguish which
                      resource results in a distinct application of this policy. For example, if a policy
                      targets a Service, it may have a distinct result per attached Gateway.

                      Policies targeting the same resource may have different effects depending on the
                      ancestors of those resources. For example, different Gateways targeting the same
                      Service may have different capabilities, especially if they have different underlying
                      implementations.

                      For example, in BackendTLSPolicy, the Policy attaches to a Service that is
                      used as a backend in a HTTPRoute that is itself attached to a Gateway.
                      In this case, the relevant object for status is the Gateway, and that is the
                      ancestor object referred to in this status.

                      Note that a parent is also an ancestor, so for objects where the parent is the
                      relevant object for status, this struct SHOULD still be used.

                      This struct is intended to be used in a slice that's effectively a map,
                      with a composite key made up of the AncestorRef and the ControllerName.
                    properties:
                      ancestorRef:
                        description: |-
                          AncestorRef corresponds with a ParentRef in the spec that this
                          PolicyAncestorStatus struct describes the status of.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: |-
                              Group is the group of the referent.
                              When unspecified, "gateway.networking.k8s.io" is inferred.
                              To set the core API group (such as for a "Service" kind referent),
                              Group must be explicitly set to "" (empty string).

                              Support: Core
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Gateway
                            description: |-
                              Kind is kind of the referent.

                              There are two kinds of parent resources with "Core" support:

                              * Gateway (Gateway conformance profile)
                              * Service (Mesh conformance profile, ClusterIP Services only)

                              Support for other resources is Implementation-Specific.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: |-
                              Name is the name of the referent.

                              Support: Core
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the referent. When unspecified, this refers
                              to the local namespace of the Route.

                              Note that there are specific rules for ParentRefs which cross namespace
                              boundaries. Cross-namespace references are only valid if they are explicitly
                              allowed by something in the namespace they are referring to. For example:
                              Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                              generic way to enable any other kind of cross-namespace reference.

                              <gateway:experimental:description>
                              ParentRefs from a Route to a Service in the same namespace are "producer"
                              routes, which apply default routing rules to inbound connections from
                              any namespace to the Service.

                              ParentRefs from a Route to a Service in a different namespace are
                              "consumer" routes, and these routing rules are only applied to outbound
                              connections originating from the same namespace as the Route, for which
                              the intended destination of the connections are a Service targeted as a
                              ParentRef of the Route.
                              </gateway:experimental:description>

                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port is the network port this Route targets. It can be interpreted
                              differently based on the type of parent resource.

                              When the parent resource is a Gateway, this targets all listeners
                              listening on the specified port that also support this kind of Route(and
                              select this Route). It's not recommended to set `Port` unless the
                              networking behaviors specified in a Route must apply to a specific port
                              as opposed to a listener(s) whose port(s) may be changed. When both Port
                              and SectionName are specified, the name and port of the selected listener
                              must match both specified values.

                              <gateway:experimental:description>
                              When the parent resource is a Service, this targets a specific port in the
                              Service spec. When both Port (experimental) and SectionName are specified,
                              the name and port of the selected port must match both specified values.
                              </gateway:experimental:description>

                              Implementations MAY choose to support other parent resources.
                              Implementations supporting other types of parent resources MUST clearly
                              document how/if Port is interpreted.

                              For the purpose of status, an attachment is considered successful as
                              long as the parent resource accepts it partially. For example, Gateway
                              listeners can restrict which Routes can attach to them by Route kind,
                              namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                              from the referencing Route, the Route MUST be considered successfully
                              attached. If no Gateway listeners accept attachment from this Route,
                              the Route MUST be considered detached from the Gateway.

                              Support: Extended
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          sectionName:
                            description: |-
                              SectionName is the name of a section within the target resource. In the
                              following resources, SectionName is interpreted as the following:

                              * Gateway: Listener name. When both Port (experimental) and SectionName
                              are specified, the name and port of the selected listener must match
                              both specified values.
                              * Service: Port name. When both Port (experimental) and SectionName
                              are specified, the name and port of the selected listener must match
                              both specified values.

                              Implementations MAY choose to support attaching Routes to other resources.
                              If that is the case, they MUST clearly document how SectionName is
                              interpreted.

                              When unspecified (empty string), this will reference the entire resource.
                              For the purpose of status, an attachment is considered successful if at
                              least one section in the parent resource accepts it. For example, Gateway
                              listeners can restrict which Routes can attach to them by Route kind,
                              namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                              the referencing Route, the Route MUST be considered successfully
                              attached. If no Gateway listeners accept attachment from this Route, the
                              Route MUST be considered detached from the Gateway.

                              Support: Core
                            maxLength: 253
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                        required:
                          - name
                        type: object
                      conditions:
                        description: Conditions describes the status of the Policy with respect to the given Ancestor.
                        items:
                          description: Condition contains details for one aspect of the current state of this API Resource.
                          properties:
                            lastTransitionTime:
                              description: |-
                                lastTransitionTime is the last time the condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: |-
                                message is a human readable message indicating details about the transition.
                                This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: |-
                                observedGeneration represents the .metadata.generation that the condition was set based upon.
                                For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: |-
                                reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected values and meanings for this field,
                                and whether the values are considered a guaranteed API.
                                The value should be a CamelCase string.
                                This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        maxItems: 8
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      controllerName:
                        description: |-
                          ControllerName is a domain/path string that indicates the name of the
                          controller that wrote this status. This corresponds with the
                          controllerName field on GatewayClass.

                          Example: "example.net/gateway-controller".

                          The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                          valid Kubernetes names
                          (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                          Controllers MUST populate this field when writing status. Controllers should ensure that
                          entries to status populated with their ControllerName are cleaned up when they are no
                          longer necessary.
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                        type: string
                    required:
                      - ancestorRef
                      - controllerName
                    type: object
                  maxItems: 16
                  type: array
              required:
                - ancestors
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
