{{- if and .Values.enabled .Values.global.appConfig.incomingEmail.enabled }}
{{- $imageCfg := dict "global" .Values.global.image "local" .Values.image -}}
{{- $initImageCfg := dict "global" .Values.global.busybox.image "local" .Values.init.image -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "gitlab.standardLabels" . | nindent 4 }}
    {{- include "gitlab.commonLabels" . | nindent 4 }}
  annotations:
    {{- include "gitlab.deploymentAnnotations" . | nindent 4 }}
spec:
  # Don't provide replicas when HPA are present
  # replicas: {{ .Values.hpa.minReplicas }}
  selector:
    matchLabels:
      {{- include "gitlab.selectorLabels" . | nindent 6 }}
  {{- if .Values.deployment.strategy }}
  strategy: {{ .Values.deployment.strategy | toYaml | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "gitlab.standardLabels" . | nindent 8 }}
        {{- include "gitlab.commonLabels" . | nindent 8 }}
        {{- include "gitlab.podLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- if eq (default .Values.global.antiAffinity .antiAffinity) "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: {{ default .Values.global.affinity.podAntiAffinity.topologyKey .Values.affinity.podAntiAffinity.topologyKey | quote }}
              labelSelector:
                matchLabels:
                  {{- include "gitlab.selectorLabels" . | nindent 18 }}
      {{- else if eq (default .Values.global.antiAffinity .antiAffinity) "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: {{ default .Values.global.affinity.podAntiAffinity.topologyKey .Values.affinity.podAntiAffinity.topologyKey | quote }}
              labelSelector:
                matchLabels:
                  {{- include "gitlab.selectorLabels" . | nindent 18 }}
      {{- end }}
      {{- if or .Values.serviceAccount.enabled .Values.global.serviceAccount.enabled }}
      serviceAccountName: {{ include "gitlab.serviceAccount.name" . }}
      {{- end }}
      {{- include "gitlab.priorityClassName" . | nindent 6 }}
      initContainers:
        {{- include "gitlab.extraInitContainers" . | nindent 8 }}
        {{- include "gitlab.certificates.initContainer" . | nindent 8 }}
        - name: configure
          command: ['sh', '/config/configure']
          image: {{ include "gitlab.busybox.image" (dict "local" .Values.init "global" $.Values.global.busybox) | quote }}
          {{- include "gitlab.image.pullPolicy" $initImageCfg | indent 10 }}
          env:
          {{- include "gitlab.extraEnv" . | nindent 10 }}
          {{- include "gitlab.extraEnvFrom" (dict "root" $ "local" (dict)) | nindent 12 }}
          volumeMounts:
          {{- include "gitlab.extraVolumeMounts" . | nindent 10 }}
          - name: mailroom-config
            mountPath: /config/configure
            subPath: configure
            readOnly: true
          - name: init-mailroom-secrets
            mountPath: /init-config
            readOnly: true
          - name: mailroom-secrets
            mountPath: /init-secrets
            readOnly: false
          resources:
            {{- toYaml .Values.init.resources | nindent 12 }}
      {{- include "gitlab.image.pullSecrets" $imageCfg | indent 6 }}
      containers:
        {{- include "gitlab.extraContainers" . | nindent 8 }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ coalesce .Values.image.tag (include "gitlab.parseAppVersion" (dict "appVersion" .Chart.AppVersion "prepend" "false")) }}"
          {{- include "gitlab.image.pullPolicy" $imageCfg | indent 10 }}
          env:
          {{- include "gitlab.extraEnv" . | nindent 10 }}
          {{- include "gitlab.extraEnvFrom" (dict "root" $ "local" (dict)) | nindent 10 }}
          volumeMounts:
            - name: mailroom-config
              mountPath: /var/opt/gitlab/mail_room.yml
              subPath: mail_room.yml
            - name: mailroom-secrets
              mountPath: '/etc/gitlab'
              readOnly: true
            {{- include "gitlab.extraVolumeMounts" . | nindent 12 }}
            {{- include "gitlab.certificates.volumeMount" . | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8080
          readinessProbe:
            exec:
              command:
                - /scripts/healthcheck
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "pkill -f 'mail_room'"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- include "gitlab.extraVolumes" . | nindent 6 }}
      - name: mailroom-config
        configMap:
          name: {{ template "fullname" . }}
      - name: init-mailroom-secrets
        projected:
          defaultMode: 0400
          sources:
          {{- include "gitlab.redis.secret" . | nindent 10 }}
          {{- if eq .Values.global.appConfig.incomingEmail.inboxMethod "microsoft_graph" }}
          - secret:
              name: {{ .Values.global.appConfig.incomingEmail.clientSecret.secret | required "Missing required secret containing the OAuth2 Client ID for incoming email. Make sure to set `.Values.global.appConfig.incomingEmail.clientSecret.secret`" }}
              items:
                - key: {{ .Values.global.appConfig.incomingEmail.clientSecret.key }}
                  path: mailroom/client_id_incoming_email
          {{- else }}
          - secret:
              name: {{ .Values.global.appConfig.incomingEmail.password.secret | required "Missing required secret containing the IMAP password for incoming email. Make sure to set `global.appConfig.incomingEmail.password.secret`" }}
              items:
                - key: {{ .Values.global.appConfig.incomingEmail.password.key }}
                  path: mailroom/password_incoming_email
          {{ end }}
          {{- include "gitlab.appConfig.incomingEmail.mountSecrets" $ | nindent 10 }}
          {{- if .Values.global.appConfig.serviceDeskEmail.enabled }}
          {{- if eq .Values.global.appConfig.serviceDeskEmail.inboxMethod "microsoft_graph" }}
          - secret:
              name: {{ .Values.global.appConfig.serviceDeskEmail.clientSecret.secret | required "Missing required secret containing the OAuth2 Client ID for service desk email. Make sure to set `.Values.global.appConfig.serviceDeskEmail.clientSecret.secret`" }}
              items:
                - key: {{ .Values.global.appConfig.serviceDeskEmail.clientSecret.key }}
                  path: mailroom/client_id_service_desk
          {{- else }}
          - secret:
              name: {{ .Values.global.appConfig.serviceDeskEmail.password.secret | required "Missing required secret containing the IMAP password for service desk email. Make sure to set `global.appConfig.serviceDeskEmail.password.secret`"}}
              items:
                - key: {{ .Values.global.appConfig.serviceDeskEmail.password.key }}
                  path: mailroom/password_service_desk
          {{- end }}
          {{- include "gitlab.appConfig.serviceDeskEmail.mountSecrets" $ | nindent 10 }}
          {{- end }}
      - name: mailroom-secrets
        emptyDir:
          medium: "Memory"
      {{- include "gitlab.certificates.volumes" . | nindent 6 }}
      {{- include "gitlab.nodeSelector" . | nindent 6 }}
{{- end }}
