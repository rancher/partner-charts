{{- if .Values.enabled -}}
{{- $imageCfg := dict "global" .Values.global.image "local" .Values.image -}}
{{- $initImageCfg := dict "global" .Values.global.busybox.image "local" .Values.init.image -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "gitlab.standardLabels" . | nindent 4 }}
    {{- include "gitlab.commonLabels" . | nindent 4 }}
  annotations:
    {{- include "gitlab.deploymentAnnotations" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "gitlab.selectorLabels" . | nindent 6 }}
  {{- if .Values.deployment.strategy }}
  strategy: {{ .Values.deployment.strategy | toYaml | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "gitlab.standardLabels" . | nindent 8 }}
        {{- include "gitlab.commonLabels" . | nindent 8 }}
        {{- include "gitlab.podLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yml") . | sha256sum }}
        checksum/config-sshd: {{ include (print $.Template.BasePath "/configmap-sshd.yml") . | sha256sum }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- if and .Values.metrics.enabled (not .Values.metrics.serviceMonitor.enabled) }}
      {{- if .Values.metrics.annotations }}
        {{- toYaml .Values.metrics.annotations | nindent 8 }}
      {{- else }}
        gitlab.com/prometheus_scrape: "true"
        gitlab.com/prometheus_port: {{ .Values.metrics.port | quote }}
        gitlab.com/prometheus_path: {{ .Values.metrics.path }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.metrics.port | quote }}
        prometheus.io/path: {{ .Values.metrics.path }}
      {{- end }}
      {{- end }}
    spec:
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- include "gitlab.priorityClassName" . | nindent 6 }}
      initContainers:
        {{- include "gitlab.extraInitContainers" . | nindent 8 }}
        {{- include "gitlab.certificates.initContainer" . | nindent 8 }}
        - name: configure
          command: ['sh', '/config/configure']
          image: {{ include "gitlab.busybox.image" (dict "local" .Values.init "global" $.Values.global) | quote }}
          {{- include "gitlab.image.pullPolicy" $initImageCfg | indent 10 }}
          env:
          {{- include "gitlab.extraEnv" . | nindent 10 }}
          {{- include "gitlab.extraEnvFrom" (dict "root" $ "local" (dict)) | nindent 10 }}
          volumeMounts:
          {{- include "gitlab.extraVolumeMounts" . | nindent 10 }}
          - name: shell-config
            mountPath: /config
            readOnly: true
          - name: shell-init-secrets
            mountPath: /init-config
            readOnly: true
          - name: shell-secrets
            mountPath: /init-secrets
            readOnly: false
          resources:
            {{- toYaml .Values.init.resources | nindent 12 }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- include "gitlab.image.pullSecrets" $imageCfg | indent 6 }}
      {{- if eq (default .Values.global.antiAffinity .Values.antiAffinity) "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: {{ default .Values.global.affinity.podAntiAffinity.topologyKey .Values.affinity.podAntiAffinity.topologyKey | quote }}
              labelSelector:
                matchLabels:
                  {{- include "gitlab.selectorLabels" . | nindent 18 }}
      {{- else if eq (default .Values.global.antiAffinity .Values.antiAffinity) "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: {{ default .Values.global.affinity.podAntiAffinity.topologyKey .Values.affinity.podAntiAffinity.topologyKey | quote }}
              labelSelector:
                matchLabels:
                  {{- include "gitlab.selectorLabels" . | nindent 18 }}
      {{- end }}
      {{- if or .Values.serviceAccount.enabled .Values.global.serviceAccount.enabled }}
      serviceAccountName: {{ include "gitlab.serviceAccount.name" . }}
      {{- end }}
      automountServiceAccountToken: false
      containers:
        {{- include "gitlab.extraContainers" . | nindent 8 }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ coalesce .Values.image.tag (include "gitlab.parseAppVersion" (dict "appVersion" .Chart.AppVersion "prepend" "true")) }}{{ include "gitlab.image.tagSuffix" . }}"
          {{- include "gitlab.image.pullPolicy" $imageCfg | indent 10 }}
          ports:
          {{- if .Values.metrics.enabled }}
            - containerPort: {{ .Values.metrics.port }}
              name: http-metrics
          {{- end }}
            - containerPort: {{ .Values.service.internalPort }}
              name: ssh
          env:
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/etc/gitlab-shell'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab-shell'
            - name: KEYS_DIRECTORY
              value: '/etc/gitlab-secrets/ssh'
            - name: SSH_DAEMON
              value: {{ .Values.sshDaemon | quote }}
            {{- include "gitlab.extraEnv" . | nindent 12 }}
            {{- include "gitlab.extraEnvFrom" (dict "root" $ "local" (dict)) | nindent 12 }}
          volumeMounts:
            - name: shell-config
              mountPath: '/etc/gitlab-shell'
            - name: shell-secrets
              mountPath: '/etc/gitlab-secrets'
              readOnly: true
            - name: shell-config
              mountPath: '/etc/krb5.conf'
              subPath: krb5.conf
              readOnly: true
            {{- if .Values.config.gssapi.enabled }}
            - name: gssapi-keytab
              mountPath: '/etc/krb5.keytab'
              subPath: {{ .Values.config.gssapi.keytab.key }}
              readOnly: true
            {{- end }}
            {{- if eq .Values.sshDaemon "openssh" }}
            - name: sshd-config
              mountPath: /etc/ssh/sshd_config
              subPath: sshd_config
              readOnly: true
            {{- end }}
            {{- include "gitlab.extraVolumeMounts" . | nindent 12 }}
            {{- include "gitlab.certificates.volumeMount" . | nindent 12 }}
          livenessProbe:
            {{- if eq .Values.sshDaemon "gitlab-sshd" }}
            httpGet:
              port: {{ .Values.metrics.port }}
              path: /health
            {{- else }}
            exec:
              command:
              - /scripts/healthcheck
            {{- end }}
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
          readinessProbe:
            {{- if eq .Values.sshDaemon "gitlab-sshd"}}
            httpGet:
              port: {{ .Values.metrics.port }}
              path: /start
            {{- else }}
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            {{- end }}
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.deployment.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds | int }}
      {{- end }}
      volumes:
      {{- include "gitlab.extraVolumes" . | nindent 6 }}
      - name: shell-config
        configMap:
          name: {{ template "fullname" . }}
      {{- if .Values.config.gssapi.enabled }}
      - name: gssapi-keytab
        secret:
          secretName: {{ .Values.config.gssapi.keytab.secret }}
      {{- end }}
      {{- if eq .Values.sshDaemon "openssh" }}
      - name: sshd-config
        configMap:
          name: {{ template "fullname" . }}-sshd
      {{- end }}
      - name: shell-init-secrets
        projected:
          defaultMode: 0440
          sources:
            - secret:
                name: {{ template "gitlab.gitlab-shell.hostKeys.secret" . }}
            - secret:
                name: {{ template "gitlab.gitlab-shell.authToken.secret" . }}
                items:
                  - key: {{ template "gitlab.gitlab-shell.authToken.key" . }}
                    path: shell/.gitlab_shell_secret
      # Actual config dirs that will be used in the container
      - name: shell-secrets
        emptyDir:
          medium: "Memory"
      {{- include "gitlab.certificates.volumes" . | nindent 6 }}
      {{- include "gitlab.nodeSelector" . | nindent 6 }}
{{- end }}
