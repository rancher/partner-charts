# Default values for gitlab-shell.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: registry.gitlab.com/gitlab-org/build/cng/gitlab-shell
  # pullPolicy: IfNotPresent
  # pullSecrets: []
  # tag: master
service:
  name: gitlab-shell
  type: ClusterIP
  internalPort: 2222
  externalTrafficPolicy: Cluster
  # nodePort: xxx
  # loadBalancerIP: x.x.x.x
  # loadBalancerSourceRanges:
  # - x.x.x.x/yy
  # externalIPs:
  # - x.x.x.x
  # - y.y.y.y

init:
  image: {}
    # repository:
    # tag:
  resources:
    requests:
      cpu: 50m

# Tolerations for pod scheduling
tolerations: []

# Priority class assigned to pods
priorityClassName: ""

global: {}

enabled: true
annotations: {}
podLabels: {}
common:
  labels: {}
serviceLabels: {}
workhorse: {}
  # by default, Workhorse is a part of the webservice Pods / Service
  # scheme: 'http'
  # host: '0.0.0.0'
  # serviceName: 'webservice'
  # port: 8181
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  requests:
    cpu: 0
    memory: 6M
maxUnavailable: 1
minReplicas: 2
maxReplicas: 10

hpa:
  # targetAverageValue: 100m  # DEPRECATED: in favor of `hpa.cpu.targetAverageValue` below
  cpu:
    targetType: AverageValue  # Utilization or AverageValue
    targetAverageValue: 100m
    # targetAverageUtilization: 75
  # memory:
  #   targetType: Utilization  # Utilization or AverageValue
  #   targetAverageValue: 1G
  #   targetAverageUtilization: 75
  # Note that the HPA is limited to autoscaling/v2beta1, autoscaling/v2beta2 and autoscaling/v2
  customMetrics: []  # Overrides HPA metrics definition
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300

deployment:
  terminationGracePeriodSeconds: 30
  livenessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 2
  strategy: {}

logging:
  format: "text"
  sshdLogLevel: "ERROR"

config:
  clientAliveInterval: 0
  loginGraceTime: 60
  maxStartups:
    start: 10
    rate: 30
    full: 100
  proxyProtocol: false
  proxyPolicy: "use"
  proxyHeaderTimeout: 500ms
  ciphers: [aes128-gcm@openssh.com, chacha20-poly1305@openssh.com, aes256-gcm@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr]
  kexAlgorithms: [curve25519-sha256, curve25519-sha256@libssh.org, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521, diffie-hellman-group14-sha256, diffie-hellman-group14-sha1]
  macs: [hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1]
  gssapi:
    enabled: false
    libpath: "libgssapi_krb5.so.2"
    keytab:
      #secret:
      key: keytab
    krb5Config: ""
    servicePrincipalName: ""

## Allow to overwrite under which User and Group we're running.
securityContext:
  runAsUser: 1000
  fsGroup: 1000

## Enable deployment to use a serviceAccount
serviceAccount:
  enabled: false
  create: false
  annotations: {}
  ## Name to be used for serviceAccount, otherwise defaults to chart fullname
  # name:

metrics:
  enabled: false
  port: 9122
  path: /metrics
  serviceMonitor:
    enabled: false
    additionalLabels: {}
    endpointConfig: {}
  # DEPRECATED
  annotations: {}

networkpolicy:
  enabled: false
  egress:
    enabled: false
    rules: []
  ingress:
    enabled: false
    rules: []
  annotations: {}

## Allow to select ssh daemon that would be executed inside container
## Possible values: openssh, gitlab-sshd
sshDaemon: openssh

affinity:
  podAntiAffinity:
    topologyKey:
