apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "admin-ui.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    APP_NAME: admin-ui
{{ include "admin-ui.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if or (.Values.additionalAnnotations) (index .Values.global "admin-ui" "customAnnotations" "deployment") }}
  annotations:
{{- if .Values.additionalAnnotations }}
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
{{- if index .Values.global "admin-ui" "customAnnotations" "deployment" }}
{{ toYaml (index .Values.global "admin-ui" "customAnnotations" "deployment") | indent 4 }}
{{- end }}
{{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ include "admin-ui.name" . }}
  template:
    metadata:
      labels:
        APP_NAME: admin-ui
        app: {{ .Release.Name }}-{{ include "admin-ui.name" . }}
      {{- if or (.Values.global.istio.ingress) (index .Values.global "admin-ui" "customAnnotations" "pod") }}
      annotations:
      {{- if .Values.global.istio.ingress }}
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      {{- end }}
      {{- if index .Values.global "admin-ui" "customAnnotations" "pod" }}
      {{ toYaml (index .Values.global "admin-ui" "customAnnotations" "pod") | indent 4 }}
      {{- end }}
      {{- end }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy | quote }}
    {{- with .Values.dnsConfig }}
      dnsConfig:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- include "admin-ui.topology-spread-constraints" . | indent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      containers:
      - name: {{ include "admin-ui.name" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        env:
          {{- include "admin-ui.usr-envs" . | indent 12 }}
          {{- include "admin-ui.usr-secret-envs" . | indent 12 }}
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
        {{- if or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local") ( .Values.customScripts) (.Values.customCommand) }}
        command:
          {{- if .Values.customCommand }}
          {{- toYaml .Values.customCommand | nindent 12 }}
          {{- else }}
          - /bin/sh
          - -c
          - |
              {{- with .Values.customScripts }}
              {{- toYaml . | replace "- " "" | nindent 14}}
              {{- end }}
              {{- if and (not .Values.global.isFqdnRegistered ) (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
              /usr/bin/python3 /scripts/updatelbip.py &
              {{- end}}
          {{- end}}
        {{- end}}
        ports:
        - name: {{ .Values.service.name }}
          containerPort: {{ .Values.service.port }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-config-cm
        {{ if .Values.global.usrEnvs.secret }}
        - secretRef:
            name: {{ .Release.Name }}-global-user-custom-envs
        {{- end }}
        {{ if .Values.global.usrEnvs.normal }}
        - configMapRef:
            name: {{ .Release.Name }}-global-user-custom-envs
        {{- end }}
        lifecycle:
{{- toYaml .Values.lifecycle | nindent 10 }}
        volumeMounts:
        {{- with .Values.volumeMounts }}
{{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with (include "cn.config.schema" . | fromYaml).volumeMounts }}
{{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if and (not .Values.global.isFqdnRegistered ) (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
          - name: {{ include "admin-ui.fullname" .}}-updatelbip
            mountPath: "/scripts"
        {{- end }}
        livenessProbe:
{{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
{{- toYaml .Values.readinessProbe | nindent 10 }}
        {{- if .Values.global.cloud.testEnviroment }}
        resources: {}
        {{- else }}
        resources:
{{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
      {{- if not .Values.global.isFqdnRegistered  }}
      hostAliases:
      - ip: {{ .Values.global.lbIp }}
        hostnames:
        - {{ .Values.global.fqdn }}
      {{- end }}
      volumes:
      {{- with .Values.volumes }}
{{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and (not .Values.global.isFqdnRegistered ) (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
        - name: {{ include "admin-ui.fullname" . }}-updatelbip
          configMap:
            name: {{ .Release.Name }}-updatelbip
      {{- end }}
      {{- with (include "cn.config.schema" . | fromYaml).volumes }}
{{- toYaml . | nindent 8 }}
      {{- end }}
