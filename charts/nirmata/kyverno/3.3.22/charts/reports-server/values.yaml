# -- Internal settings used with `helm template` to generate install manifest
# @ignored
templating:
  enabled: false
fipsEnabled: false
cloudnative-pg:
  crds:
    create: false

postgresql:

  # -- Deploy postgresql dependency chart
  enabled: false

  auth:

    postgresPassword: reports

    database: reportsdb

# -- Name override
nameOverride: ""

# -- Full name override
fullnameOverride: ""

# -- Number of pod replicas
replicaCount: 1

image:
  # -- Image registry
  registry: reg.nirmata.io
  # -- Image repository
  repository: nirmata/reports-server
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image tag (will default to app version if not set)
  tag: ~

# -- Image pull secrets
imagePullSecrets: []

# -- Priority class name
priorityClassName: system-cluster-critical

serviceAccount:
  # -- Create service account
  create: true

  # -- Service account annotations
  annotations: {}

  # -- Service account name (required if `serviceAccount.create` is `false`)
  name: ""

# -- Pod annotations
podAnnotations: {}

# -- Labels to add to resources managed by the chart
commonLabels: {}

# -- Pod security context
podSecurityContext:
  fsGroup: 2000

# -- Provide additional environment variables to the pods. Map with the same format as kubernetes deployment spec's env.
podEnv: {}

# -- Container security context
# @default -- See [values.yaml](values.yaml)
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  privileged: false
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault

# -- Liveness probe
livenessProbe:
  initialDelaySeconds: 20
  failureThreshold: 10
  periodSeconds: 10
  httpGet:
    path: /livez
    port: https
    scheme: HTTPS

# -- Readiness probe
readinessProbe:
  initialDelaySeconds: 30
  failureThreshold: 10
  periodSeconds: 10
  httpGet:
    path: /readyz
    port: https
    scheme: HTTPS

metrics:
  # -- Enable prometheus metrics
  enabled: true

  serviceMonitor:
    # -- Enable service monitor for scraping prometheus metrics
    enabled: false

    # -- Service monitor additional labels
    additionalLabels: {}

    # -- Service monitor scrape interval
    interval: ""

    # -- Service monitor metric relabelings
    metricRelabelings: []

    # -- Service monitor relabelings
    relabelings: []

    # -- Service monitor scrape timeout
    scrapeTimeout: ""

# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources:
  # -- Container resource limits
  limits:
    # cpu: 100m
    # memory: 128Mi

  # -- Container resource requests
  requests:
    # cpu: 100m
    # memory: 128Mi

autoscaling:
  # -- Enable autoscaling
  enabled: false

  # -- Min number of replicas
  minReplicas: 1

  # -- Max number of replicas
  maxReplicas: 100

  # -- Target CPU utilisation
  targetCPUUtilizationPercentage: 80

  # -- Target Memory utilisation
  targetMemoryUtilizationPercentage: ~


# -- Using a PDB is highly recommended for highly available deployments. Defaults to enabled. The default configuration doesn't prevent disruption when using a single replica
pdb:
  # -- Enable PodDisruptionBudget
  enabled: true
  # -- minAvailable pods for PDB, cannot be used together with maxUnavailable
  minAvailable: ~
  # -- maxUnavailable pods for PDB, will take precedence over minAvailable if both are defined
  maxUnavailable: 50%

# -- Node selector
nodeSelector: {}

# -- Tolerations
tolerations: []

# -- Affinity
affinity: {}

service:
  # -- Service type
  type: ClusterIP

  # -- Service port
  port: 443

config:

  etcd:
    image:
      # -- Image registry
      registry: ghcr.io
      # -- Image repository
      repository: nirmata/etcd
      # -- Image tag
      tag: v3.5.18-cve-free

    # -- Image pull secrets
    imagePullSecrets: []

    enabled: true
    endpoints: ~
    insecure: true
    # PVC Storage configuration for etcd persistence:
    # - Default: If not specified, the chart will allocate 2Gi of storage.
    # - Override: Set a custom storage size (e.g., "2Gi", "5Gi") as needed.
    # - NOTE: keep this **10‑20 % greater** than `quotaBackendBytes`
    # This value defines the size of the persistent volume claim (PVC) for etcd.
    storage: 2Gi

  # Quota for etcd’s internal database (BoltDB) **in bytes**
  # - What it limits: the logical size of the etcd DB file, *not* the PVC.
  # - Format: plain integer bytes (no Ki/Mi/Gi suffix).
    quotaBackendBytes: 1932735283

    ## @param nodeSelector [object] Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}

    ## @param tolerations [array] Tolerations for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  db:

    # -- If set, a secret will be created with the database connection information. If this is set to true, secretName must be set.
    secretCreation: false

    # -- If set, database connection information will be read from the Secret with this name. Overrides `db.host`, `db.name`, `db.user`, `db.password` and `db.readReplicaHosts`.
    secretName: ""

    # -- Database host
    host: reports-server-cluster-rw.reports-server

    # -- The database host will be read from this `key` in the specified Secret, when `db.secretName` is set.
    hostSecretKeyName: "host"

    # -- Database read replica hosts
    readReplicaHosts: ""

    # -- The database read replica hosts will be read from this `key` in the specified Secret, when `db.secretName` is set.
    readReplicaHostsSecretKeyName: readReplicaHosts

    # -- Database port
    port:
    # -- The database port will be read from this `key` in the specified Secret, when `db.secretName` is set.
    portSecretKeyName: "port"

    # -- Database name
    name: reportsdb
    # -- The database name will be read from this `key` in the specified Secret, when `db.secretName` is set.
    dbNameSecretKeyName: "dbname"

    # -- Database user
    user: app

    # -- The database username will be read from this `key` in the specified Secret, when `db.secretName` is set.
    userSecretKeyName: "username"

    # -- Database password
    password: password

    # -- The database password will be read from this `key` in the specified Secret, when `db.secretName` is set.
    passwordSecretKeyName: "password"

    # -- Database SSL
    sslmode: disable

    # -- Database SSL root cert
    sslrootcert: ""

    # -- Database SSL key
    sslkey: ""

    # -- Database SSL cert
    sslcert: ""

    # -- Volume configuration for RDS certificate
    sslrds:
      secretName: ""
      mountPath: "/etc/ssl/rds"

apiServicesManagement:
  # -- Create a helm hooks to delete api services on uninstall
  enabled: true

  # -- Install api services in manifest
  installApiServices:

    # -- Store reports in reports-server
    enabled: false

    # -- Store ephemeral reports in reports-server
    installEphemeralReportsService: true

  image:
    # -- (string) Image registry
    # -- (string) Image registry
    registry: ghcr.io
    # -- Image repository
    repository: nirmata/kubectl
    # -- Image tag
    # Defaults to `latest` if omitted
    tag: '1.30.2'
    # -- (string) Image pull policy
    # Defaults to image.pullPolicy if omitted
    pullPolicy: ~

  # -- Image pull secrets
  imagePullSecrets: []

  # -- Security context for the pod
  podSecurityContext: {}

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- List of node taints to tolerate
  tolerations: []

  # -- Pod anti affinity constraints.
  podAntiAffinity: {}

  # -- Pod affinity constraints.
  podAffinity: {}

  # -- Pod labels.
  podLabels: {}

  # -- Pod annotations.
  podAnnotations: {}

  # -- Node affinity constraints.
  nodeAffinity: {}

  # -- Security context for the hook containers
  securityContext:
    runAsUser: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
