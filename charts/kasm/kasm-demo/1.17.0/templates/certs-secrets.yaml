{{/*
Generate TLS Certificates and upload as secrets
*/}}
{{- $altNames := list }}
{{- $certValue := "" }}
{{- $keyValue := "" }}
{{- $ca := genCA "kasm-ca" 365 }}
{{- $namespace := .Values.global.namespace | default .Release.Namespace | quote }}
{{- range $key, $value := .Values.kasmCerts }}
  {{- $secretsObj := (lookup "v1" "Secret" $namespace $value.name) | default dict }}
  {{- if or (and (eq "ingress" $key) (eq $value.create true) (eq (len $secretsObj) 0)) (and (eq "kasmProxy" $key) (eq $value.create true) (eq (len $secretsObj) 0)) (and (eq "rdpGateway" $key) (eq $value.create true) (eq $.Values.kasmApp.servicesToDeploy.rdpGateway.deploy true) (eq (len $secretsObj) 0)) (and (eq "db" $key) (eq $value.create true) (eq (len $secretsObj) 0)) }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ $value.name }}
  namespace: {{ $.Values.global.namespace | default $.Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $value.name }}
    {{- include "kasm.defaultLabels" $ | indent 4 }}
  annotations:
    helm.sh/hook: pre-install,post-delete
    {{- if contains "SSL Cert here" $value.cert }}
      {{- if eq "ingress" $key }}
        {{- $altNames = append $.Values.global.altHostnames $.Values.global.hostname }}
      {{ else }}
        {{- $altNames = list (kebabcase $key) }}
      {{- end }}
      {{- $cert := genSignedCert ( $.Values.global.hostname | quote ) nil $altNames 365 $ca }}
      {{- $certValue = $cert.Cert }}
      {{- $keyValue = $cert.Key }}
    {{- else }}
      {{- $certValue = $value.cert }}
      {{- $keyValue = $value.key }}
    {{- end }}
type: Opaque
data:
  tls.crt: {{ $certValue | b64enc }}
  tls.key: {{ $keyValue | b64enc }}

---
  {{- end }}
{{- end }}