apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kasmApp.servicesToDeploy.kasmManager.name }}-deployment
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.kasmManager.name }}
    {{- include "kasm.defaultLabels" . | indent 4 }}
spec:
  replicas: {{ .Values.kasmApp.servicesToDeploy.kasmManager.replicas | default (include "replicas.preset" (dict "node" "manager" "size" .Values.kasmApp.deploymentSize)) }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: {{ add1 (.Values.kasmApp.servicesToDeploy.kasmManager.replicas | default (include "replicas.preset" (dict "node" "manager" "size" .Values.kasmApp.deploymentSize))) }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.kasmManager.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.kasmManager.name }}
        {{- include "kasm.defaultLabels" . | indent 8 }}
    spec:
      restartPolicy: {{ .Values.global.image.restartPolicy }}
      {{- if .Values.global.image.pullSecrets }}
        {{- include "image.pullSecrets" . | indent 6 }}
      {{- end }}
      {{- if .Values.kasmApp.applyHardening }}
        {{- include "kasm.podSecurity" . | indent 6 }}
      {{- end }}
      initContainers:
        {{- include "kasm.initContainer" (dict "serviceName" "kasm-api" "servicePort" "8080" "path" "/api/__healthcheck" "schema" "http") | nindent 8 }}
        {{- if .Values.kasmApp.applyHardening }}
          {{- include "kasm.containerSecurity" . | indent 10 }}
        {{- end }}
      containers:
        - name: {{ .Values.kasmApp.servicesToDeploy.kasmManager.name }}-container
          image: "{{ .Values.kasmApp.servicesToDeploy.kasmManager.image }}:{{ .Values.kasmApp.servicesToDeploy.kasmManager.tag }}"
          env:
            - name: LOG_LEVEL
              value: INFO
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.kasmApp.name | default "kasm" }}-secrets
                  key: db-password
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          ports:
            - name: {{ .Values.kasmApp.servicesToDeploy.kasmManager.name }}-pt
              containerPort: 8181
              protocol: TCP
          {{- if .Values.kasmApp.servicesToDeploy.kasmManager.addHealthChecks }}
          livenessProbe:
            {{- include "health.tcp" (dict "portName" (printf "%s-pt" .Values.kasmApp.servicesToDeploy.kasmManager.name) ) | indent 12 }}
          {{- end }}
          {{- if .Values.kasmApp.servicesToDeploy.kasmManager.addHealthChecks }}
          readinessProbe:
            {{- include "health.http" (dict "path" "/__healthcheck" "portName" (printf "%s-pt" .Values.kasmApp.servicesToDeploy.kasmManager.name) ) | indent 12 }}
          {{- end }}
          {{- if .Values.kasmApp.servicesToDeploy.kasmManager.resources }}
          resources: {{- toYaml .Values.kasmApp.servicesToDeploy.kasmManager.resources | nindent 12 }}
          {{- else }}
          resources: {{- include "resources.preset" (dict "node" "manager" "size" .Values.kasmApp.deploymentSize) | nindent 12 }}
          {{- end }}
          {{- if .Values.kasmApp.applyHardening }}
            {{- include "kasm.containerSecurity" . | indent 10 }}
          {{- end }}
          volumeMounts:
            - name: manager-tmp
              mountPath: /tmp
      volumes:
        - name: manager-tmp
          emptyDir:
            sizeLimit: 1Gi
{{ include "kasm.serviceTemplate" (list . "kasm-manager" .Values.kasmApp.servicesToDeploy.kasmManager.name (list 8181) ) }}