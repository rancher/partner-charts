apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kasmApp.servicesToDeploy.kasmProxy.name }}-deployment
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.kasmProxy.name }}
    {{- include "kasm.defaultLabels" . | indent 4 }}
spec:
  replicas: {{ .Values.kasmApp.servicesToDeploy.kasmProxy.replicas | default (include "replicas.preset" (dict "node" "proxy" "size" .Values.kasmApp.deploymentSize)) }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.kasmProxy.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.kasmApp.servicesToDeploy.kasmProxy.name }}
        {{- include "kasm.defaultLabels" . | indent 8 }}
    spec:
      restartPolicy: {{ .Values.global.image.restartPolicy }}
      {{- if .Values.global.image.pullSecrets }}
        {{- include "image.pullSecrets" . | indent 6 }}
      {{- end }}
      {{- if .Values.kasmApp.applyHardening }}
        {{- include "kasm.podSecurity" . | indent 6 }}
      {{- end }}
      initContainers:
        {{- if .Values.kasmApp.applyHardening }}
        - name: proxy-data-perms
          image: busybox
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -ec
            - |
              echo "Setting permissions and ownership for /var/cache/nginx..." && chown -R 1000:1000 /var/cache/nginx && chmod -R 755 /var/cache/nginx
              echo "Setting permissions and ownership for /var/log/external/nginx..." && chown -R 1000:1000 /var/log/external/nginx && chmod -R 755 /var/log/external/nginx
              echo "Setting permissions and ownership for /tmp..." && chmod -R 777 /tmp
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
            - name: kasm-proxy-data
              mountPath: /var/cache/nginx
            - name: kasm-proxy-data
              mountPath: /var/log/external/nginx
            - name: kasm-proxy-data
              mountPath: /run
        {{- end }}
        {{- include "kasm.initContainer" (dict "serviceName" "kasm-api" "servicePort" "8080" "path" "/api/__healthcheck" "schema" "http") | nindent 8 }}
        {{- if .Values.kasmApp.applyHardening }}
          {{- include "kasm.containerSecurity" . | indent 10 }}
        {{- end }}
        {{- include "kasm.initContainer" (dict "serviceName" "kasm-manager" "servicePort" "8181" "path" "/__healthcheck" "schema" "http") | nindent 8 }}
        {{- if .Values.kasmApp.applyHardening }}
          {{- include "kasm.containerSecurity" . | indent 10 }}
        {{- end }}
        {{- if .Values.kasmApp.servicesToDeploy.kasmShare.deploy }}
          {{- include "kasm.initContainer" (dict "serviceName" "kasm-share" "servicePort" "8182" "path" "/__healthcheck" "schema" "http") | nindent 8 }}
          {{- if .Values.kasmApp.applyHardening }}
            {{- include "kasm.containerSecurity" . | indent 10 }}
          {{- end }}
        {{- end }}
        {{- if .Values.kasmApp.servicesToDeploy.kasmGuac.deploy }}
          {{- include "kasm.initContainer" (dict "serviceName" "kasm-guac" "servicePort" "3000" "path" "/__healthcheck" "schema" "http") | nindent 8 }}
          {{- if .Values.kasmApp.applyHardening }}
            {{- include "kasm.containerSecurity" . | indent 10 }}
          {{- end }}
        {{- end }}
        {{- if .Values.kasmApp.servicesToDeploy.rdpGateway.deploy }}
          {{- include "kasm.initContainer" (dict "serviceName" "rdp-gateway" "servicePort" "5555" "path" "/__healthcheck" "schema" "http") | nindent 8 }}
          {{- if .Values.kasmApp.applyHardening }}
            {{- include "kasm.containerSecurity" . | indent 10 }}
          {{- end }}
        {{- end }}
      containers:
        - name: {{ .Values.kasmApp.servicesToDeploy.kasmProxy.name }}-container
          image: "{{ .Values.kasmApp.servicesToDeploy.kasmProxy.image }}:{{ .Values.kasmApp.servicesToDeploy.kasmProxy.tag }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          {{- if .Values.kasmApp.servicesToDeploy.kasmProxy.resources }}
          resources: {{- toYaml .Values.kasmApp.servicesToDeploy.kasmProxy.resources | nindent 12 }}
          {{- else }}
          resources: {{- include "resources.preset" (dict "node" "proxy" "size" .Values.kasmApp.deploymentSize) | nindent 12 }}
          {{- end }}
          {{- if .Values.kasmApp.applyHardening }}
            {{- include "kasm.containerSecurity" . | indent 10 }}
          {{- end }}
          volumeMounts:
            - name: nginx-proxy-cert
              mountPath: /etc/ssl/certs/kasm_nginx.crt
              subPath: tls.crt
            - name: nginx-proxy-cert
              mountPath: /etc/ssl/private/kasm_nginx.key
              subPath: tls.key
            - name: nginx-proxy-settings-config
              mountPath: /etc/nginx/conf.d
            - name: nginx-proxy-services-config
              mountPath: /etc/nginx/conf.d/services.d
            - name: nginx-proxy-base-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            {{- if .Values.kasmApp.applyHardening }}
            - name: kasm-proxy-data
              mountPath: /var/cache/nginx
            - name: kasm-proxy-data
              mountPath: /var/log/external/nginx
            - name: kasm-proxy-data
              mountPath: /run
            {{- end }}
          ports:
            - name: {{ .Values.kasmApp.servicesToDeploy.kasmProxy.name }}-port
              containerPort: 8080
              protocol: TCP
          {{- if .Values.kasmApp.servicesToDeploy.kasmProxy.addHealthChecks }}
          livenessProbe:
            {{- include "health.tcp" (dict "portName" (printf "%s-port" .Values.kasmApp.servicesToDeploy.kasmProxy.name) ) | indent 12 }}
          {{- end }}
          {{- if .Values.kasmApp.servicesToDeploy.kasmProxy.addHealthChecks }}
          readinessProbe:
            {{- include "health.command" (dict "command" "nginx -t") | indent 12 }}
          {{- end }}
      volumes:
        - name: nginx-proxy-cert
          secret:
            secretName: {{ .Values.kasmCerts.kasmProxy.name }}
        - name: nginx-proxy-base-config
          configMap:
            name: {{ .Values.kasmApp.servicesToDeploy.kasmProxy.name }}-base-configmap
        - name: nginx-proxy-settings-config
          configMap:
            name: {{ .Values.kasmApp.servicesToDeploy.kasmProxy.name }}-settings-configmap
        - name: nginx-proxy-services-config
          configMap:
            name: {{ .Values.kasmApp.servicesToDeploy.kasmProxy.name }}-services-configmap
        {{- if .Values.kasmApp.applyHardening }}
        - name: kasm-proxy-data
          emptyDir:
            sizeLimit: 1Gi
        {{- end }}
{{ include "kasm.serviceTemplate" (list . "kasm-proxy" .Values.kasmApp.servicesToDeploy.kasmProxy.name (list 8080 8443) ) }}
