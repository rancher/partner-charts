# Copyright 2022 TriggerMesh Inc.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: memorybrokers.eventing.triggermesh.io
  labels:
    triggermesh.io/crd-install: 'true'
spec:
  group: eventing.triggermesh.io
  scope: Namespaced
  names:
    kind: MemoryBroker
    listKind: MemoryBrokerList
    plural: memorybrokers
    singular: memorybroker
    categories:
      - all
      - triggermesh
      - brokers
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: MemoryBroker is the Schema for the memorybrokers API
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MemoryBrokerSpec defines the desired state of MemoryBroker
              type: object
              properties:
                memory:
                  description: Memory options.
                  type: object
                  properties:
                    bufferSize:
                      description: Maximum number of elements to buffer.
                      type: integer
                broker:
                  description: Broker options.
                  type: object
                  properties:
                    port:
                      description: Broker HTTP port.
                      type: integer
                    observability:
                      description: Observability parameters for the Broker.
                      type: object
                      properties:
                        valueFromConfigMap:
                          description: ConfigMap that contains the observability parameters.
                          type: string
                      required:
                        - valueFromConfigMap
            status:
              description: Status represents the current state of the Broker. This data may be out of date.
              type: object
              properties:
                address:
                  description: Broker is Addressable. It exposes the endpoint as an URI to get events delivered into the Broker mesh.
                  type: object
                  properties:
                    url:
                      type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - status
                    properties:
                      lastTransitionTime:
                        description: 'LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).'
                        type: string
                      message:
                        description: 'A human readable message indicating details about the transition.'
                        type: string
                      reason:
                        description: 'The reason for the condition''s last transition.'
                        type: string
                      severity:
                        description: 'Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.'
                        type: string
                      status:
                        description: 'Status of the condition, one of True, False, Unknown.'
                        type: string
                      type:
                        description: 'Type of condition.'
                        type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: redisbrokers.eventing.triggermesh.io
  labels:
    triggermesh.io/crd-install: 'true'
spec:
  group: eventing.triggermesh.io
  scope: Namespaced
  names:
    kind: RedisBroker
    listKind: RedisBrokerList
    plural: redisbrokers
    singular: redisbroker
    categories:
      - all
      - triggermesh
      - brokers
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: RedisBroker is the Schema for the redisbrokers API
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: RedisBrokerSpec defines the desired state of RedisBroker
              type: object
              properties:
                redis:
                  description: Redis options.
                  type: object
                  properties:
                    connection:
                      description: Redis connection.
                      type: object
                      properties:
                        url:
                          description: URL of the Redis standalone instance.
                          type: string
                        clusterURLs:
                          description: URLs for the Redis cluster instances.
                          type: array
                          items:
                            type: string
                        username:
                          description: Redis username.
                          type: object
                          properties:
                            secretKeyRef:
                              description: A reference to a Kubernetes Secret object.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                        password:
                          description: Redis password.
                          type: object
                          properties:
                            secretKeyRef:
                              description: A reference to a Kubernetes Secret object.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                        tlsCACertificate:
                          description: Contains a CA certificate used to connect to Redis.
                          type: object
                          properties:
                            secretKeyRef:
                              description: A reference to a Kubernetes Secret object.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                        tlsCertificate:
                          description: Contains a certificate used to connect to authenticate to Redis.
                          type: object
                          properties:
                            secretKeyRef:
                              description: A reference to a Kubernetes Secret object.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                        tlsKey:
                          description: Contains a key certificate used to connect to authenticate to Redis.
                          type: object
                          properties:
                            secretKeyRef:
                              description: A reference to a Kubernetes Secret object.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                        tlsEnabled:
                          description: Use TLS enctrypted Redis connection.
                          type: boolean
                        tlsSkipVerify:
                          description: Skip TLS certificate verification. If caCertificate is set, tlsSkipVerify will default to false.
                          type: boolean
                      oneOf:
                        - required: [url]
                        - required: [clusterURLs]
                    stream:
                      description: Redis stream to be used by the broker.
                      type: string
                    streamMaxLen:
                      description: Maximum number of items (approximate) the Redis stream can host.
                      type: integer
                      default: 1000
                    enableTrackingID:
                      description: Whether the Redis ID for the event is added as a CloudEvents attribute. Defaults to false
                      type: boolean
                broker:
                  description: Broker options.
                  type: object
                  properties:
                    port:
                      description: Broker HTTP port.
                      type: integer
                    observability:
                      description: Observability parameters for the Broker.
                      type: object
                      properties:
                        valueFromConfigMap:
                          description: ConfigMap that contains the observability parameters.
                          type: string
                      required:
                        - valueFromConfigMap
            status:
              description: Status represents the current state of the Broker. This data may be out of date.
              type: object
              properties:
                address:
                  description: Broker is Addressable. It exposes the endpoint as an URI to get events delivered into the Broker mesh.
                  type: object
                  properties:
                    url:
                      type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - status
                    properties:
                      lastTransitionTime:
                        description: 'LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).'
                        type: string
                      message:
                        description: 'A human readable message indicating details about the transition.'
                        type: string
                      reason:
                        description: 'The reason for the condition''s last transition.'
                        type: string
                      severity:
                        description: 'Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.'
                        type: string
                      status:
                        description: 'Status of the condition, one of True, False, Unknown.'
                        type: string
                      type:
                        description: 'Type of condition.'
                        type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: triggers.eventing.triggermesh.io
  labels:
    triggermesh.io/crd-install: 'true'
spec:
  group: eventing.triggermesh.io
  scope: Namespaced
  names:
    kind: Trigger
    plural: triggers
    singular: trigger
    categories:
      - all
      - triggermesh
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: 'Trigger represents a request to have events delivered to a subscriber from a Broker''s event pool.'
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of the Trigger.
              type: object
              properties:
                broker:
                  description: Broker is the broker that this trigger receives events from.
                  type: object
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    group:
                      description: 'Group of the API, without the version of the group. This can be used as an alternative to the APIVersion, and then resolved using ResolveGroup. Note: This API is EXPERIMENTAL and might break anytime. For more details: https://github.com/knative/eventing/issues/5086'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.'
                      type: string
                  required:
                    - kind
                    - name
                filters:
                  description: Filters is an experimental field that conforms to the CNCF CloudEvents Subscriptions API. It's an array of filter expressions that evaluate to true or false. If any filter expression in the array evaluates to false, the event MUST NOT be sent to the Subscriber. If all the filter expressions in the array evaluate to true, the event MUST be attempted to be delivered. Absence of a filter or empty array implies a value of true. In the event of users specifying both Filter and Filters, then the latter will override the former. This will allow users to try out the effect of the new Filters field without compromising the existing attribute-based Filter and try it out on existing Trigger objects.
                  items:
                    description: SubscriptionsAPIFilter allows defining a filter expression using CloudEvents Subscriptions API. If multiple filters are specified, then the same semantics of SubscriptionsAPIFilter.All is applied. If no filter dialect or empty object is specified, then the filter always accept the events.
                    properties:
                      all:
                        description: All evaluates to true if all the nested expressions evaluate to true. It must contain at least one filter expression.
                        x-kubernetes-preserve-unknown-fields: true
                      any:
                        description: Any evaluates to true if at least one of the nested expressions evaluates to true. It must contain at least one filter expression.
                        x-kubernetes-preserve-unknown-fields: true
                      cesql:
                        description: CESQL is a CloudEvents SQL expression that will be evaluated to true or false against each CloudEvent.
                        type: string
                      exact:
                        additionalProperties:
                          type: string
                        description: Exact evaluates to true if the value of the matching CloudEvents attribute matches exactly the String value specified (case-sensitive). Exact must contain exactly one property, where the key is the name of the CloudEvents attribute to be matched, and its value is the String value to use in the comparison. The attribute name and value specified in the filter expression cannot be empty strings.
                        type: object
                      not:
                        description: Not evaluates to true if the nested expression evaluates to false.
                        x-kubernetes-preserve-unknown-fields: true
                      prefix:
                        additionalProperties:
                          type: string
                        description: Prefix evaluates to true if the value of the matching CloudEvents attribute starts with the String value specified (case-sensitive). Prefix must contain exactly one property, where the key is the name of the CloudEvents attribute to be matched, and its value is the String value to use in the comparison. The attribute name and value specified in the filter expression cannot be empty strings.
                        type: object
                      suffix:
                        additionalProperties:
                          type: string
                        description: Suffix evaluates to true if the value of the matching CloudEvents attribute ends with the String value specified (case-sensitive). Suffix must contain exactly one property, where the key is the name of the CloudEvents attribute to be matched, and its value is the String value to use in the comparison. The attribute name and value specified in the filter expression cannot be empty strings.
                        type: object
                    type: object
                  type: array
                target:
                  description: Target is the addressable that receives events from the Broker that pass the Filter. It is required.
                  type: object
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      type: object
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        group:
                          description: 'Group of the API, without the version of the group. This can be used as an alternative to the APIVersion, and then resolved using ResolveGroup. Note: This API is EXPERIMENTAL and might break anytime. For more details: https://github.com/knative/eventing/issues/5086'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.'
                          type: string
                      required:
                        - kind
                        - name
                    uri:
                      description: URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
                      type: string
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                delivery:
                  description: Delivery contains the delivery spec for this specific trigger.
                  type: object
                  properties:
                    backoffDelay:
                      description: 'BackoffDelay is the delay before retrying. More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff delay is backoffDelay*<numberOfRetries>. For exponential policy, backoff delay is backoffDelay*2^<numberOfRetries>.'
                      type: string
                    backoffPolicy:
                      description: BackoffPolicy is the retry backoff policy (linear, exponential, constant).
                      type: string
                    deadLetterSink:
                      description: DeadLetterSink is the sink receiving event that could not be sent to a destination.
                      type: object
                      properties:
                        ref:
                          description: Ref points to an Addressable.
                          type: object
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.'
                              type: string
                        uri:
                          description: URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
                          type: string
                    retry:
                      description: Retry is the minimum number of retries the sender should attempt when sending an event before moving it to the dead letter sink.
                      type: integer
                      format: int32
                bounds:
                  description: Bounds set the policy for the event offsets we are interested in receiving.
                  type: object
                  properties:
                    byId:
                      description: Set offsets policy by backing broker ID.
                      type: object
                      properties:
                        start:
                          description: Starting offset.
                          type: string
                        end:
                          description: Ending offset.
                          type: string
                    byDate:
                      description: Set offsets policy by backing broker ID.
                      type: object
                      properties:
                        start:
                          description: Starting offset.
                          type: string
                        end:
                          description: Ending offset.
                          type: string
            status:
              description: Status represents the current state of the Trigger. This data may be out of date.
              type: object
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - status
                    properties:
                      lastTransitionTime:
                        description: 'LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).'
                        type: string
                      message:
                        description: 'A human readable message indicating details about the transition.'
                        type: string
                      reason:
                        description: 'The reason for the condition''s last transition.'
                        type: string
                      severity:
                        description: 'Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.'
                        type: string
                      status:
                        description: 'Status of the condition, one of True, False, Unknown.'
                        type: string
                      type:
                        description: 'Type of condition.'
                        type: string
                deadLetterSinkUri:
                  description: DeadLetterSinkURI is the resolved URI of the dead letter sink for this Trigger, in case there is none this will fallback to it's Broker status DeadLetterSinkURI.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                targetUri:
                  description: TargetURI is the resolved URI of the receiver for this Trigger.
                  type: string
      additionalPrinterColumns:
        - name: Broker
          type: string
          jsonPath: .spec.broker.name
        - name: Target_URI
          type: string
          jsonPath: .status.targetUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Ready\")].reason"
