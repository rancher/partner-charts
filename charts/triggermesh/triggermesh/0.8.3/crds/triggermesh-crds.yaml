# Copyright 2022 TriggerMesh Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awscloudwatchlogssources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.amazon.logs.log",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.logs.log.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSCloudWatchLogsSource
    plural: awscloudwatchlogssources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon CloudWatch Logs.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                arn:
                  description: ARN of the Log Group to source data from. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncloudwatchlogs.html#amazoncloudwatchlogs-resources-for-iam-policies
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:logs:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                pollingInterval:
                  description: Duration which defines how often logs should be pulled from Amazon CloudWatch Logs. Expressed as a duration string, which format is documented at https://pkg.go.dev/time#ParseDuration. Defaults to 5m
                  type: string
                auth:
                  description: Authentication method to interact with the Amazon CloudWatch Logs API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                sink:
                  description: The destination of events generated from Amazon CloudWatch Logs.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awscloudwatchsources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.amazon.cloudwatch.metrics.message",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.cloudwatch.metrics.message.json",
          "description": ""
        },
        {
          "type": "com.amazon.cloudwatch.metrics.metric",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.cloudwatch.metrics.metric.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSCloudWatchSource
    plural: awscloudwatchsources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon CloudWatch.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                region:
                  description: Code of the AWS region to source metrics from. Available region codes are documented in the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints.
                  type: string
                  pattern: ^[a-z]{2}(-gov)?-[a-z]+-\d$
                pollingInterval:
                  description: Duration which defines how often metrics should be pulled from Amazon CloudWatch. Expressed as a duration string, which format is documented at https://pkg.go.dev/time#ParseDuration. Defaults to 5m
                  type: string
                metricQueries:
                  description: List of queries that determine what metrics will be sourced from Amazon CloudWatch. Each item represents an individual MetricDataQuery. For more information, please refer to the CloudWatch API reference at https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDataQuery.html
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        description: Unique short name that identifies the query.
                        type: string
                        pattern: ^[a-z]\w{0,254}$
                      expression:
                        description: Math expression to be performed on the metric data. Mutually exclusive with 'metric'.
                        type: string
                      metric:
                        description: Representation of a metric with statistics, period, and units, but no math expression. Mutually exclusive with 'expression'.
                        type: object
                        properties:
                          period:
                            description: The granularity, in seconds, of the returned data points.
                            type: integer
                          stat:
                            description: The statistic to return.
                            type: string
                          unit:
                            description: If specified, return only data with that unit.
                            type: string
                          metric:
                            description: The metric to return.
                            type: object
                            properties:
                              metricName:
                                description: Name of the metric.
                                type: string
                              namespace:
                                description: Namespace of the metric.
                                type: string
                              dimensions:
                                description: Dimensions of the metric.
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      description: Name of the dimension.
                                      type: string
                                    value:
                                      description: Value of the dimension.
                                      type: string
                    oneOf:
                      - required: [expression]
                      - required: [metric]
                auth:
                  description: Authentication method to interact with the Amazon CloudWatch API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                sink:
                  description: The destination of events generated from Amazon CloudWatch metrics.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - region
                - metricQueries
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awscodecommitsources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.amazon.codecommit.push",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.codecommit.push.json",
          "description": ""
        },
        {
          "type": "com.amazon.codecommit.pull_request",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.codecommit.pull_request.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSCodeCommitSource
    plural: awscodecommitsources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon CodeCommit.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                arn:
                  description: ARN of the CodeCommit repository to receive events from. The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awscodecommit.html#awscodecommit-resources-for-iam-policies.
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:codecommit:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                branch:
                  description: Name of the Git branch this source observes.
                  type: string
                eventTypes:
                  description: List of event types that should be processed by the source.
                  type: array
                  items:
                    type: string
                    enum: [push, pull_request]
                auth:
                  description: Authentication method to interact with the Amazon CodeCommit API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                sink:
                  description: The destination of events sourced from Amazon CodeCommit.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - branch
                - eventTypes
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awscognitoidentitysources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.amazon.cognito-identity.sync_trigger",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.cognito-identity.sync_trigger.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSCognitoIdentitySource
    plural: awscognitoidentitysources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon Cognito Identity Pool.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                arn:
                  description: ARN of the Amazon Cognito Identity Pool to receive notifications from. The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazoncognitoidentity.html#amazoncognitoidentity-resources-for-iam-policies.
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:cognito-identity:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:identitypool\/.+$
                auth:
                  description: Authentication method to interact with the Amazon Cognito API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                sink:
                  description: The destination of events sourced from the Amazon Cognito Identity Pool.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awscognitouserpoolsources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.amazon.cognitouserpool.sync_trigger",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.cognitouserpool.sync_trigger.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSCognitoUserPoolSource
    plural: awscognitouserpoolsources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon Cognito User Pool.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                arn:
                  description: ARN of the Amazon Cognito User Pool to receive notifications from. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncognitouserpools.html#amazoncognitouserpools-resources-for-iam-policies
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:cognito-idp:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:userpool\/.+$
                auth:
                  description: Authentication method to interact with the Amazon Cognito API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                sink:
                  description: The destination of events sourced from the Amazon Cognito User Pool.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awsdynamodbsources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.amazon.dynamodb.stream_record",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.dynamodb.stream_record.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSDynamoDBSource
    plural: awsdynamodbsources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon DynamoDB.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                arn:
                  description: ARN of the DynamoDB table to receive modification events from. The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazondynamodb.html#amazondynamodb-resources-for-iam-policies.
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:dynamodb:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:table\/.+$
                auth:
                  description: Authentication method to interact with the Amazon DynamoDB API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                sink:
                  description: The destination of events sourced from Amazon DynamoDB.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awseventbridgesources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "com.amazon.events.event" }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSEventBridgeSource
    plural: awseventbridgesources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon EventBridge.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                arn:
                  description: ARN of the Amazon EventBridge event bus to subscribe to. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoneventbridge.html#amazoneventbridge-resources-for-iam-policies.
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:events:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:event-bus\/[a-zA-Z0-9._-]{1,256}$
                eventPattern:
                  description: Event pattern used to select events that this source should subscribe to. If not specified, the event rule is created with a catch-all pattern. More information in the user guide for Amazon EventBridge at https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html
                  type: string
                destination:
                  description: The intermediate destination of notifications originating from the Amazon EventBridge event bus, before they are retrieved by this event source. If omitted, an Amazon SQS queue is automatically created and associated with the EventBridge event rule.
                  type: object
                  properties:
                    sqs:
                      description: Properties of an Amazon SQS queue to use as intermediate destination for the event bus' events.
                      type: object
                      properties:
                        queueARN:
                          description: ARN of the Amazon SQS queue that should be receiving event bus' events. The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonsqs.html#amazonsqs-resources-for-iam-policies.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:sqs:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                      required:
                        - queueARN
                auth:
                  description: Authentication method to interact with the Amazon EventBridge and SQS APIs.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                sink:
                  description: The destination of events sourced from Amazon EventBridge.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                ruleARN:
                  description: ARN of the EventBridge event rule that is currently subscribing to the event bus.
                  type: string
                queueARN:
                  description: ARN of the Amazon SQS queue that is currently receiving notifications from the EventBridge event bus.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Queue
          type: string
          jsonPath: .status.queueARN
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awskinesissources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.amazon.kinesis.stream_record",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.kinesis.stream_record.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSKinesisSource
    plural: awskinesissources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon Kinesis.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                arn:
                  description: ARN of the Kinesis stream to receive data from. The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonkinesis.html#amazonkinesis-resources-for-iam-policies.
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:kinesis:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:stream\/.+$
                auth:
                  description: Authentication method to interact with the Amazon Kinesis API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                sink:
                  description: The destination of events sourced from Amazon Kinesis.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awsperformanceinsightssources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.amazon.rds.pi.metric",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.performanceinsights.metric.json"
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSPerformanceInsightsSource
    plural: awsperformanceinsightssources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon RDS Performance Insights.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                arn:
                  description: ARN of the Amazon RDS database instance to receive metrics for. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonrds.html#amazonrds-resources-for-iam-policies.
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:rds:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                pollingInterval:
                  description: Duration which defines how often metrics should be pulled from Amazon Performance Insights. Expressed as a duration string, which format is documented at https://pkg.go.dev/time#ParseDuration.
                  type: string
                metrics:
                  description: List of metrics to retrieve from Amazon Performance Insights. Each item represents the 'metric' attribute of a MetricQuery. For more information, please refer to the Performance Insights API reference at https://docs.aws.amazon.com/performance-insights/latest/APIReference/API_MetricQuery.html.
                  type: array
                  items:
                    type: string
                    minLength: 1
                auth:
                  description: Authentication method to interact with the Amazon RDS and Performance Insights APIs.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                sink:
                  description: The destination of events generated by Amazon Performance Insights.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - pollingInterval
                - metrics
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awss3sources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.amazon.s3.objectcreated",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.s3.event.json",
          "description": ""
        },
        {
          "type": "com.amazon.s3.objectremoved",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.s3.event.json",
          "description": ""
        },
        {
          "type": "com.amazon.s3.objectrestore",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.s3.event.json",
          "description": ""
        },
        {
          "type": "com.amazon.s3.reducedredundancylostobject",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.s3.event.json",
          "description": ""
        },
        {
          "type": "com.amazon.s3.replication",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.s3.event.json",
          "description": ""
        },
        {
          "type": "com.amazon.s3.testevent",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.s3.event.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSS3Source
    plural: awss3sources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon S3.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                arn:
                  description: |-
                    ARN of the Amazon S3 bucket to receive notifications from. The expected format is documented at
                    https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html#amazons3-resources-for-iam-policies.

                    Although not technically supported by S3, the ARN provided via this attribute may include a region and
                    an account ID. When this information is provided, it is used to set an accurate identity-based access
                    policy between the S3 bucket and the reconciled SQS queue, unless an existing queue is provided via
                    the 'destination.sqs.queueARN' attribute.
                  type: string
                  # Bucket naming rules
                  # https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html
                  pattern: ^arn:aws(-cn|-us-gov)?:s3:([a-z]{2}(-gov)?-[a-z]+-\d)?:(\d{12})?:[0-9a-z][0-9a-z.-]{2,62}$
                eventTypes:
                  description: List of event types that the source should subscribe to. Accepted values are listed at https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-event-types-and-destinations.html.
                  type: array
                  items:
                    type: string
                    enum:
                      - s3:ObjectCreated:*
                      - s3:ObjectCreated:Put
                      - s3:ObjectCreated:Post
                      - s3:ObjectCreated:Copy
                      - s3:ObjectCreated:CompleteMultipartUpload
                      - s3:ObjectRemoved:*
                      - s3:ObjectRemoved:Delete
                      - s3:ObjectRemoved:DeleteMarkerCreated
                      - s3:ObjectRestore:*
                      - s3:ObjectRestore:Post
                      - s3:ObjectRestore:Completed
                      - s3:ReducedRedundancyLostObject
                      - s3:Replication:*
                      - s3:Replication:OperationFailedReplication
                      - s3:Replication:OperationNotTracked
                      - s3:Replication:OperationMissedThreshold
                      - s3:Replication:OperationReplicatedAfterThreshold
                destination:
                  description: The intermediate destination of notifications originating from the Amazon S3 bucket, before they are retrieved by this event source. If omitted, an Amazon SQS queue is automatically created and associated with the bucket.
                  type: object
                  properties:
                    sqs:
                      description: Properties of an Amazon SQS queue to use as intermediate destination for bucket notifications.
                      type: object
                      properties:
                        queueARN:
                          description: ARN of the Amazon SQS queue that should be receiving bucket notifications. The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonsqs.html#amazonsqs-resources-for-iam-policies.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:sqs:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                      required:
                        - queueARN
                auth:
                  description: Authentication method to interact with the Amazon S3 and SQS APIs.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                sink:
                  description: The destination of events sourced from Amazon S3.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - eventTypes
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                queueARN:
                  description: ARN of the Amazon SQS queue that is currently receiving notifications from the Amazon S3 bucket.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Queue
          type: string
          jsonPath: .status.queueARN
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awssnssources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.amazon.sns.notification",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.sns.notification.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSSNSSource
    plural: awssnssources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon SNS.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                arn:
                  description: ARN of the Amazon SNS topic to consume messages from. The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonsns.html#amazonsns-resources-for-iam-policies
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:sns:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                subscriptionAttributes:
                  description: Attributes to set on the Amazon SNS Subscription that is used for receiving messages from the SNS topic.
                  type: object
                  properties:
                    DeliveryPolicy:
                      description: Policy that defines how Amazon SNS retries failed deliveries to this event source.
                      type: string
                      format: json
                      nullable: true
                    FilterPolicy:
                      description: Rules for filtering the messages sent to this event source.
                      type: string
                      format: json
                      nullable: true
                    RawMessageDelivery:
                      description: Whether to enable raw message delivery to this event source.
                      type: string
                      format: json
                      nullable: true
                    RedrivePolicy:
                      description: Send undeliverable messages to the specified Amazon SQS dead-letter queue.
                      type: string
                      format: json
                      nullable: true
                auth:
                  description: Authentication method to interact with the Amazon SNS API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                sink:
                  description: The destination of events sourced from Amazon SNS.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                subscriptionARN:
                  description: ARN of the Amazon SNS subscription that is currently used for receiving messages from the SNS topic.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Public address of the HTTP/S endpoint that is subscribed to the Amazon SNS topic.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awssqssources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.amazon.sqs.message",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.amazon.sqs.message.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AWSSQSSource
    plural: awssqssources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon SQS.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                arn:
                  description: ARN of the Amazon SQS queue to consume messages from. The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonsqs.html#amazonsqs-resources-for-iam-policies.
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:sqs:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                receiveOptions:
                  description: Options that control the behavior of message receivers.
                  type: object
                  properties:
                    visibilityTimeout:
                      format: duration
                      description: Period of time during which Amazon SQS prevents other consumers from receiving and processing a message that has been received via ReceiveMessage. Expressed as a duration string, which format is documented at https://pkg.go.dev/time#ParseDuration. If not defined, the overall visibility timeout for the queue is used. For more details, please refer to the Amazon SQS Developer Guide at https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html.
                      type: string
                messageProcessor:
                  description: Name of the message processor to use for converting SQS messages to CloudEvents. Supported values are "default", "s3", and "eventbridge".
                  type: string
                  enum: [default, s3, eventbridge]
                auth:
                  description: Authentication method to interact with the Amazon SQS API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                endpoint:
                  description: Customizations of the AWS REST API endpoint.
                  type: object
                  properties:
                    url:
                      description: URL of the endpoint.
                      type: string
                      format: uri
                sink:
                  description: The destination of events sourced from Amazon SQS.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azureactivitylogssources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.microsoft.azure.monitor.activity-log",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.monitor.activity-log.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureActivityLogsSource
    singular: azureactivitylogssource
    plural: azureactivitylogssources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Activity Logs.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                subscriptionID:
                  description: The ID of the Azure subscription which activity logs to subscribe to.
                  type: string
                  format: guid
                  pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                destination:
                  description: The intermediate destination of activity logs, before they are retrieved by this event source.
                  type: object
                  properties:
                    eventHubs:
                      description: Properties of an Event Hubs namespace to use as intermediate destination of activity logs.
                      type: object
                      properties:
                        namespaceID:
                          description: |-
                            Resource ID of the Event Hubs namespace.

                            The expected format is
                              /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}
                          type: string
                          pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.EventHub\/namespaces\/[A-Za-z0-9-]{6,50}$
                        hubName:
                          description: Name of the Event Hubs instance within the selected namespace. If omitted, Azure automatically creates an Event Hub with the name 'insights-activity-logs' inside the selected namespace.
                          type: string
                          pattern: ^[A-Za-z0-9][\w.-]{0,49}$
                        sasPolicy:
                          description: Name of a SAS policy with Manage permissions inside the Event Hubs namespace referenced by the 'namespaceID' field. Defaults to 'RootManageSharedAccessKey'.
                          type: string
                          pattern: ^[\w.-]+$
                        consumerGroup:
                          description: A view (state, position, or offset) of an entire event hub. Consumer groups enable consuming applications to each have a separate view of the event stream. They read the stream independently at their own pace and with their own offsets. For more information about Event Hubs Consumer Groups, please refer to https://learn.microsoft.com/en-us/azure/event-hubs/event-hubs-features#consumer-groups.
                          type: string
                      required:
                        - namespaceID
                  required:
                    - eventHubs
                categories:
                  description: Categories of Activity Logs to collect. All available categories are selected when this attribute is empty. For a list of available Activity Logs category, please refer to https://docs.microsoft.com/en-us/azure/azure-monitor/platform/activity-log-schema#categories.
                  type: array
                  items:
                    type: string
                auth:
                  description: Authentication method to interact with the Azure Monitor REST API. This event source only supports the Service Principal authentication. If it not present, it will try to use Azure AKS Managed Identity
                  type: object
                  properties:
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For more information about service principals, please refer to the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      type: object
                      properties:
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          type: object
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the tenant ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientID:
                          description: ID of the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client secret.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client secret.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                  required:
                    - servicePrincipal
                sink:
                  description: The destination of events sourced from Azure Activity Logs.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                ceOverrides:
                  type: object
                  properties:
                    extensions:
                      type: object
                      additionalProperties:
                        type: string
                        minLength: 1
                  required:
                    - extensions
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - subscriptionID
                - destination
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azureblobstoragesources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "Microsoft.Storage.BlobCreated",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.blobstorage.event.json",
          "description": ""
        },
        {
          "type": "Microsoft.Storage.BlobDeleted",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.blobstorage.event.json",
          "description": ""
        },
        {
          "type": "Microsoft.Storage.BlobRenamed",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.blobstorage.event.json",
          "description": ""
        },
        {
          "type": "Microsoft.Storage.DirectoryCreated",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.blobstorage.event.json",
          "description": ""
        },
        {
          "type": "Microsoft.Storage.DirectoryDeleted",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.blobstorage.event.json",
          "description": ""
        },
        {
          "type": "Microsoft.Storage.DirectoryRenamed",
           "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.blobstorage.event.json",
          "description": ""
        },
        {
          "type": "Microsoft.Storage.BlobTierChanged",
           "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.blobstorage.event.json",
          "description": ""
        },
        {
          "type": "Microsoft.Storage.AsyncOperationInitiated",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.blobstorage.event.json",
          "description": ""
        },
        {
          "type": "Microsoft.Storage.BlobInventoryPolicyCompleted",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.blobstorage.event.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureBlobStorageSource
    plural: azureblobstoragesources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Blob Storage.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                storageAccountID:
                  description: |-
                    Resource ID of the Storage Account to receive events for.

                    The accepted format is
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{storageAccountName}

                    Besides the Storage Account name itself, the resource ID contains the subscription ID and resource
                    group name which all together uniquely identify the Storage Account within Azure.
                  type: string
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.Storage\/storageAccounts\/[a-z0-9]{3,24}$
                eventTypes:
                  description: |-
                    Types of events to subscribe to.

                    The list of available event types can be found at
                    https://docs.microsoft.com/en-us/azure/event-grid/event-schema-blob-storage.

                    When this attribute is not set, the source automatically subscribes to the following event types
                    - Microsoft.Storage.BlobCreated
                    - Microsoft.Storage.BlobDeleted
                  type: array
                  items:
                    type: string
                    enum:
                      - Microsoft.Storage.BlobCreated
                      - Microsoft.Storage.BlobDeleted
                      - Microsoft.Storage.BlobRenamed
                      - Microsoft.Storage.DirectoryCreated
                      - Microsoft.Storage.DirectoryDeleted
                      - Microsoft.Storage.DirectoryRenamed
                      - Microsoft.Storage.BlobTierChanged
                      - Microsoft.Storage.AsyncOperationInitiated
                      # A special type of event documented at
                      # https://docs.microsoft.com/en-us/azure/storage/blobs/blob-inventory.
                      # Allowed for completeness, but users should be aware that those events use a different schema from
                      # the other Storage event types.
                      - Microsoft.Storage.BlobInventoryPolicyCompleted
                endpoint:
                  description: The intermediate destination of events subscribed via Event Grid, before they are retrieved by this event source.
                  type: object
                  properties:
                    eventHubs:
                      description: Properties of an Event Hubs namespace to use as intermediate destination of events.
                      type: object
                      properties:
                        namespaceID:
                          description: |-
                            Resource ID of the Event Hubs namespace.

                            The expected format is
                              /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}
                          type: string
                          pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.EventHub\/namespaces\/[A-Za-z0-9-]{6,50}$
                        hubName:
                          description: Name of the Event Hubs instance within the selected namespace. If omitted, an Event Hubs instance is created on behalf of the user.
                          type: string
                          pattern: ^[A-Za-z0-9][\w.-]{0,49}$
                        consumerGroup:
                          description: A view (state, position, or offset) of an entire event hub. Consumer groups enable consuming applications to each have a separate view of the event stream. They read the stream independently at their own pace and with their own offsets. For more information about Event Hubs Consumer Groups, please refer to https://learn.microsoft.com/en-us/azure/event-hubs/event-hubs-features#consumer-groups.
                          type: string
                      required:
                        - namespaceID
                  required:
                    - eventHubs
                auth:
                  description: Authentication method to interact with the Azure Storage and Azure Event Hubs REST APIs. This event source only supports the Service Principal authentication. If it not present, it will try to use Azure AKS Managed Identity
                  type: object
                  properties:
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For more information about service principals, please refer to the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      type: object
                      properties:
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          type: object
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the tenant ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientID:
                          description: ID of the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client secret.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client secret.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                  required:
                    - servicePrincipal
                sink:
                  description: The destination of events sourced from Azure Storage.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - storageAccountID
                - endpoint
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                eventHubID:
                  description: Resource ID of the Event Hubs instance that is currently receiving events from the Azure Storage Account.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azureeventgridsources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    # User-defined. Determined by the value of spec.eventTypes.
    registry.knative.dev/eventTypes: |
      []
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureEventGridSource
    plural: azureeventgridsources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Event Grid.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                scope:
                  description: |-
                    The resource ID the event subscription applies to.

                    Can be
                    - an Azure subscription
                      /subscriptions/{subscriptionId}
                    - a resource group
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}
                    - a top-level resource from a resource provider (including Event Grid topic)
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
                  type: string
                  pattern: ^\/subscriptions\/[a-z0-9-]+(?:\/resourceGroups\/[\w.()-]+(?:\/providers\/[A-Za-z.]+\/[a-zA-Z0-9][\w.-]+\/[a-zA-Z0-9][\w.-]+)?)?$
                eventTypes:
                  description: |-
                    Types of events to subscribe to.

                    If not specified, Azure automatically selects all available event types for the provided 'scope'.

                    For a list of all available event types, please refer to the list of Azure services that support
                    system topics at https://docs.microsoft.com/en-us/azure/event-grid/system-topics.
                  type: array
                  items:
                    type: string
                endpoint:
                  description: The intermediate destination of events subscribed via Event Grid, before they are retrieved by this event source.
                  type: object
                  properties:
                    eventHubs:
                      description: Properties of an Event Hubs namespace to use as intermediate destination of events.
                      type: object
                      properties:
                        namespaceID:
                          description: |-
                            Resource ID of the Event Hubs namespace.

                            The expected format is
                              /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}
                          type: string
                          pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.EventHub\/namespaces\/[A-Za-z0-9-]{6,50}$
                        hubName:
                          description: Name of the Event Hubs instance within the selected namespace. If omitted, an Event Hubs instance is created on behalf of the user.
                          type: string
                          pattern: ^[A-Za-z0-9][\w.-]{0,49}$
                        consumerGroup:
                          description: A view (state, position, or offset) of an entire event hub. Consumer groups enable consuming applications to each have a separate view of the event stream. They read the stream independently at their own pace and with their own offsets. For more information about Event Hubs Consumer Groups, please refer to https://learn.microsoft.com/en-us/azure/event-hubs/event-hubs-features#consumer-groups.
                          type: string
                      required:
                        - namespaceID
                  required:
                    - eventHubs
                auth:
                  description: Authentication method to interact with the Azure Event Grid and Azure Event Hubs REST APIs. This event source only supports the Service Principal authentication. If it not present, it will try to use Azure AKS Managed Identity
                  type: object
                  properties:
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For more information about service principals, please refer to the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      type: object
                      properties:
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          type: object
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the tenant ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientID:
                          description: ID of the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client secret.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client secret.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                  required:
                    - servicePrincipal
                sink:
                  description: The destination of events sourced from Azure Event Grid.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - scope
                - endpoint
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                eventSubscriptionID:
                  description: Resource ID of the Event Grid subscription that is currently registered for the user-provided scope.
                  type: string
                eventHubID:
                  description: Resource ID of the Event Hubs instance that is currently receiving events from the Azure Event Grid subscription.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azureeventhubssources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.azure.eventhub.event",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.eventhub.event.json"
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureEventHubsSource
    plural: azureeventhubssources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Event Hubs.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                eventHubID:
                  description: |-
                    Resource ID of the Event Hubs instance.

                    The expected format is
                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}
                  type: string
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.EventHub\/namespaces\/[A-Za-z0-9-]{6,50}\/event[Hh]ubs\/[a-zA-Z0-9][\w.-]{0,49}$
                auth:
                  description: Authentication method to interact with the Azure Event Hubs REST API. If it not present, it will try to use Azure AKS Managed Identity
                  type: object
                  properties:
                    sasToken:
                      description: An Azure shared access signature (SAS) token. For more information about SAS tokens, please refer to the Azure Storage documentation at https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview.
                      type: object
                      properties:
                        keyName:
                          description: Name of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal name of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's name.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        keyValue:
                          description: Value of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's value.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        connectionString:
                          description: Connection string containing both the resource URI of the Event Hubs instance, and the SAS token. Mutually exclusive with 'keyName' and 'keyValue'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the connection string.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the connection string.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      oneOf:
                        - required:
                            - keyName
                            - keyValue
                        - required:
                            - connectionString
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For more information about service principals, please refer to the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      type: object
                      properties:
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          type: object
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the tenant ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientID:
                          description: ID of the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client secret.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client secret.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                  oneOf:
                    - required: [sasToken]
                    - required: [servicePrincipal]
                consumerGroup:
                  description: A view (state, position, or offset) of an entire event hub. Consumer groups enable consuming applications to each have a separate view of the event stream. They read the stream independently at their own pace and with their own offsets. For more information about Event Hubs components, please refer to https://learn.microsoft.com/en-us/azure/event-hubs/event-hubs-about#key-architecture-components
                  type: string
                sink:
                  description: The destination of events sourced from Azure Event Hubs.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                messageCountSize:
                  description: The number of messages to receive from the Event Hub at a time.
                  type: integer
                  format: string
                messageTimeout:
                  description: The timeout in seconds to wait for the number of messages to be available in the Event Hub before.
                  type: integer
                  format: string
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - eventHubID
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azureiothubsources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.microsoft.azure.iothub.message",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.iothub.message.json"
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureIOTHubSource
    plural: azureiothubsources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure IOT Hub.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                auth:
                  description: Authentication method to interact with the Azure IOT Hub.
                  type: object
                  properties:
                    sasToken:
                      description: An Azure shared access signature (SAS) token. For more information about SAS tokens, please refer to the Azure IOT Hub documentation at https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-dev-guide-sas?tabs=node.
                      type: object
                      properties:
                        connectionString:
                          description: Connection string containing both the resource URI of the IOT Hub Bus instance, and the SAS token.
                          type: object
                          properties:
                            value:
                              description: Literal value of the connection string.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the connection string.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                sink:
                  description: The destination of events sourced from Azure IOT Hub.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - auth
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azurequeuestoragesources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.microsoft.azure.queuestorage",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.queuestorage.json"
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureQueueStorageSource
    plural: azurequeuestoragesources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Queue Storage.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                accountName:
                  description: Name of the storage account.
                  type: string
                queueName:
                  description: Name of the queue.
                  type: string
                accountKey:
                  description: A storage account access key for authenticating against the Azure Storage REST API.
                  type: object
                  properties:
                    value:
                      description: Literal value of the account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing the account key.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                visibilityTimeout:
                  description: Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than or equal to 0, and can't be larger than 7 days. The visibility timeout of a message can't be set to a value later than the expiry time. You can update a message until it has been deleted or has expired. Expressed as a duration string, which format is documented at https://pkg.go.dev/time#ParseDuration. Default 20s.
                  type: string
                sink:
                  description: The destination of events sourced from Azure Storage.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - accountName
                - accountKey
                - queueName
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                eventHubID:
                  description: Resource ID of the Event Hubs instance that is currently receiving events from the Azure Storage Account.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azureservicebusqueuesources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.microsoft.azure.servicebus.message",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.servicebus.message.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureServiceBusQueueSource
    plural: azureservicebusqueuesources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Service Bus Queue.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                queueID:
                  description: |-
                    The resource ID the Service Bus Queue to subscribe to.

                    The expected format is
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}
                  type: string
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.ServiceBus\/namespaces\/[A-Za-z0-9-]{6,50}\/queues\/[A-Za-z0-9][\w.~/-]{0,258}[A-Za-z0-9]$
                auth:
                  description: Authentication method to interact with the Azure Service Bus Queue. If it not present, it will try to use Azure AKS Managed Identity
                  type: object
                  properties:
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For more information about service principals, please refer to the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      type: object
                      properties:
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          type: object
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the tenant ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientID:
                          description: ID of the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client secret.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client secret.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                    sasToken:
                      description: An Azure shared access signature (SAS) token. For more information about SAS tokens, please refer to the Azure Service Bus Queue documentation at https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas.
                      type: object
                      properties:
                        keyName:
                          description: Name of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal name of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's name.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        keyValue:
                          description: Value of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's value.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        connectionString:
                          description: Connection string containing both the resource URI of the Service Bus Queue, and the SAS token. Mutually exclusive with 'keyName' and 'keyValue'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the connection string.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the connection string.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      oneOf:
                        - required:
                            - keyName
                            - keyValue
                        - required:
                            - connectionString
                  oneOf:
                    - required: [sasToken]
                    - required: [servicePrincipal]
                sink:
                  description: The destination of events sourced from Azure Service Bus Queue.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - queueID
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azureservicebussources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.microsoft.azure.servicebus.message",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.servicebus.message.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureServiceBusSource
    plural: azureservicebussources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Service Bus.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                topicID:
                  description: |-
                    The resource ID the Service Bus Topic to subscribe to.

                    The expected format is
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}
                  type: string
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.ServiceBus\/namespaces\/[A-Za-z0-9-]{6,50}\/topics\/[A-Za-z0-9][\w.~/-]{0,258}[A-Za-z0-9]$
                queueID:
                  description: |-
                    The resource ID the Service Bus Queue to subscribe to.

                    The expected format is
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}
                  type: string
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.ServiceBus\/namespaces\/[A-Za-z0-9-]{6,50}\/queues\/[A-Za-z0-9][\w.~/-]{0,258}[A-Za-z0-9]$
                auth:
                  description: Authentication method to interact with the Azure Service Bus API. This event source only supports the Service Principal authentication. If it not present, it will try to use Azure AKS Managed Identity
                  type: object
                  properties:
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For more information about service principals, please refer to the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      type: object
                      properties:
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          type: object
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the tenant ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientID:
                          description: ID of the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client secret.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client secret.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                    sasToken:
                      description: An Azure shared access signature (SAS) token. For more information about SAS tokens, please refer to the Azure Service Bus Queue documentation at https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas.
                      type: object
                      properties:
                        keyName:
                          description: Name of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal name of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's name.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        keyValue:
                          description: Value of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's value.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        connectionString:
                          description: Connection string containing both the resource URI of the Service Bus Queue, and the SAS token. Mutually exclusive with 'keyName' and 'keyValue'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the connection string.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the connection string.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      oneOf:
                        - required:
                            - keyName
                            - keyValue
                        - required:
                            - connectionString
                  oneOf:
                    - required: [sasToken]
                    - required: [servicePrincipal]
                webSocketsEnable:
                  description: Boolean to indicate to use WebSockets.
                  type: boolean
                maxConcurrent:
                  description: maximum number of goroutines that will be used to process messages. default 10.
                  type: integer
                sink:
                  description: The destination of events sourced from the Azure Service Bus.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              oneOf:
                - required: [topicID]
                - required: [queueID]
              required:
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                subscriptionID:
                  description: Resource ID of the Service Bus Subscription that is currently used by the event source for consuming events from the configured Service Bus Topic.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azureservicebustopicsources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.microsoft.azure.servicebus.message",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.microsoft.azure.servicebus.message.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureServiceBusTopicSource
    plural: azureservicebustopicsources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Service Bus Topics.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                topicID:
                  description: |-
                    The resource ID the Service Bus Topic to subscribe to.

                    The expected format is
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}
                  type: string
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.ServiceBus\/namespaces\/[A-Za-z0-9-]{6,50}\/topics\/[A-Za-z0-9][\w.~/-]{0,258}[A-Za-z0-9]$
                auth:
                  description: Authentication method to interact with the Azure Service Bus API. This event source only supports the Service Principal authentication. If it not present, it will try to use Azure AKS Managed Identity
                  type: object
                  properties:
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For more information about service principals, please refer to the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      type: object
                      properties:
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          type: object
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the tenant ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientID:
                          description: ID of the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client secret.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client secret.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                  required:
                    - servicePrincipal
                webSocketsEnable:
                  description: Boolean to indicate to use WebSockets.
                  type: boolean
                sink:
                  description: The destination of events sourced from the Azure Service Bus Topic.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - topicID
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                subscriptionID:
                  description: Resource ID of the Service Bus Subscription that is currently used by the event source for consuming events from the configured Service Bus Topic.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: cloudeventssources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: CloudEventsSource
    plural: cloudeventssources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for receiving arbitrary CloudEvents over HTTP.
          type: object
          properties:
            spec:
              description: Specification for the CloudEvents source.
              type: object
              properties:
                credentials:
                  description: Optional credentials specification for incoming requests.
                  type: object
                  properties:
                    basicAuths:
                      description: Array of HTTP basic authentication parameters, all present usernames and passwords are considered valid.
                      type: array
                      items:
                        type: object
                        properties:
                          username:
                            description: User name for HTTP Basic authentication.
                            type: string
                          password:
                            description: Password for HTTP Basic authentication.
                            type: object
                            properties:
                              valueFromSecret:
                                description: A reference to a Kubernetes Secret object containing the password.
                                type: object
                                properties:
                                  name:
                                    description: Name of the Secret object.
                                    type: string
                                  key:
                                    description: Key from the Secret object.
                                    type: string
                                required:
                                  - name
                                  - key
                            required: [valueFromSecret]
                        required:
                          - username
                          - password
                  required: [basicAuths]
                path:
                  description: Path where incoming CloudEvents will be accepted.
                  type: string
                rateLimiter:
                  description: Rate limiter provides a mechanism to reject incoming requests when a threshold is trespassed, informing the caller to retry later.
                  type: object
                  properties:
                    requestsPerSecond:
                      description: Number of requests accepted per time duration.
                      type: integer
                  required:
                    - requestsPerSecond
                ceOverrides:
                  description: Defines overrides/additions to incoming CloudEvents attributes.
                  type: object
                  properties:
                    extensions:
                      type: object
                      properties:
                        type:
                          type: string
                        source:
                          type: string
                        subject:
                          type: string
                  required:
                    - extensions
                sink:
                  description: The destination of events generated from requests to the source.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Public address of the HTTP/S endpoint exposing the source.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: googlecloudauditlogssources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "com.google.cloud.auditlogs.notification" }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: GoogleCloudAuditLogsSource
    plural: googlecloudauditlogssources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Google Cloud Audit Logs.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                serviceName:
                  description: The name of the API service performing the operation. For example, "pubsub.googleapis.com".
                  type: string
                  pattern: ^[a-z\d][a-z\d\-\.]*[a-z\d]$
                methodName:
                  description: The name of the service method or operation. For API calls, this should be the name of the API method. For example, "google.pubsub.v1.Publisher.CreateTopic".
                  type: string
                  pattern: ^[A-Za-z\d][A-Za-z\d\-\.]*[A-Za-z\d]$
                resourceName:
                  description: The resource or collection that is the target of the operation. The name is a scheme-less URI, not including the API service name. https://cloud.google.com/logging/docs/reference/audit/auditlog/rest/Shared.Types/AuditLog
                  type: string
                  pattern: ^[a-z\d][a-z\d\-\.\/]*[a-z\d]$
                pubsub:
                  description: Attributes related to the configuration of Pub/Sub resources associated with the Cloud Audit Log.
                  type: object
                  properties:
                    topic:
                      description: Full resource name of the Pub/Sub topic where change notifications originating from the configured audit logs sink are sent to, before being retrieved by this event source. If not supplied, a topic is created on behalf of the user, in the GCP project referenced by the 'project' attribute. The expected format is described at https://cloud.google.com/pubsub/docs/admin#resource_names
                      type: string
                      pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/topics\/[a-zA-Z][\w-.~%+]{2,254}$
                    project:
                      description: Name of the GCP project where Pub/Sub resources associated with the Cloud Audit log sink are to be created. Mutually exclusive with 'topic' which, if supplied, already contains the project name.
                      type: string
                      pattern: ^[a-z][a-z0-9-]{3,29}$
                  oneOf:
                    - required: [project]
                    - required: [topic]
                serviceAccountKey:
                  description: Deprecated - please use spec.auth.serviceAccountKey. Service account key used to authenticate the event source and allow it to interact with Google Cloud APIs. Only the JSON format is supported.
                  type: object
                  properties:
                    value:
                      description: Literal value of the service account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing the service account key.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                auth:
                  description:
                  type: object
                  properties:
                    serviceAccountKey:
                      description: Service account key used to authenticate the event source and allow it to interact with Google Cloud APIs. Only the JSON format is supported.
                      type: object
                      properties:
                        value:
                          description: Literal value of the service account key.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the service account key.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    gcpServiceAccount:
                      description: GCP Service account name to impersonate Identity and Access Management (IAM) service accounts to access Google Cloud services.
                      pattern: ^[a-z0-9-]{6,30}@[a-z0-9-]{1,30}(?:\.[a-z0-9-]{1,30})?\.gserviceaccount\.com$
                      type: string
                    kubernetesServiceAccount:
                      description: The name of the Kubernetes Service account that will be created and bound to the gcpServiceAccount to act as an IAM service account. Optional, by default the Kubernetes service account name will be generated by the controller.
                      type: string
                  oneOf:
                    - required: [serviceAccountKey]
                    - required: [gcpServiceAccount]
                sink:
                  description: The destination of events received via change notifications.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - serviceName
                - methodName
                - pubsub
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                auditLogsSink:
                  description: ID of the Cloud Audit Logs Sink.
                  type: string
                topic:
                  description: Resource name of the Pub/Sub topic where audit logs are currently sent to.
                  type: string
                subscription:
                  description: Resource name of the Pub/Sub subscription currently used by the event source for pulling audit logs.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: googlecloudbillingsources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "com.google.cloud.billing.notification" }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: GoogleCloudBillingSource
    plural: googlecloudbillingsources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Google Cloud Billing.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                billingAccountId:
                  description: The identifier for the Cloud Billing account owning the budget. Example, 01D4EE-079462-DFD6EC.
                  type: string
                budgetId:
                  description: The identifier for the Cloud Billing budget. You can locate the budget's ID in your budget under Manage notifications. The ID is displayed after you select Connect a Pub/Sub topic to this budget. Example, de72f49d-779b-4945-a127-4d6ce8def0bb.
                  type: string
                pubsub:
                  description: Attributes related to the configuration of Pub/Sub resources associated with the Cloud Billing.
                  type: object
                  properties:
                    topic:
                      description: Full resource name of the Pub/Sub topic where notifications originating from the configured billing budget are sent to, before being retrieved by this event source. If not supplied, a topic is created on behalf of the user, in the GCP project referenced by the 'project' attribute. The expected format is described at https://cloud.google.com/pubsub/docs/admin#resource_names.
                      type: string
                      pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/topics\/[a-zA-Z][\w-.~%+]{2,254}$
                    project:
                      description: Name of the GCP project where Pub/Sub resources associated with the Cloud Billing are to be created. Mutually exclusive with 'topic' which, if supplied, already contains the project name.
                      type: string
                      pattern: ^[a-z][a-z0-9-]{3,29}$
                  oneOf:
                    - required: [project]
                    - required: [topic]
                serviceAccountKey:
                  description: Deprecated - please use spec.auth.serviceAccountKey. Service account key used to authenticate the event source and allow it to interact with Google Cloud APIs. Only the JSON format is supported.
                  type: object
                  properties:
                    value:
                      description: Literal value of the service account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing the service account key.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                auth:
                  description:
                  type: object
                  properties:
                    serviceAccountKey:
                      description: Service account key used to authenticate the event source and allow it to interact with Google Cloud APIs. Only the JSON format is supported.
                      type: object
                      properties:
                        value:
                          description: Literal value of the service account key.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the service account key.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    gcpServiceAccount:
                      description: GCP Service account name to impersonate Identity and Access Management (IAM) service accounts to access Google Cloud services.
                      pattern: ^[a-z0-9-]{6,30}@[a-z0-9-]{1,30}(?:\.[a-z0-9-]{1,30})?\.gserviceaccount\.com$
                      type: string
                    kubernetesServiceAccount:
                      description: The name of the Kubernetes Service account that will be created and bound to the gcpServiceAccount to act as an IAM service account. Optional, by default the Kubernetes service account name will be generated by the controller.
                      type: string
                  oneOf:
                    - required: [serviceAccountKey]
                    - required: [gcpServiceAccount]
                sink:
                  description: The destination of events received via change notifications.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - billingAccountId
                - budgetId
                - pubsub
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                topic:
                  description: Resource name of the Pub/Sub topic where billing budget events are currently sent to.
                  type: string
                subscription:
                  description: Resource name of the Pub/Sub subscription currently used by the event source for pulling billing budget events.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: googlecloudpubsubsources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.google.cloud.pubsub.message",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.google.cloud.pubsub.message.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: GoogleCloudPubSubSource
    plural: googlecloudpubsubsources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Google Cloud Pub/Sub.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                topic:
                  description: Full resource name of the Pub/Sub topic to subscribe to, in the format "projects/{project_name}/topics/{topic_name}".
                  type: string
                  pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/topics\/[a-zA-Z][\w-.~%+]{2,254}$
                subscriptionID:
                  description: ID of the subscription to use to pull messages from the topic. If supplied, this subscription must 1) exist and 2) belong to the provided topic. Otherwise, a pull subscription to that topic is created on behalf of the user.
                  type: string
                  pattern: ^[a-zA-Z][\w-.~%+]{2,254}$
                serviceAccountKey:
                  description: Deprecated - please use spec.auth.serviceAccountKey. Service account key used to authenticate the event source and allow it to interact with Google Cloud APIs. Only the JSON format is supported.
                  type: object
                  properties:
                    value:
                      description: Literal value of the service account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing the service account key.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                auth:
                  description:
                  type: object
                  properties:
                    serviceAccountKey:
                      description: Service account key used to authenticate the event source and allow it to interact with Google Cloud APIs. Only the JSON format is supported.
                      type: object
                      properties:
                        value:
                          description: Literal value of the service account key.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the service account key.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    gcpServiceAccount:
                      description: GCP Service account name to impersonate Identity and Access Management (IAM) service accounts to access Google Cloud services.
                      pattern: ^[a-z0-9-]{6,30}@[a-z0-9-]{1,30}(?:\.[a-z0-9-]{1,30})?\.gserviceaccount\.com$
                      type: string
                    kubernetesServiceAccount:
                      description: The name of the Kubernetes Service account that will be created and bound to the gcpServiceAccount to act as an IAM service account. Optional, by default the Kubernetes service account name will be generated by the controller.
                      type: string
                  oneOf:
                    - required: [serviceAccountKey]
                    - required: [gcpServiceAccount]
                sink:
                  description: The destination of events received via change notifications.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - topic
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                subscription:
                  description: Resource name of the Pub/Sub subscription currently used by the event source for pulling messages from the topic.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Subscription
          type: string
          jsonPath: .status.subscription
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: googlecloudsourcerepositoriessources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "com.google.cloud.sourcerepo.notification" }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: GoogleCloudSourceRepositoriesSource
    plural: googlecloudsourcerepositoriessources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Google Cloud Source Repositories.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                repository:
                  description: Full resource name of the Repository.
                  type: string
                  pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/repos\/[a-zA-Z][\w-.~%+]{2,254}$
                pubsub:
                  description: Attributes related to the configuration of Pub/Sub resources associated with the Cloud Repositories.
                  type: object
                  properties:
                    topic:
                      description: Full resource name of the Pub/Sub topic where change notifications originating from the configured repo are sent to, before being retrieved by this event source. If not supplied, a topic is created on behalf of the user, in the GCP project referenced by the 'project' attribute. The expected format is described at https://cloud.google.com/pubsub/docs/admin#resource_names
                      type: string
                      pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/topics\/[a-zA-Z][\w-.~%+]{2,254}$
                  required: [topic]
                publishServiceAccount:
                  description: |-
                    Email address of the service account used for publishing notifications to Pub/Sub. This service
                    account needs to be in the same project as the repo, and to have the 'pubsub.topics.publish' IAM
                    permission associated with it. It can (but doesn't have to) be the same service account as the
                    'serviceAccountKey' attribute.

                    If unspecified, it defaults to the Compute Engine default service account.
                  type: string
                  format: email
                serviceAccountKey:
                  description: Deprecated - please use spec.auth.serviceAccountKey. Service account key used to authenticate the event source and allow it to interact with Google Cloud APIs. Only the JSON format is supported.
                  type: object
                  properties:
                    value:
                      description: Literal value of the service account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing the service account key.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                auth:
                  description:
                  type: object
                  properties:
                    serviceAccountKey:
                      description: Service account key used to authenticate the event source and allow it to interact with Google Cloud APIs. Only the JSON format is supported.
                      type: object
                      properties:
                        value:
                          description: Literal value of the service account key.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the service account key.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    gcpServiceAccount:
                      description: GCP Service account name to impersonate Identity and Access Management (IAM) service accounts to access Google Cloud services.
                      pattern: ^[a-z0-9-]{6,30}@[a-z0-9-]{1,30}(?:\.[a-z0-9-]{1,30})?\.gserviceaccount\.com$
                      type: string
                    kubernetesServiceAccount:
                      description: The name of the Kubernetes Service account that will be created and bound to the gcpServiceAccount to act as an IAM service account. Optional, by default the Kubernetes service account name will be generated by the controller.
                      type: string
                  oneOf:
                    - required: [serviceAccountKey]
                    - required: [gcpServiceAccount]
                sink:
                  description: The destination of events received via change notifications.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - repository
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                topic:
                  description: Resource name of the Pub/Sub topic where repositories events are currently sent to.
                  type: string
                subscription:
                  description: Resource name of the Pub/Sub subscription currently used by the event source for pulling events from repositories.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: googlecloudstoragesources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "com.google.cloud.storage.notification" },
        { "type": "com.google.cloud.storage.objectfinalize" },
        { "type": "com.google.cloud.storage.objectmetadataupdate" },
        { "type": "com.google.cloud.storage.objectdelete" },
        { "type": "com.google.cloud.storage.objectarchive" }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: GoogleCloudStorageSource
    plural: googlecloudstoragesources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Google Cloud Storage.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                bucket:
                  description: Name of the Cloud Storage bucket to receive change notifications from. Must meet the naming requirements described at https://cloud.google.com/storage/docs/naming-buckets
                  type: string
                  pattern: ^[a-z0-9][a-z0-9_-]{1,61}[a-z0-9](\.[a-z0-9][a-z0-9_-]{1,61}[a-z0-9])*$
                pubsub:
                  description: Attributes related to the configuration of Pub/Sub resources associated with the Cloud Storage bucket.
                  type: object
                  properties:
                    topic:
                      description: Full resource name of the Pub/Sub topic where change notifications originating from the configured bucket are sent to, before being retrieved by this event source. If not supplied, a topic is created on behalf of the user, in the GCP project referenced by the 'project' attribute. The expected format is described at https://cloud.google.com/pubsub/docs/admin#resource_names
                      type: string
                      pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/topics\/[a-zA-Z][\w-.~%+]{2,254}$
                    project:
                      description: Name of the GCP project where Pub/Sub resources associated with the Cloud Storage bucket are to be created. Mutually exclusive with 'topic' which, if supplied, already contains the project name.
                      type: string
                      pattern: ^[a-z][a-z0-9-]{3,29}$
                  oneOf:
                    - required: [project]
                    - required: [topic]
                eventTypes:
                  description: Types of events to receive change notifications for. Accepted values are listed at https://cloud.google.com/storage/docs/pubsub-notifications#events. All types are selected when this attribute is not set.
                  type: array
                  items:
                    type: string
                    enum:
                      - OBJECT_FINALIZE
                      - OBJECT_METADATA_UPDATE
                      - OBJECT_DELETE
                      - OBJECT_ARCHIVE
                objectNamePrefix:
                  description: If present, will only receive notifications for objects whose names that begin with this prefix.
                  type: string
                serviceAccountKey:
                  description: Deprecated - please use spec.auth.serviceAccountKey. Service account key used to authenticate the event source and allow it to interact with Google Cloud APIs. Only the JSON format is supported.
                  type: object
                  properties:
                    value:
                      description: Literal value of the service account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing the service account key.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                auth:
                  description:
                  type: object
                  properties:
                    serviceAccountKey:
                      description: Service account key used to authenticate the event source and allow it to interact with Google Cloud APIs. Only the JSON format is supported.
                      type: object
                      properties:
                        value:
                          description: Literal value of the service account key.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the service account key.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    gcpServiceAccount:
                      description: GCP Service account name to impersonate Identity and Access Management (IAM) service accounts to access Google Cloud services.
                      pattern: ^[a-z0-9-]{6,30}@[a-z0-9-]{1,30}(?:\.[a-z0-9-]{1,30})?\.gserviceaccount\.com$
                      type: string
                    kubernetesServiceAccount:
                      description: The name of the Kubernetes Service account that will be created and bound to the gcpServiceAccount to act as an IAM service account. Optional, by default the Kubernetes service account name will be generated by the controller.
                      type: string
                  oneOf:
                    - required: [serviceAccountKey]
                    - required: [gcpServiceAccount]
                sink:
                  description: The destination of events received via change notifications.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - bucket
                - pubsub
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                notificationID:
                  description: ID of the Cloud Storage bucket notification configuration managed by the event source.
                  type: string
                topic:
                  description: Resource name of the Pub/Sub topic where change notifications are currently sent to.
                  type: string
                subscription:
                  description: Resource name of the Pub/Sub subscription currently used by the event source for pulling change notifications.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: httppollersources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: HTTPPollerSource
    plural: httppollersources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for sourcing events by polling HTTP/S endpoints.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                eventType:
                  description: "Value of the CloudEvents 'type' attribute to set on ingested events. Describes the type of event related to the originating occurrence. Please refer to the CloudEvents specification for more details: https://github.com/cloudevents/spec/blob/v1.0.1/spec.md#type"
                  type: string
                eventSource:
                  description: "Value of the CloudEvents 'source' attribute to set on ingested events. Identifies the context in which an event happened. Must be expressed as a URI-reference. Please refer to the CloudEvents specification for more details: https://github.com/cloudevents/spec/blob/v1.0.1/spec.md#source-1"
                  type: string
                endpoint:
                  description: HTTP/S URL of the endpoint to poll data from.
                  type: string
                  format: url
                  pattern: ^https?:\/\/.+$
                method:
                  description: HTTP request method to use in requests to the specified 'endpoint'.
                  type: string
                  enum: [GET, POST, PUT, PATCH, DELETE]
                skipVerify:
                  description: Controls whether the HTTP client verifies the server's certificate chain and host name when communicating over TLS.
                  type: boolean
                caCertificate:
                  description: CA certificate in X.509 format the HTTP client should use to verify the identity of remote servers when communicating over TLS.
                  type: string
                basicAuthUsername:
                  description: User name to set in HTTP requests that require HTTP Basic authentication.
                  type: string
                basicAuthPassword:
                  description: Password to set in HTTP requests that require HTTP Basic authentication.
                  type: object
                  properties:
                    value:
                      description: Literal value of the password.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing the password.
                      type: object
                      properties:
                        name:
                          description: Name of the Secret object.
                          type: string
                        key:
                          description: Key from the Secret object.
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                headers:
                  description: HTTP headers to include in HTTP requests sent to the endpoint.
                  type: object
                  additionalProperties:
                    type: string
                interval:
                  description: Duration which defines how often the HTTP/S endpoint should be polled. Expressed as a duration string, which format is documented at https://pkg.go.dev/time#ParseDuration.
                  type: string
                sink:
                  description: The destination of events generated by polling the HTTP/S endpoint.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - eventType
                - method
                - endpoint
                - interval
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: ibmmqsources.sources.triggermesh.io
  labels:
    duck.knative.dev/addressable: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.ibm.mq.message" }
      ]
spec:
  group: sources.triggermesh.io
  names:
    kind: IBMMQSource
    plural: ibmmqsources
    categories:
      - all
      - knative
      - eventing
      - sources
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event source for IBM MQ.
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                connectionName:
                  description: IBM MQ server URI, e.g. ibm-mq.default.svc.cluster.local(1414).
                  type: string
                channelName:
                  description: The name of IBM MQ Channel to listen to events on. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=types-channels.
                  type: string
                queueManager:
                  description: IBM MQ Queue Manager name. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=types-mq-queue-managers.
                  type: string
                queueName:
                  description: IBM MQ Queue name. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=types-queues.
                  type: string
                delivery:
                  description: Events delivery parameters.
                  type: object
                  properties:
                    deadLetterQueueManager:
                      description: The name of the Dead Letter Queue Manager. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=components-dead-letter-queues
                      type: string
                    deadLetterQueue:
                      description: The name of the Dead Letter Queue. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=components-dead-letter-queues
                      type: string
                    backoffDelay:
                      description: Delay between delivery retries for failed messages.
                      type: integer
                    retry:
                      description: The number of delivery retries before moving the message to DLQ.
                      type: integer
                  required:
                    - deadLetterQueue
                sink:
                  description: The destination of events sourced from IBM MQ.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                credentials:
                  description: IBM MQ server connection authentication parameters. For more information about authentication, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.0?topic=mechanisms-connection-authentication.
                  type: object
                  properties:
                    username:
                      description: IBM MQ user identifier for client application. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=application-user-ids.
                      type: object
                      properties:
                        value:
                          description: Plain text user ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the user ID.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                    password:
                      description: IBM MQ client application password. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=mq-mqcsp-password-protection.
                      type: object
                      properties:
                        value:
                          description: Plain text password.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the password.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    tls:
                      description: TLS configuration for IBM MQ client. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=mechanisms-tls-security-protocols-in-mq.
                      type: object
                      properties:
                        cipher:
                          description: Message encryption and authentication algorithm. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=tls-cipherspecs-ciphersuites.
                          type: string
                        clientAuthRequired:
                          description: Parameter to specify whether TLS client authentication is required. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=fields-sslclientauth-mqlong.
                          type: boolean
                        certLabel:
                          description: Unique identifier representing a digital certificate stored in a key repository. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=repository-digital-certificate-labels-understanding-requirements.
                          type: string
                        keyRepository:
                          description: Key repository for (m)TLS connection. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=mq-ssltls-key-repository.
                          type: object
                          properties:
                            keyDatabase:
                              type: object
                              properties:
                                valueFromSecret:
                                  description: A reference to a Kubernetes Secret object containing the key database.
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    key:
                                      type: string
                                  required:
                                    - name
                                    - key
                              required:
                                - valueFromSecret
                            passwordStash:
                              type: object
                              properties:
                                valueFromSecret:
                                  description: A reference to a Kubernetes Secret object containing the password stash.
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    key:
                                      type: string
                                  required:
                                    - name
                                    - key
                              required:
                                - valueFromSecret
                          required:
                            - keyDatabase
                            - passwordStash
                      required:
                        - cipher
                        - clientAuthRequired
                        - keyRepository
                  anyOf:
                    - required: [username, password]
                    - required: [tls]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - connectionName
                - channelName
                - queueManager
                - queueName
                - sink
                - credentials
            status:
              type: object
              description: Reported status of the event source.
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Public address of the HTTP/S endpoint that is subscribed to the Amazon SNS topic.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: kafkasources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.kafka.event" }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: KafkaSource
    plural: kafkasources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Kafka.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                topic:
                  description: Topic name to stream the target events to.
                  type: string
                bootstrapServers:
                  description: Array of Kafka servers used to bootstrap the connection.
                  type: array
                  items:
                    type: string
                    minLength: 1
                groupID:
                  description: The ID of the kafka group.
                  type: string
                auth:
                  description: Authentication method used to interact with Kafka.
                  type: object
                  properties:
                    saslEnable:
                      description: Boolean to indicate if SASL is enabled.
                      type: boolean
                    tlsEnable:
                      description: Boolean to indicate if TLS is enabled.
                      type: boolean
                    securityMechanism:
                      description: securityMechanism attribute indicate which mechanism to use.
                      type: string
                      enum: [GSSAPI, PLAIN, SCRAM-SHA-256, SCRAM-SHA-512]
                    username:
                      description: Kafka account username.
                      type: string
                    password:
                      description: Kafka account password.
                      type: object
                      properties:
                        value:
                          description: Plain text password.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the password.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    kerberos:
                      description: Kerberos Authentication method to interact with Kafka.
                      type: object
                      properties:
                        realm:
                          description: The name of the Kerberos Realm.
                          type: string
                        serviceName:
                          description: The primary name of the Kafka server configured.
                          type: string
                        username:
                          description: Kerberos username or Kerberos Principal Name. The Username or the Principal doesn't require the Realm in it.
                          type: string
                        password:
                          description: Kerberos Password.
                          type: object
                          properties:
                            value:
                              description: Plain text password.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the password.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        config:
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the kerberos configuration file (krb5.conf).
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        keytab:
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the kerberos keytab file contents.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                    tls:
                      description: TLS Authentication method to interact with Kafka.
                      type: object
                      properties:
                        ca:
                          description: The value to the configured CA.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the CA content.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        clientCert:
                          description: The value of the Client Cert.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the Client Cert content.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        clientKey:
                          description: The value of the Client Key.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the Client Key content.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        skipVerify:
                          description: SkipVerify controls whether a client verifies the server's certificate chain and host name. If skipVerify is true, crypto/tls accepts any certificate presented by the server and any host name in that certificate. In this mode, TLS is susceptible to machine-in-the-middle attacks unless custom verification is used. This should be used only for testing.
                          type: boolean
                  required:
                    - saslEnable
                sink:
                  description: The destination of events sourced from Kafka Kafka.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - bootstrapServers
                - topic
                - groupID
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Public address of the HTTP/S endpoint exposing the source.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mongodbsources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.mongodb.event" }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: MongoDBSource
    plural: mongodbsources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for MongoDB.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                connectionString:
                  description: MongoDB connection string.
                  type: string
                database:
                  description: MongoDB database name.
                  type: string
                collection:
                  description: MongoDB collection name.
                  type: string
                sink:
                  description: The destination of events sourced from Kafka Kafka.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - connectionString
                - database
                - collection
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Public address of the HTTP/S endpoint exposing the source.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: ocimetricssources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.oracle.cloud.monitoring",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.oracle.cloud.monitoring.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: OCIMetricsSource
    plural: ocimetricssources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Oracle Cloud Infrastructure (OCI) Metrics.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                oracleApiPrivateKey:
                  description: PEM encoded API private key that has access to the OCI metrics API.
                  type: object
                  properties:
                    value:
                      description: Literal value of the private key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret containing the private key.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                oracleApiPrivateKeyPassphrase:
                  description: Passphrase to unlock the 'oracleApiPrivateKey'.
                  type: object
                  properties:
                    value:
                      description: Literal value of the passphrase.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret containing the passphrase.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                oracleApiPrivateKeyFingerprint:
                  description: MD5 fingerprint of 'oracleApiPrivateKey'.
                  type: object
                  properties:
                    value:
                      description: Literal value of the fingerprint.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret containing the fingerprint.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                oracleTenancy:
                  description: OCID of the target tenancy.
                  type: string
                oracleUser:
                  description: OCID of the target user associated with the 'oracleApiPrivateKey'.
                  type: string
                oracleRegion:
                  description: OCI target region.
                  type: string
                metricsPollingFrequency:
                  description: Polling frequency of the OCI API for metrics details (supported values 1m-60m, 1h-24h, 1d).
                  type: string
                metrics:
                  description: Array of metrics to poll for.
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        description: Used as the event source for the metric.
                        type: string
                      metricsNamespace:
                        description: Type of metrics to pull from such as oci_computeagent, oci_apigateway, oci_vnc, or oci_compute_infrastructure_health.
                        type: string
                      metricsQuery:
                        description: Metrics query to send based off of OCI Monitoring Query Language.
                        type: string
                      oracleCompartment:
                        description: OCID of the target compartment (if not specified, default to the value of 'oracleTenancy').
                        type: string
                    required:
                      - name
                      - metricsNamespace
                      - metricsQuery
                sink:
                  description: The destination of events sourced from OCI metrics.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - oracleApiPrivateKey
                - oracleApiPrivateKeyPassphrase
                - oracleApiPrivateKeyFingerprint
                - oracleTenancy
                - oracleUser
                - oracleRegion
                - metrics
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: salesforcesources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.salesforce.stream.message",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.salesforce.stream.message.json"
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: SalesforceSource
    plural: salesforcesources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Salesforce.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                auth:
                  description: Authentication method to interact with the Salesforce API.
                  type: object
                  properties:
                    clientID:
                      description: Client ID.
                      type: string
                    server:
                      description: Salesforce server.
                      type: string
                    user:
                      description: Salesforce user.
                      type: string
                    certKey:
                      description: Certificate key to sign authentication requests with the Salesforce API.
                      type: object
                      properties:
                        value:
                          description: Literal value of the certificate key.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret containing the certificate key.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                  required:
                    - clientID
                    - server
                    - user
                    - certKey
                apiVersion:
                  description: Salesforce API version.
                  type: string
                subscription:
                  description: Subscription to a Salesforce channel.
                  type: object
                  properties:
                    channel:
                      type: string
                    replayID:
                      type: integer
                  required:
                    - channel
                sink:
                  description: The destination of events received via Salesforce streams.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - auth
                - subscription
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: slacksources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.slack.events",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.slack.events.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: SlackSource
    plural: slacksources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Slack.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                signingSecret:
                  description: Signing secret to authenticate Slack callbacks.
                  type: object
                  properties:
                    value:
                      description: Literal value of the signing secret.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret containing the signing secret.
                      type: object
                      properties:
                        name:
                          description: Name of the Secret object.
                          type: string
                        key:
                          description: Key from the Secret object.
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                appID:
                  description: ID which identifies the Slack application generating this event. It helps identifying the App that sources events when multiple Slack applications share the same endpoint.
                  type: string
                sink:
                  description: The destination of events generated from Slack callbacks.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Public address of the HTTP/S endpoint that is receiving Slack callbacks.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: solacesources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.solace.event" }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: SolaceSource
    plural: solacesources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Solace.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                url:
                  description: Solace server used to bootstrap the connection.
                  type: string
                queueName:
                  description: Queue name to stream the target events to.
                  type: string
                auth:
                  description: Authentication method used to interact with Solace.
                  type: object
                  properties:
                    saslEnable:
                      description: Boolean to indicate if SASL is enabled.
                      type: boolean
                    tlsEnable:
                      description: Boolean to indicate if TLS is enabled.
                      type: boolean
                    username:
                      description: Solace account username.
                      type: string
                    password:
                      description: Solace account password.
                      type: object
                      properties:
                        value:
                          description: Plain text password.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the password.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    tls:
                      description: TLS Authentication method to interact with Solace.
                      type: object
                      properties:
                        ca:
                          description: The value to the configured CA.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the CA content.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        clientCert:
                          description: The value of the Client Cert.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the Client Cert content.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        clientKey:
                          description: The value of the Client Key.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the Client Key content.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        skipVerify:
                          description: SkipVerify controls whether a client verifies the server's certificate chain and host name. If skipVerify is true, crypto/tls accepts any certificate presented by the server and any host name in that certificate. In this mode, TLS is susceptible to machine-in-the-middle attacks unless custom verification is used. This should be used only for testing.
                          type: boolean
                sink:
                  description: The destination of events sourced from Solace.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - url
                - queueName
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Public address of the HTTP/S endpoint exposing the source.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: twiliosources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.twilio.sms",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.twilio.sms.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: TwilioSource
    plural: twiliosources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Twilio.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                sink:
                  description: The destination of events received by the webhook.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: webhooksources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: WebhookSource
    plural: webhooksources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for receiving arbitrary events over a HTTP/S webhook.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                eventType:
                  description: "Value of the CloudEvents 'type' attribute to set on ingested events. Describes the type of event related to the originating occurrence. Please refer to the CloudEvents specification for more details: https://github.com/cloudevents/spec/blob/v1.0.1/spec.md#type"
                  type: string
                eventSource:
                  description: "Value of the CloudEvents 'source' attribute to set on ingested events. Identifies the context in which an event happened. Must be expressed as a URI-reference. Please refer to the CloudEvents specification for more details: https://github.com/cloudevents/spec/blob/v1.0.1/spec.md#source-1"
                  type: string
                eventExtensionAttributes:
                  description: CloudEvents extension attributes to be added based on HTTP request fields.
                  type: object
                  properties:
                    from:
                      description: Source elements to create attributes from. Elements that might contain multiple values (headers, queries) will convert all of them into extension attributes
                      type: array
                      items:
                        type: string
                        enum:
                          - method
                          - path
                          - host
                          - queries
                          - headers
                  required:
                    - from
                corsAllowOrigin:
                  description: Value of the CORS 'Access-Control-Allow-Origin' header to set on ingested requests.
                  type: string
                basicAuthUsername:
                  description: User name HTTP clients must set to authenticate with the webhook using HTTP Basic authentication.
                  type: string
                basicAuthPassword:
                  description: Password HTTP clients must set to authenticate with the webhook using HTTP Basic authentication.
                  type: object
                  properties:
                    value:
                      description: Literal value of the password.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing the password.
                      type: object
                      properties:
                        name:
                          description: Name of the Secret object.
                          type: string
                        key:
                          description: Key from the Secret object.
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                sink:
                  description: The destination of events generated from requests to the webhook.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - eventType
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Public address of the HTTP/S endpoint exposing the webhook.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: zendesksources.sources.triggermesh.io
  labels:
    eventing.knative.dev/source: 'true'
    duck.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "com.zendesk.ticket.created",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.zendesk.ticket.created.json",
          "description": ""
        }
      ]
spec:
  group: sources.triggermesh.io
  scope: Namespaced
  names:
    kind: ZendeskSource
    plural: zendesksources
    categories:
      - all
      - knative
      - eventing
      - sources
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Zendesk.
          type: object
          properties:
            spec:
              description: Desired state of the event source.
              type: object
              properties:
                subdomain:
                  description: Name of the Zendesk subdomain.
                  type: string
                  pattern: ^[a-z0-9][a-z0-9-]+[a-z0-9]$
                email:
                  description: Email of the Zendesk user to authenticate requests to the Zendesk API.
                  type: string
                token:
                  description: Zendesk API token. Allows the source to interact with the Zendesk API.
                  type: object
                  properties:
                    value:
                      description: Literal value of the API token.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret containing the API token.
                      type: object
                      properties:
                        name:
                          description: Name of the Secret object.
                          type: string
                        key:
                          description: Key from the Secret object.
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                webhookUsername:
                  description: User name Zendesk requests must set to authenticate with the webhook using HTTP Basic authentication.
                  type: string
                webhookPassword:
                  description: Password Zendesk requests must set to authenticate with the webhook using HTTP Basic authentication.
                  type: object
                  properties:
                    value:
                      description: Literal value of the password.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing the password.
                      type: object
                      properties:
                        name:
                          description: Name of the Secret object.
                          type: string
                        key:
                          description: Key from the Secret object.
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                sink:
                  description: The destination of events generated from requests to the Zendesk webhook.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - subdomain
                - email
                - token
                - webhookUsername
                - webhookPassword
                - sink
            status:
              description: Reported status of the event source.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Public address of the HTTP/S endpoint that is subscribed for receiving Zendesk webhhook events.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Sink
          type: string
          jsonPath: .status.sinkUri
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awscomprehendtargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "io.triggermesh.targets.aws.comprehend.result",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.targets.aws.comprehend.result.json"
        }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSComprehendTarget
    plural: awscomprehendtargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: An event targte for sending messages to the AWS Comprehend API.
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                auth:
                  description: Authentication method to interact with the Amazon API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                region:
                  description: Code of the AWS region to use for the Comprehend API. Available region codes are documented in the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints.
                  type: string
                language:
                  description: Language code to use for Comprehend. Available languages can be found at https://docs.aws.amazon.com/comprehend/latest/dg/supported-languages.html.
                  type: string
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - region
                - language
                - auth
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awsdynamodbtargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "io.triggermesh.targets.aws.dynamodb.result",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.targets.aws.dynamodb.result.json"
        }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSDynamoDBTarget
    plural: awsdynamodbtargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for AWS DynamoDB.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                auth:
                  description: Authentication method to interact with the Amazon API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                arn:
                  description: ARN of the DynamoDB table to post events to. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazondynamodb.html
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:dynamodb:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:table\/[a-zA-Z0-9-_.]{3,255}$
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - auth
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awseventbridgetargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "io.triggermesh.targets.aws.eventbridge.result",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.targets.aws.eventbridge.result.json"
        }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSEventBridgeTarget
    plural: awseventbridgetargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for AWS EventBridge Service.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                auth:
                  description: Authentication method to interact with the Amazon API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                arn:
                  description: ARN of the Event Bus that will receive events. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoneventbridge.html
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:events:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:event-bus\/.+$
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in messages sent to EventBridge. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - auth
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awskinesistargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "io.triggermesh.targets.aws.kinesis.result",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.targets.aws.kinesis.result.json"
        }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSKinesisTarget
    plural: awskinesistargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: An event target that can stream events into an AWS Kinesis stream.
          properties:
            spec:
              type: object
              properties:
                auth:
                  description: Authentication method to interact with the Amazon API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                arn:
                  description: ARN of the Kinesis stream that will receive events. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonkinesis.html
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:kinesis:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:stream/.+$
                partition:
                  description: A Kinesis partition name is required for the target to know where to stream the events to.
                  type: string
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in records created in Kinesis. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - auth
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awslambdatargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.targets.aws.lambda.result" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSLambdaTarget
    plural: awslambdatargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for AWS Lambda.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                auth:
                  description: Authentication method to interact with the Amazon API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                arn:
                  description: ARN of the Lambda function that will receive events. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslambda.html
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:(function|layer|event-source-mapping):.+$
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in Lambda function calls. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - auth
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awss3targets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "io.triggermesh.awss3.object.put" },
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "io.triggermesh.targets.aws.s3.result",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.targets.aws.s3.result.json"
        }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSS3Target
    plural: awss3targets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: An event target that can stream events into an AWS S3 bucket.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                auth:
                  description: Authentication method to interact with the Amazon API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                arn:
                  type: string
                  description: ARN of the S3 bucket that will receive events. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html
                  pattern: ^arn:aws(-cn|-us-gov)?:s3:::[0-9a-z][0-9a-z.-]{2,62}$
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in objects created in S3. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - auth
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awssnstargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "io.triggermesh.targets.aws.sns.result",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.targets.aws.sns.result.json"
        }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSSNSTarget
    plural: awssnstargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for AWS Simple Notification Service.
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                auth:
                  description: Authentication method to interact with the Amazon API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                arn:
                  description: ARN of the SNS queue that will receive events. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsns.html
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:sns:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in notifications sent to SNS. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - auth
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awssqstargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.targets.aws.sqs.result" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AWSSQSTarget
    plural: awssqstargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for AWS Simple Queue Service.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                auth:
                  description: Authentication method to interact with the Amazon API.
                  type: object
                  properties:
                    credentials:
                      description: Security credentials authentication. For more information about AWS security credentials, please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html.
                      type: object
                      properties:
                        accessKeyID:
                          description: Access key ID.
                          type: object
                          properties:
                            value:
                              description: Literal value of the access key ID.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the access key ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        secretAccessKey:
                          description: Secret access key.
                          type: object
                          properties:
                            value:
                              description: Literal value of the secret access key.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the secret access key.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        sessionToken:
                          description: The AWS session token for temporary credentials.
                          type: object
                          properties:
                            value:
                              description: Literal value of the session token.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the session token.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        assumeIamRole:
                          description: |-
                            The ARN of an IAM role for cross-account or remote EKS cluster authorization.
                            For more information please refer to the AWS General Reference at https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                      required:
                        - accessKeyID
                        - secretAccessKey
                    iamRole:
                      description: Deprecated, please use "iam" object instead.
                      type: string
                      pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                    iam:
                      description: The IAM role authentication parameters. For Amazon EKS only.
                      type: object
                      properties:
                        roleArn:
                          description: |-
                            The ARN of an IAM role which can be impersonated to obtain AWS permissions. For
                            more information about IAM roles for service accounts, please refer to the Amazon EKS User Guide
                            at https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html

                            Beware that this IAM role only applies to the receive adapter, for retrieving S3 notifications
                            from the intermediate Amazon SQS queue. The TriggerMesh controller requires its own set of IAM
                            permissions for interacting with the Amazon S3 and (optionally) Amazon SQS management APIs. These
                            can be granted via a separate IAM role, through the 'triggermesh-controller' serviceAccount that
                            is located inside the 'triggermesh' namespace.
                          type: string
                          pattern: ^arn:aws(-cn|-us-gov)?:iam::\d{12}:role\/.+$
                        serviceAccount:
                          description: |-
                            The name of the service account to be assigned on the receive adapter. Can be created externally and
                            shared between multiple components.
                          type: string
                  oneOf:
                    - required: [credentials]
                    - required: [iamRole]
                    - required: [iam]
                arn:
                  description: ARN of the SQS queue that will receive events. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslambda.html
                  type: string
                  pattern: ^arn:aws(-cn|-us-gov)?:sqs:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                messageGroupId:
                  description: FIFO queue grouping to ensure proper ordering. Should be unique per target
                  type: string
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in messages sent to SQS. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - arn
                - auth
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azureeventhubstargets.targets.triggermesh.io
  labels:
    eventing.knative.dev/target: 'true'
    duck.knative.dev/target: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.azure.eventhubs.put.response" }
      ]
spec:
  group: targets.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureEventHubsTarget
    plural: azureeventhubstargets
    categories:
      - all
      - knative
      - eventing
      - targets
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Azure Event Hubs.
          type: object
          properties:
            spec:
              description: Desired state of the event target.
              type: object
              properties:
                eventHubID:
                  description: |-
                    Resource ID of the Event Hubs instance.

                    The expected format is
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}
                  type: string
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.EventHub\/namespaces\/[A-Za-z0-9-]{6,50}\/event[Hh]ubs\/[a-zA-Z0-9][\w.-]{0,49}$
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in objects created in Azure Event Hub. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                auth:
                  description: Authentication method to interact with the Azure Event Hubs REST API.
                  type: object
                  properties:
                    sasToken:
                      description: An Azure shared access signature (SAS) token. For more information about SAS tokens, please refer to the Azure Storage documentation at https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview.
                      type: object
                      properties:
                        keyName:
                          description: Name of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal name of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's name.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        keyValue:
                          description: Value of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's value.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        connectionString:
                          description: Connection string containing both the resource URI of the Event Hubs instance, and the SAS token. Mutually exclusive with 'keyName' and 'keyValue'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the connection string.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the connection string.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      oneOf:
                        - required:
                            - keyName
                            - keyValue
                        - required:
                            - connectionString
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For more information about service principals, please refer to the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      type: object
                      properties:
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          type: object
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the tenant ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientID:
                          description: ID of the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client secret.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client secret.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                  oneOf:
                    - required: [sasToken]
                    - required: [servicePrincipal]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - eventHubID
                - auth
            status:
              description: Reported status of the event target.
              type: object
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azuresentineltargets.targets.triggermesh.io
  labels:
    duck.knative.dev/addressable: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "io.triggermesh.azure.sentinel.incident",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.azure.sentinel.incident.json"
        }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.azure.sentinel.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: AzureSentinelTarget
    plural: azuresentineltargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for azuresentineltarget.
          properties:
            spec:
              description: Desired state of the event target.
              type: object
              properties:
                subscriptionID:
                  type: string
                  description: subscriptionID refers to the Azure Subscription ID that the Azure Sentinel instance is associated with.
                resourceGroup:
                  type: string
                  description: resourceGroup refers to the resource group where the Azure Sentinel instance is deployed.
                workspace:
                  type: string
                  description: workspace refers to the workspace name in Azure Sentinel.
                auth:
                  description: Authentication method to interact with the Azure Event Hubs REST API.
                  type: object
                  properties:
                    sasToken:
                      description: An Azure shared access signature (SAS) token. For more information about SAS tokens, please refer to the Azure Storage documentation at https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview.
                      type: object
                      properties:
                        keyName:
                          description: Name of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal name of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's name.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        keyValue:
                          description: Value of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's value.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        connectionString:
                          description: Connection string containing both the resource URI of the Event Hubs instance, and the SAS token. Mutually exclusive with 'keyName' and 'keyValue'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the connection string.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the connection string.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      oneOf:
                        - required:
                            - keyName
                            - keyValue
                        - required:
                            - connectionString
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For more information about service principals, please refer to the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      type: object
                      properties:
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          type: object
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the tenant ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientID:
                          description: ID of the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client secret.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client secret.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                  oneOf:
                    - required: [sasToken]
                    - required: [servicePrincipal]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - subscriptionID
                - resourceGroup
                - workspace
                - auth
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  description: Array of CloudEvents this target will accept for processing.
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: azureservicebustargets.targets.triggermesh.io
  labels:
    eventing.knative.dev/target: 'true'
    duck.knative.dev/target: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.azure.servicebus.put.response" }
      ]
spec:
  group: targets.triggermesh.io
  scope: Namespaced
  names:
    kind: AzureServiceBusTarget
    plural: azureservicebustargets
    categories:
      - all
      - knative
      - eventing
      - targets
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Azure Service Bus.
          type: object
          properties:
            spec:
              description: Desired state of the event target.
              type: object
              properties:
                topicID:
                  description: |-
                    The resource ID the Service Bus Topic to subscribe to.

                    The expected format is
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}
                  type: string
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.ServiceBus\/namespaces\/[A-Za-z0-9-]{6,50}\/topics\/[A-Za-z0-9][\w.~/-]{0,258}[A-Za-z0-9]$
                queueID:
                  description: |-
                    The resource ID the Service Bus Queue to subscribe to.

                    The expected format is
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}
                  type: string
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.ServiceBus\/namespaces\/[A-Za-z0-9-]{6,50}\/queues\/[A-Za-z0-9][\w.~/-]{0,258}[A-Za-z0-9]$
                eventOptions:
                  type: object
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in objects created in Azure Service Bus. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                auth:
                  description: Authentication method to interact with the Azure Service Bus REST API.
                  type: object
                  properties:
                    sasToken:
                      description: An Azure shared access signature (SAS) token. For more information about SAS tokens, please refer to the Azure Storage documentation at https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview.
                      type: object
                      properties:
                        keyName:
                          description: Name of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal name of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's name.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        keyValue:
                          description: Value of the key used by the SAS token. Mutually exclusive with 'connectionString'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the key's value.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        connectionString:
                          description: Connection string containing both the resource URI of the Service Bus instance, and the SAS token. Mutually exclusive with 'keyName' and 'keyValue'.
                          type: object
                          properties:
                            value:
                              description: Literal value of the connection string.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the connection string.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      oneOf:
                        - required:
                            - keyName
                            - keyValue
                        - required:
                            - connectionString
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For more information about service principals, please refer to the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      type: object
                      properties:
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          type: object
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the tenant ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientID:
                          description: ID of the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client ID.
                              type: string
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client ID.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          type: object
                          properties:
                            value:
                              description: Literal value of the client secret.
                              type: string
                              format: password
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the client secret.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                  oneOf:
                    - required: [sasToken]
                    - required: [servicePrincipal]
                webSocketsEnable:
                  description: Boolean to indicate to use WebSockets.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              oneOf:
                - required: [topicID]
                - required: [queueID]
              required:
                - auth
            status:
              description: Reported status of the event target.
              type: object
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: cloudeventstargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "*" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: CloudEventsTarget
    plural: cloudeventstargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target that acts as a gateway for outgoing CloudEvents.
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                endpoint:
                  description: An HTTP CloudEvents endpoint to stream events to.
                  type: string
                  format: url
                  pattern: ^https?:\/\/.+$
                path:
                  description: Path at the remote endpoint under which requests are accepted.
                  type: string
                credentials:
                  description: Optional credentials specification for remote CloudEvents endpoint.
                  type: object
                  properties:
                    basicAuth:
                      description: HTTP basic authentication parameters.
                      type: object
                      properties:
                        username:
                          description: User name for HTTP Basic authentication.
                          type: string
                        password:
                          description: Password for HTTP Basic authentication.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the password.
                              type: object
                              properties:
                                name:
                                  description: Name of the Secret object.
                                  type: string
                                key:
                                  description: Key from the Secret object.
                                  type: string
                              required:
                                - name
                                - key
                          required: [valueFromSecret]
                      required:
                        - username
                        - password
                  required: [basicAuth]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - endpoint
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: datadogtargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "io.triggermesh.datadog.metric.submit",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.datadog.metric.submit.json"
        },{
          "type": "io.triggermesh.datadog.event.post",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.datadog.event.post.json"
        },{
          "type": "io.triggermesh.datadog.log.send",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.datadog.log.send.json"
        }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.datadog.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: DatadogTarget
    plural: datadogtargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Datadog.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                apiKey:
                  type: object
                  description: Datadog API Key with access to receive metrics.
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                site:
                  type: string
                  description: Controls the site of the Datadog intake API
                eventOptions:
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  type: object
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - apiKey
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: elasticsearchtargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "io.triggermesh.elasticsearch.doc.index" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.elasticsearch.doc.index.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: ElasticsearchTarget
    plural: elasticsearchtargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Elasticsearch.
          properties:
            spec:
              type: object
              properties:
                indexName:
                  description: Elasticsearch index to stream the events to.
                  type: string
                connection:
                  type: object
                  description: Attributes for connecting to a private Elasticsearch instance or Elastic cloud.
                  properties:
                    addresses:
                      description: Hostname/IP Address of the Elasticsearch instance to stream events to.
                      type: array
                      items:
                        type: string
                        minLength: 1
                    skipVerify:
                      description: Skip verification of SSL/TLS certificates.
                      type: boolean
                    username:
                      description: Elasticsearch instance username.
                      type: string
                    password:
                      description: Elasticsearch instance password.
                      type: object
                      properties:
                        secretKeyRef:
                          type: object
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                    apiKey:
                      description: API Key to connect to the Elasticsearch instance.
                      type: object
                      properties:
                        secretKeyRef:
                          type: object
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                  required:
                    - addresses
                  oneOf:
                    - required: [username, password]
                    - required: [apiKey]
                eventOptions:
                  type: object
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in documents created in Elasticsearch. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - connection
                - indexName
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: googlecloudfirestoretargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "io.triggermesh.google.firestore.write",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.google.firestore.write.json"
        },
        {
          "type": "io.triggermesh.google.firestore.query.tables",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.google.firestore.query.tables.json"
        },
        {
          "type": "io.triggermesh.google.firestore.query.table",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.google.firestore.query.table.json"
        },
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.google.firestore.write.response" },
        { "type": "io.triggermesh.google.firestore.query.tables.response" },
        { "type": "io.triggermesh.google.firestore.query.table.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: GoogleCloudFirestoreTarget
    plural: googlecloudfirestoretargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Google Cloud Firestore.
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                defaultCollection:
                  description: Default firestore collection to stream events into.
                  type: string
                projectID:
                  description: Google Cloud Project ID associated with the firestore database.
                  type: string
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in documents created in Firestore. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included. component only.
                  type: boolean
                credentialsJson:
                  type: object
                  description: GCP credentials used to programmatically interact with Google Cloud Storage. For additional information, refer to https://cloud.google.com/docs/authentication/production.
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                eventOptions:
                  type: object
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - credentialsJson
                - projectID
                - defaultCollection
            status:
              type: object
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: googlecloudpubsubtargets.targets.triggermesh.io
  labels:
    duck.knative.dev/addressable: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.googlecloudpubsubtarget.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: GoogleCloudPubSubTarget
    plural: googlecloudpubsubtargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Google Cloud Pub/Sub.
          properties:
            spec:
              description: Desired state of the event target.
              type: object
              properties:
                topic:
                  description: Full resource name of the Pub/Sub topic to stream events to, in the format "projects/{project_name}/topics/{topic_name}".
                  type: string
                  pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/topics\/[a-zA-Z][\w-.~%+]{2,254}$
                credentialsJson:
                  type: object
                  description: GCP credentials used to programmatically interact with Google Cloud Pub/Sub. For additional information, refer to https://cloud.google.com/docs/authentication/production.
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in objects created in GCP Storage. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - topic
                - credentialsJson
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  description: Array of CloudEvents this target will accept for processing.
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: googlecloudstoragetargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "com.google.cloud.storage.object.insert" },
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "com.google.cloud.storage.object.insert.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: GoogleCloudStorageTarget
    plural: googlecloudstoragetargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Google Cloud Storage.
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                bucketName:
                  description: GCP Storage bucket to stream events to. Must meet the naming requirements described at https://cloud.google.com/storage/docs/naming-buckets
                  type: string
                  pattern: ^[a-z0-9][a-z0-9_-]{1,61}[a-z0-9](\.[a-z0-9][a-z0-9_-]{1,61}[a-z0-9])*$
                credentialsJson:
                  description: GCP credentials used to programmatically interact with Google Cloud Storage. For additional information, refer to https://cloud.google.com/docs/authentication/production.
                  type: object
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                eventOptions:
                  type: object
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in objects created in GCP Storage. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - credentialsJson
                - bucketName
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: googlecloudworkflowstargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "io.trigermesh.google.workflows.run",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.trigermesh.google.workflows.run.json"
        }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.trigermesh.google.workflows.run.result" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: GoogleCloudWorkflowsTarget
    plural: googlecloudworkflowstargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Google Cloud Workflows.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                credentialsJson:
                  description: GCP credentials used to programmatically interact with Google Cloud Storage. For additional information, refer to https://cloud.google.com/docs/authentication/production.
                  type: object
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                eventOptions:
                  type: object
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - credentialsJson
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: googlesheettargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "io.triggermesh.googlesheet.append",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.googlesheet.append.json"
        },
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.targets.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: GoogleSheetTarget
    plural: googlesheettargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for appending or updating a Googlesheet.
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                id:
                  type: string
                  description: Googlesheet ID associated with the document being targeted.
                  minLength: 1
                defaultPrefix:
                  type: string
                  description: A prefix to be used when creating a new sheet inside a document.
                  minLength: 1
                googleServiceAccount:
                  description: Google service account token used to authenticate access to the Googlesheet document.
                  type: object
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                          minLength: 1
                        name:
                          type: string
                          minLength: 1
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - id
                - googleServiceAccount
                - defaultPrefix
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: httptargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "io.triggermesh.http.request",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.http.request.json"
        },
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "*" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: HTTPTarget
    plural: httptargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for generic HTTP endpoints.
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                response:
                  description: HTTP target response event attributes.
                  type: object
                  properties:
                    eventType:
                      description: EventType is required to set the Type for the ingested event.
                      type: string
                      minLength: 1
                    eventSource:
                      description: EventSource is an optional but recommended field for identifying the instance producing the events.
                      type: string
                  required:
                    - eventType
                endpoint:
                  description: An HTTP based REST endpoint to stream events to.
                  type: string
                  format: url
                  pattern: ^https?:\/\/.+$
                method:
                  description: The HTTP method to use for the request.
                  type: string
                  enum: [GET, POST, PUT, PATCH, DELETE]
                skipVerify:
                  description: Skip validation and verification of the SSL/TLS certificate.
                  type: boolean
                  default: false
                caCertificate:
                  description: The CA certificate used to sign the certificated used by the target server.
                  type: string
                basicAuthUsername:
                  description: When using HTTP Basic authentication, the username to connect to the target service.
                  type: string
                basicAuthPassword:
                  description: When using HTTP Basic authentication, the password to connect to the target service.
                  type: object
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                oauthClientID:
                  description: When using OAuth, the client id used to authenticate against the target service.
                  type: string
                oauthClientSecret:
                  description: When using OAuth, the client secret used to authenticate against the target service
                  type: object
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                oauthTokenURL:
                  description: When using OAuth, the Token URL used to sign the request against.
                  type: string
                oauthScopes:
                  description: When using OAuth, the scopes required by the target to use the service.
                  type: array
                  items:
                    type: string
                headers:
                  description: Additional headers required to be set when communicating wiht the target service.
                  type: object
                  additionalProperties:
                    type: string
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - endpoint
                - method
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: ibmmqtargets.targets.triggermesh.io
  labels:
    duck.knative.dev/addressable: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "io.triggermesh.ibm.mq.put" },
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.ibm.mq.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: IBMMQTarget
    plural: ibmmqtargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for IBM MQ.
          properties:
            spec:
              description: Desired state of the event target.
              type: object
              properties:
                connectionName:
                  description: IBM MQ server URI, e.g. ibm-mq.default.svc.cluster.local(1414).
                  type: string
                channelName:
                  description: The name of IBM MQ Channel to listen to events on. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=types-channels.
                  type: string
                queueManager:
                  description: IBM MQ Queue Manager name. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=types-mq-queue-managers.
                  type: string
                queueName:
                  description: IBM MQ Queue name. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=types-queues.
                  type: string
                eventOptions:
                  type: object
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                discardCloudEventContext:
                  description: Produce a new CloudEvent based on the message received from the IBM MQ.
                  type: boolean
                replyTo:
                  description: IBM MQ's Reply-to message descriptor parameters. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.0?topic=messages-reply-queue-queue-manager.
                  type: object
                  properties:
                    queueManager:
                      description: Queue Manager where replies destination queue is located.
                      type: string
                    queueName:
                      description: The name of the queue to send the message replies.
                      type: string
                credentials:
                  description: IBM MQ server connection authentication parameters. For more information about authentication, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.0?topic=mechanisms-connection-authentication.
                  type: object
                  properties:
                    username:
                      description: IBM MQ user identifier for client application. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=application-user-ids.
                      type: object
                      properties:
                        value:
                          description: Plain text user ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the user ID.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                    password:
                      description: IBM MQ client application password. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=mq-mqcsp-password-protection.
                      type: object
                      properties:
                        value:
                          description: Plain text password.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the password.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    tls:
                      description: TLS configuration for IBM MQ client. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=mechanisms-tls-security-protocols-in-mq.
                      type: object
                      properties:
                        cipher:
                          description: Message encryption and authentication algorithm. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=tls-cipherspecs-ciphersuites.
                          type: string
                        clientAuthRequired:
                          description: Parameter to specify whether TLS client authentication is required. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=fields-sslclientauth-mqlong.
                          type: boolean
                        certLabel:
                          description: Unique identifier representing a digital certificate stored in a key repository. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=repository-digital-certificate-labels-understanding-requirements.
                          type: string
                        keyRepository:
                          description: Key repository for (m)TLS connection. For more information, please refer to the IBM MQ documentation at https://www.ibm.com/docs/en/ibm-mq/9.2?topic=mq-ssltls-key-repository.
                          type: object
                          properties:
                            keyDatabase:
                              type: object
                              properties:
                                valueFromSecret:
                                  description: A reference to a Kubernetes Secret object containing the key database.
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    key:
                                      type: string
                                  required:
                                    - name
                                    - key
                              required:
                                - valueFromSecret
                            passwordStash:
                              type: object
                              properties:
                                valueFromSecret:
                                  description: A reference to a Kubernetes Secret object containing the password stash.
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    key:
                                      type: string
                                  required:
                                    - name
                                    - key
                              required:
                                - valueFromSecret
                          required:
                            - keyDatabase
                            - passwordStash
                      required:
                        - cipher
                        - clientAuthRequired
                        - keyRepository
                  anyOf:
                    - required: [username, password]
                    - required: [tls]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - connectionName
                - channelName
                - queueManager
                - queueName
                - credentials
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  description: Array of CloudEvents this target will accept for processing.
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: jiratargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "io.triggermesh.jira.issue.create",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.jira.issue.create.json"
        },
        {
          "type": "io.triggermesh.jira.issue.get",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.jira.issue.get.json"
        },
        {
          "type": "io.triggermesh.jira.custom",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.jira.custom.json"
        }
      ]
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "io.triggermesh.jira.issue",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.jira.issue.json"
        },
        { "type": "io.triggermesh.jira.custom.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: JiraTarget
    plural: jiratargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Jira.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                auth:
                  type: object
                  description: Credentials to authenticate against the Jira instance.
                  properties:
                    user:
                      description: Jira username for the target to use.
                      type: string
                      minLength: 1
                    token:
                      description: Jira API token associated with the Jira user.
                      type: object
                      properties:
                        secretKeyRef:
                          type: object
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                  required:
                    - user
                    - token
                url:
                  description: Jira instance url.
                  type: string
                  format: url
                  pattern: ^https?:\/\/.+$
                eventOptions:
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  type: object
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - auth
                - url
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: kafkatargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: KafkaTarget
    plural: kafkatargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Kafka.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                topic:
                  description: Topic name to stream the target events to.
                  type: string
                  minLength: 1
                topicReplicationFactor:
                  description: The number of replicas required to stream to the topic.
                  type: integer
                  minimum: 1
                  maximum: 32767
                topicPartitions:
                  description: The number of partitions used by the topic to stream an event to.
                  type: integer
                  minimum: 1
                  maximum: 2147483647
                bootstrapServers:
                  description: Array of Kafka servers used to bootstrap the connection.
                  type: array
                  items:
                    type: string
                    minLength: 1
                auth:
                  description: Authentication method used to interact with Kafka.
                  type: object
                  properties:
                    saslEnable:
                      description: Boolean to indicate if SASL is enabled.
                      type: boolean
                    tlsEnable:
                      description: Boolean to indicate if TLS is enabled.
                      type: boolean
                    securityMechanism:
                      description: securityMechanism attribute indicate which mechanism to use.
                      type: string
                      enum: [GSSAPI, PLAIN, SCRAM-SHA-256, SCRAM-SHA-512]
                    username:
                      description: Kafka account username when using SASL.
                      type: string
                    password:
                      description: Kafka account password when using SASL.
                      type: object
                      properties:
                        value:
                          description: Plain text password.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the password.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    kerberos:
                      description: Kerberos Authentication method to interact with Kafka.
                      type: object
                      properties:
                        realm:
                          description: Name of the Kerberos Realm.
                          type: string
                        serviceName:
                          description: The primary name of the Kafka server configured.
                          type: string
                        username:
                          description: Kerberos username or Kerberos Principal Name. The Username or the Principal doesn't require the Realm in it.
                          type: string
                        password:
                          description: Kerberos Password.
                          type: object
                          properties:
                            value:
                              description: Plain text password.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the password.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          oneOf:
                            - required: [value]
                            - required: [valueFromSecret]
                        config:
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the kerberos configuration file (krb5.conf).
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        keytab:
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the kerberos keytab file contents.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                    tls:
                      description: TLS Authentication method to interact with Kafka.
                      type: object
                      properties:
                        ca:
                          description: The value to the configured CA.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the value.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        clientCert:
                          description: The value of the SSL Client Cert.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the Client Cert content.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        clientKey:
                          description: The value of the SSL Client Key.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the Client Key content.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        skipVerify:
                          description: SkipVerify controls whether a client verifies the server's certificate chain and host name. If skipVerify is true, crypto/tls accepts any certificate presented by the server and any host name in that certificate. In this mode, TLS is susceptible to machine-in-the-middle attacks unless custom verification is used. This should be used only for testing.
                          type: boolean
                  required:
                    - saslEnable
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in messages sent to Kafka. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - bootstrapServers
                - topic
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: logzmetricstargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type" : "io.triggermesh.opentelemetry.metrics.push" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: LogzMetricsTarget
    plural: logzmetricstargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: The OpenTelemetry metrics target pushes metrics to a range of backends.
          properties:
            spec:
              type: object
              description: The OpenTelemetry target exposes a common interface to a range of metrics backends.
              properties:
                connection:
                  type: object
                  description: Connection information for LogzMetrics.
                  properties:
                    listenerURL:
                      type: string
                      description: Listener URL for pushing metrics.
                    token:
                      type: object
                      description: Token for connecting to Logz metrics listener.
                      properties:
                        secretKeyRef:
                          type: object
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                instruments:
                  type: array
                  description: Instruments configured for pushing metrics. It is mandatory that all metrics pushed by using this target are pre-registered using this list.
                  items:
                    type: object
                    minLength: 1
                    properties:
                      name:
                        type: string
                        description: Name for the Instrument.
                      description:
                        type: string
                        description: Description for the Instrument.
                      instrument:
                        type: string
                        enum: [Histogram, Counter, UpDownCounter]
                        description: "Instrument Kind as defined by OpenTelemetry. Supported values are\n- Histogram, for absolute values that can be aggregated. - Counter, for delta values that increase monotonically. - UpDownCounter, for delta values that can increase and decrease."
                      number:
                        type: string
                        enum: [Int64, Float64]
                        description: "Number Kind as defined by OpenTelemetry. Defines the measure data type accepted by the Instrument. Supported values are\n- Int64 - Float64"
                    required:
                      - name
                      - instrument
                      - number
                eventOptions:
                  type: object
                  description: Event replies options.
                  properties:
                    payloadPolicy:
                      description: "Whether this target should generate response events. Possible values are\n- always, if a response is available it will be sent. - error, only responses categorized as errors will be sent. - never, no responses will be sent."
                      type: string
                      enum: [always, error, never]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - connection
                - instruments
            status:
              type: object
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: logztargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.logz.ship.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: LogzTarget
    plural: logztargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Logz.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                shippingToken:
                  description: API token used to authenticate the event being streamed.
                  type: object
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                eventOptions:
                  type: object
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                logsListenerURL:
                  type: string
                  description: Logz listener host to stream events to.
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - shippingToken
                - logsListenerURL
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mongodbtargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.knative.dev/eventTypes: |
      [
        {
          "type": "io.triggermesh.mongodb.query.response",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.mongodb.query.response.json",
          "description": "the gneric response to all requests"
        }
      ]
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "io.triggermesh.mongodb.insert",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.mongodb.insert.json"
        },
        {
          "type": "io.triggermesh.mongodb.query.kv",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.mongodb.query.kv.json"
        },
        {
          "type": "io.triggermesh.mongodb.update",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.mongodb.update.json"
        },
        { "type": "*" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: MongoDBTarget
    plural: mongodbtargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for MongoDB.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                database:
                  description: Define the default (over-writeable at runtime) database to write new events to.
                  type: string
                  minLength: 1
                collection:
                  description: Define the default (over-writeable at runtime) collection to write new events to.
                  type: string
                  minLength: 1
                connectionString:
                  description: The connection string containing the endpoint for the MongoDB Server and the Username + Password to connect with the instance. EX. mongodb+srv://<user>:<password>@<database_url>/?retryWrites=true&w=majority.
                  type: object
                  properties:
                    value:
                      description:
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing the connection string.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - connectionString
                - collection
                - database
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: oracletargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "functions.oracletargets.targets.triggermesh.io" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: OracleTarget
    plural: oracletargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Oracle Cloud (OCI).
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                oracleApiPrivateKey:
                  type: object
                  description: Oracle API Private Key to sign each request to the Oracle Cloud. For details on how to create a private keypair for Oracle Cloud, refer to https://docs.oracle.com/en-us/iaas/Content/API/Concepts/apisigningkey.htm.
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                oracleApiPrivateKeyPassphrase:
                  type: object
                  description: Passphrase to unlock the private key used to sign each request to the Oracle Cloud. For details on how to create a private keypair for Oracle Cloud, refer to https://docs.oracle.com/en-us/iaas/Content/API/Concepts/apisigningkey.htm.
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                oracleApiPrivateKeyFingerprint:
                  type: object
                  description: MD5 fingerprint to identify the keypair associated with the key used to sign each request to the Oracle Cloud. For details on how to create a private keypair for Oracle Cloud, refer to https://docs.oracle.com/en-us/iaas/Content/API/Concepts/apisigningkey.htm.
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                oracleTenancy:
                  description: The Oracle Cloud ID (OCID) of the tenant containing the service to be used on the Oracle Cloud.
                  type: string
                oracleUser:
                  description: The Oracle Cloud ID (OCID) of the user who owns the key used to interact with the Oracle Cloud.
                  type: string
                oracleRegion:
                  description: The Oracle Cloud region containing the service being executed. A full list of supported regions can be found at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm.
                  type: string
                function:
                  type: object
                  description: Invoke a serverless function on the Oracle Cloud.
                  properties:
                    function:
                      description: The Oracle Cloud ID (OCID) of the function being invoked.
                      type: string
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              oneOf:
                - required: [function]
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: salesforcetargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "io.triggermesh.salesforce.apicall",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.salesforce.apicall.json"
        }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.salesforce.apicall.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: SalesforceTarget
    plural: salesforcetargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Salesforce.
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                auth:
                  type: object
                  description: Attributes required to setup OAuth authentication with Salesforce. To create the credentials, refer to https://help.salesforce.com/articleView?id=sf.remoteaccess_oauth_jwt_flow.htm.
                  properties:
                    clientID:
                      description: OAuth Client ID used to identify the target.
                      type: string
                      minLength: 1
                    server:
                      description: The Salesforce authentication URL associated with the instance being used.
                      type: string
                      format: uri
                      pattern: ^https?:\/\/.+$
                    user:
                      description: Username associated with the Salesforce account.
                      type: string
                      minLength: 1
                    certKey:
                      type: object
                      description: Salesforce requires a certificate to facilitate the authentication flow.
                      properties:
                        secretKeyRef:
                          type: object
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                  required:
                    - clientID
                    - server
                    - user
                    - certKey
                apiVersion:
                  type: string
                  description: Salesforce API version to use for the target's integration with Salesforce.
                  pattern: v\d+\.\d+$
                eventOptions:
                  type: object
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - auth
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sendgridtargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "io.triggermesh.sendgrid.email.send",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.sendgrid.email.send.json"
        }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.sendgrid.email.send.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: SendGridTarget
    plural: sendgridtargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Sendgrid.
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                defaultFromName:
                  description: Default name to use for the from field when sending email via Sendgrid.
                  type: string
                defaultToName:
                  description: Default name to use for the to field when sending email via Sendgrid.
                  type: string
                defaultToEmail:
                  description: Default email address to send mail to via Sendgrid.
                  type: string
                defaultFromEmail:
                  description: Default sender email address for sending mail via Sendgrid.
                  type: string
                defaultSubject:
                  description: Default subject to use for email sent via this target
                  type: string
                defaultMessage:
                  description: Default message to use for all email sent via this target.
                  type: string
                apiKey:
                  description: The Sendgrid API key used to authenticate access.
                  type: object
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                eventOptions:
                  type: object
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - apiKey
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: slacktargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "com.slack.webapi.chat.postMessage",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.slack.webapi.chat.postMessage.json"
        },
        {
          "type": "com.slack.webapi.chat.scheduleMessage",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.slack.webapi.chat.scheduleMessage.json"
        },
        {
          "type": "com.slack.webapi.chat.update",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.slack.webapi.chat.update.json"
        }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.targets.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: SlackTarget
    plural: slacktargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Slack Web API.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                token:
                  type: object
                  description: Slack API token used to interface with Slack. Consult the Slack API documenation for details on how to setup an app for the target https://api.slack.com/web#authentication.
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - token
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: solacetargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: SolaceTarget
    plural: solacetargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Solace.
          properties:
            spec:
              description: Desired state of event target.
              type: object
              properties:
                url:
                  description: Solace server used to bootstrap the connection.
                  type: string
                  minLength: 1
                queueName:
                  description: Queue name to stream the target events to.
                  type: string
                auth:
                  description: Authentication method used to interact with Solace.
                  type: object
                  properties:
                    saslEnable:
                      description: Boolean to indicate if SASL is enabled.
                      type: boolean
                    tlsEnable:
                      description: Boolean to indicate if TLS is enabled.
                      type: boolean
                    username:
                      description: Solace account username.
                      type: string
                    password:
                      description: Solace account password.
                      type: object
                      properties:
                        value:
                          description: Plain text password.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing the password.
                          type: object
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                          required:
                            - name
                            - key
                      oneOf:
                        - required: [value]
                        - required: [valueFromSecret]
                    tls:
                      description: TLS Authentication method to interact with Solace.
                      type: object
                      properties:
                        ca:
                          description: The value to the configured CA.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the value.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        clientCert:
                          description: The value of the SSL Client Cert.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the Client Cert content.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        clientKey:
                          description: The value of the SSL Client Key.
                          type: object
                          properties:
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object containing the Client Key content.
                              type: object
                              properties:
                                name:
                                  type: string
                                key:
                                  type: string
                              required:
                                - name
                                - key
                          required:
                            - valueFromSecret
                        skipVerify:
                          description: SkipVerify controls whether a client verifies the server's certificate chain and host name. If skipVerify is true, crypto/tls accepts any certificate presented by the server and any host name in that certificate. In this mode, TLS is susceptible to machine-in-the-middle attacks unless custom verification is used. This should be used only for testing.
                          type: boolean
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in messages sent to Solace. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - url
                - queueName
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: splunktargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
spec:
  group: targets.triggermesh.io
  scope: Namespaced
  names:
    kind: SplunkTarget
    plural: splunktargets
    categories:
      - all
      - knative
      - eventing
      - targets
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Splunk.
          properties:
            spec:
              type: object
              properties:
                endpoint:
                  type: string
                  description: URL of the HTTP Event Collector (HEC). Only the scheme, hostname, and port (optionally) are evaluated. When the URL path is not present, the one documented at Splunk is automatically used. See https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector#Enable_HTTP_Event_Collector.
                  format: url
                  pattern: ^https?:\/\/.+$
                token:
                  type: object
                  description: Token for authenticating requests against the HEC. See https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector#About_Event_Collector_tokens.
                  properties:
                    value:
                      type: string
                      format: guid
                      pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                    valueFromSecret:
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                index:
                  type: string
                  description: Name of the index to send events to. When undefined, events are sent to the default index defined in the HEC token's configuration.
                  pattern: ^[\w-]+$
                skipTLSVerify:
                  description: Control whether the target should verify the SSL/TLS certificate used by the event collector.
                  type: boolean
                discardCloudEventContext:
                  description: Whether to omit CloudEvent context attributes in messages sent to Splunk. When this property is false (default), the entire CloudEvent payload is included. When this property is true, only the CloudEvent data is included.
                  type: boolean
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - endpoint
                - token
            status:
              type: object
              description: Reported status of the event target.
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: twiliotargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "io.triggermesh.twilio.sms.send",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/io.triggermesh.twilio.sms.send.json"
        }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.twilio.sms.send.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: TwilioTarget
    plural: twiliotargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Twilio.
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                defaultPhoneFrom:
                  description: Default phone number to send the message from.
                  type: string
                defaultPhoneTo:
                  description: Default phone number to send the message to.
                  type: string
                sid:
                  type: object
                  description: Twilio account service ID (SID)
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                token:
                  type: object
                  description: Twilio API Token.
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                eventOptions:
                  type: object
                  description: 'When should this target generate a response event for processing: always, on error, or never.'
                  properties:
                    payloadPolicy:
                      type: string
                      enum: [always, error, never]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - sid
                - token
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: zendesktargets.targets.triggermesh.io
  labels:
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        {
          "type": "com.zendesk.ticket.create",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.zendesk.ticket.create.json"
        },
        {
          "type": "com.zendesk.ticket.tag.add",
          "schema": "https://raw.githubusercontent.com/triggermesh/triggermesh/main/schemas/com.zendesk.ticket.tag.add.json"
        }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.targets.response" }
      ]
spec:
  group: targets.triggermesh.io
  names:
    kind: ZendeskTarget
    plural: zendesktargets
    categories:
      - all
      - knative
      - eventing
      - targets
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          description: TriggerMesh event target for Zendesk.
          properties:
            spec:
              type: object
              description: Desired state of event target.
              properties:
                subject:
                  description: Default subject line to use for tickets created using this target.
                  type: string
                subdomain:
                  description: User's subdomain on zendesk being targeted.
                  type: string
                email:
                  description: Default registered email address for interacting with Zendesk.
                  type: string
                token:
                  type: object
                  description: Zendesk API token for interacting with Zendesk.
                  properties:
                    secretKeyRef:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - subdomain
                - email
            status:
              type: object
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  type: array
                  items:
                    type: string
                ceAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                    required:
                      - type
                      - source
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: filters.routing.triggermesh.io
  labels:
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "*" }
      ]
spec:
  group: routing.triggermesh.io
  scope: Namespaced
  names:
    kind: Filter
    plural: filters
    singular: filter
    categories:
      - all
      - triggermesh
      - routing
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh content-based events filter.
          type: object
          properties:
            spec:
              description: Desired state of the filter.
              type: object
              required:
                - expression
                - sink
              properties:
                expression:
                  description: Google CEL-like expression string.
                  type: string
                sink:
                  description: Sink is a reference to an object that will resolve to a uri to use as the sink.
                  type: object
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
      additionalPrinterColumns:
        - name: Address
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: splitters.routing.triggermesh.io
  labels:
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "*" }
      ]
spec:
  group: routing.triggermesh.io
  scope: Namespaced
  names:
    kind: Splitter
    plural: splitters
    singular: splitter
    categories:
      - all
      - triggermesh
      - routing
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh content-based events splitter.
          type: object
          properties:
            spec:
              description: Desired state of the splitter.
              type: object
              required:
                - ceContext
                - sink
              properties:
                path:
                  type: string
                  description: JSONPath expression representing the key containing the data array to split. Defaults to the root.
                ceContext:
                  type: object
                  required:
                    - type
                    - source
                  description: Context attributes to set on produced CloudEvents.
                  properties:
                    type:
                      type: string
                      description: CloudEvent "type" context attribute.
                    source:
                      type: string
                      description: CloudEvent "source" context attribute. Accepts a JSONPath expressions in brackets (e.g. "user/{.name}").
                    extensions:
                      type: object
                      description: Additional context extensions to set on produced CloudEvents.
                      additionalProperties:
                        type: string
                sink:
                  description: Sink is a reference to an object that will resolve to a uri to use as the sink.
                  type: object
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              properties:
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
      additionalPrinterColumns:
        - name: Address
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: functions.extensions.triggermesh.io
  labels:
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "*" }
      ]
spec:
  group: extensions.triggermesh.io
  scope: Namespaced
  names:
    kind: Function
    plural: functions
    singular: function
    categories:
      - all
      - triggermesh
      - extensions
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh Function.
          type: object
          properties:
            spec:
              description: Desired state of the function.
              type: object
              required:
                - runtime
                - entrypoint
                - code
              properties:
                runtime:
                  description: Function runtime name. Python, Ruby or Node runtimes are currently supported.
                  type: string
                  enum: [python, ruby, node]
                code:
                  description: Function code.
                  type: string
                entrypoint:
                  description: Function name to use as an entrypoint.
                  type: string
                responseIsEvent:
                  description: Whether function responds with CE payload only or with full event.
                  type: boolean
                eventStore:
                  description: EventStore service connection string.
                  type: object
                  properties:
                    uri:
                      type: string
                  required:
                    - uri
                ceOverrides:
                  type: object
                  description: Defines overrides to control modifications of the event attributes.
                  properties:
                    extensions:
                      type: object
                      properties:
                        type:
                          type: string
                        source:
                          type: string
                        subject:
                          type: string
                  required:
                    - extensions
                sink:
                  description: The destination of events emitted by the component. If left empty, the events will be sent back to the sender.
                  type: object
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              properties:
                configMap:
                  description: Identity of the ConfigMap containing the code of the Function.
                  type: object
                  properties:
                    name:
                      description: Name of the ConfigMap.
                      type: string
                    resourceVersion:
                      description: Observed revision of the ConfigMap.
                      type: string
                  required:
                    - name
                    - resourceVersion
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Address
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: jqtransformations.flow.triggermesh.io
  labels:
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.jqtransformation.error" },
        { "type": "*" }
      ]
spec:
  group: flow.triggermesh.io
  scope: Namespaced
  names:
    kind: JQTransformation
    plural: jqtransformations
    categories:
      - all
      - knative
      - eventing
      - triggermesh
      - transformations
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh CloudEvents JSON Query Transformation engine.
          type: object
          properties:
            spec:
              description: Desired state of the transformer.
              type: object
              properties:
                query:
                  description: The JSON Query to perform on the incoming event
                  type: string
                sink:
                  description: The destination of events emitted by the component. If left empty, the events will be sent back to the sender.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
            status:
              description: Reported status of the transformer.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  description: CloudEvents context attributes overrides.
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Address of the HTTP/S endpoint where the transformer is serving incoming CloudEvents.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Address
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: synchronizers.flow.triggermesh.io
  labels:
    duck.knative.dev/addressable: 'true'
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
spec:
  group: flow.triggermesh.io
  names:
    kind: Synchronizer
    plural: synchronizers
    categories:
      - all
      - knative
      - eventing
      - flow
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              description: Desired state of the event synchronizer.
              type: object
              properties:
                correlationKey:
                  description: Events correlation parameters.
                  type: object
                  properties:
                    attribute:
                      description: The name of the correlation key that will be injected into the CloudEvents context. Events without this attribute are forwarded to the Sink as the client requests while client connections are held open. Events, which context already has the correlation key, are sent back to the open client connections.
                      type: string
                    length:
                      description: The length of the correlation key to generate. The default value is 24.
                      type: integer
                      minimum: 1
                      maximum: 64
                      default: 24
                  required:
                    - attribute
                response:
                  description: Responses handling configuration.
                  type: object
                  properties:
                    timeout:
                      description: The time during which the synchronizer will block the client and wait for the response. Expressed as a duration string, which format is documented at https://pkg.go.dev/time#ParseDuration.
                      type: string
                  required:
                    - timeout
                sink:
                  description: The destination where the synchronizer will forward incoming requests from the clients.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              required:
                - correlationKey
                - response
                - sink
            status:
              type: object
              description: Reported status of the event synchronizer.
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: transformations.flow.triggermesh.io
  labels:
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "*" }
      ]
spec:
  group: flow.triggermesh.io
  scope: Namespaced
  names:
    kind: Transformation
    plural: transformations
    categories:
      - all
      - knative
      - eventing
      - transformations
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh CloudEvents transformation engine. Allows to declaratively perform data transformations on CloudEvents.
          type: object
          properties:
            spec:
              description: Desired state of the transformation object.
              type: object
              properties:
                context:
                  description: CloudEvents Context attributes transformation spec.
                  type: array
                  items:
                    description: The list of transformation operations executed on the event context sequentially.
                    type: object
                    properties:
                      operation:
                        description: Name of the transformation operation.
                        type: string
                        enum: [add, delete, shift, store, parse]
                      paths:
                        description: Key-value event pairs to apply the transformations on.
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              description: JSON path or variable name. Depends on the operation type.
                              nullable: true
                              type: string
                            value:
                              description: JSON path or variable name. Depends on the operation type.
                              nullable: true
                              type: string
                            separator:
                              description: JSON path separator symbol. "." is used by default.
                              nullable: true
                              type: string
                    required:
                      - operation
                data:
                  description: CloudEvents Data transformation spec.
                  type: array
                  items:
                    description: The list of transformation operations executed on the event data sequentially.
                    type: object
                    properties:
                      operation:
                        description: Name of the transformation operation.
                        type: string
                        enum: [add, delete, shift, store, parse]
                      paths:
                        description: Key-value event pairs to apply the transformations on.
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              description: JSON path or variable name. Depends on the operation type.
                              nullable: true
                              type: string
                            value:
                              description: JSON path or variable name. Depends on the operation type.
                              nullable: true
                              type: string
                            separator:
                              description: JSON path separator symbol. "." is used by default.
                              nullable: true
                              type: string
                    required:
                      - operation
                sink:
                  description: The destination of events emitted by the component. If left empty, the events will be sent back to the sender.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
            status:
              description: Reported status of Transformation.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  description: CloudEvents context attributes overrides.
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Address of the HTTP/S endpoint where Transformation is serving incoming CloudEvents.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Address
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: xmltojsontransformations.flow.triggermesh.io
  labels:
    triggermesh.io/crd-install: 'true'
    duck.knative.dev/addressable: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.xmltojsontransformation.error" },
        { "type": "*" }
      ]
spec:
  group: flow.triggermesh.io
  scope: Namespaced
  names:
    kind: XMLToJSONTransformation
    plural: xmltojsontransformations
    categories:
      - all
      - knative
      - eventing
      - triggermesh
      - transformations
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh CloudEvents XML to JSON Transformation engine.
          type: object
          properties:
            spec:
              description: Desired state of the transformer.
              type: object
              properties:
                sink:
                  description: The destination of events emitted by the component. If left empty, the events will be sent back to the sender.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
            status:
              description: Reported status of the transformer.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                ceAttributes:
                  description: CloudEvents context attributes overrides.
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Address of the HTTP/S endpoint where the transformer is serving incoming CloudEvents.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Address
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: xslttransformations.flow.triggermesh.io
  labels:
    triggermesh.io/crd-install: 'true'
  annotations:
    registry.triggermesh.io/acceptedEventTypes: |
      [
        { "type": "*" }
      ]
    registry.knative.dev/eventTypes: |
      [
        { "type": "io.triggermesh.xslttransformation.error" },
        { "type": "*" }
      ]
spec:
  group: flow.triggermesh.io
  scope: Namespaced
  names:
    kind: XSLTTransformation
    plural: xslttransformations
    categories:
      - all
      - knative
      - eventing
      - triggermesh
      - transformations
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TriggerMesh CloudEvents XSLT transformation.
          type: object
          properties:
            spec:
              description: Desired state of the TriggerMesh component.
              type: object
              properties:
                xslt:
                  description: XSLT used to transform incoming CloudEvents.
                  type: object
                  properties:
                    value:
                      description: Literal inline value.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing the value.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                    valueFromConfigMap:
                      description: A reference to a Kubernetes ConfigMap object containing the value.
                      type: object
                      properties:
                        name:
                          type: string
                        key:
                          type: string
                      required:
                        - name
                        - key
                  oneOf:
                    - required: [value]
                    - required: [valueFromSecret]
                    - required: [valueFromConfigMap]
                allowPerEventXSLT:
                  description: Whether the XSLT informed at the spec can be overriden at each CloudEvent.
                  type: boolean
                sink:
                  description: The destination of events emitted by the component. If left empty, the events will be sent back to the sender.
                  type: object
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to be used as the destination of events.
                      type: object
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        namespace:
                          type: string
                        name:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                    uri:
                      description: URI to use as the destination of events.
                      type: string
                      format: uri
                  anyOf:
                    - required: [ref]
                    - required: [uri]
                adapterOverrides:
                  description: Kubernetes object parameters to apply on top of default adapter values.
                  type: object
                  properties:
                    annotations:
                      description: Adapter annotations.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Adapter labels.
                      type: object
                      additionalProperties:
                        type: string
                    env:
                      description: Adapter environment variables.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    public:
                      description: Adapter visibility scope.
                      type: boolean
                    resources:
                      description: Compute Resources required by the adapter. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Limits describes the maximum amount of compute resources allowed. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info at https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                    tolerations:
                      description: Pod tolerations, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ Tolerations require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            description: Taint key that the toleration applies to.
                            type: string
                          operator:
                            description: Key's relationship to the value.
                            type: string
                            enum: [Exists, Equal]
                          value:
                            description: Taint value the toleration matches to.
                            type: string
                          effect:
                            description: Taint effect to match.
                            type: string
                            enum: [NoSchedule, PreferNoSchedule, NoExecute]
                          tolerationSeconds:
                            description: Period of time a toleration of effect NoExecute tolerates the taint.
                            type: integer
                            format: int64
                    nodeSelector:
                      description: NodeSelector only allow the object pods to be created at nodes where all selector labels are present, as documented at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector. NodeSelector require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      additionalProperties:
                        type: string
                    affinity:
                      description: Scheduling constraints of the pod. More info at https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity. Affinity require additional configuration for Knative-based deployments - https://knative.dev/docs/serving/configuration/feature-flags/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
              anyOf:
                - required: [xslt]
                - required: [allowPerEventXSLT]
            status:
              description: Reported status.
              type: object
              properties:
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  type: string
                  format: uri
                observedGeneration:
                  type: integer
                  format: int64
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum: ['True', 'False', Unknown]
                      severity:
                        type: string
                        enum: [Error, Warning, Info]
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time
                    required:
                      - type
                      - status
                address:
                  description: Address of the HTTP/S endpoint where component is listening for incoming CloudEvents.
                  type: object
                  properties:
                    url:
                      type: string
      additionalPrinterColumns:
        - name: Address
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].status
        - name: Reason
          type: string
          jsonPath: .status.conditions[?(@.type=='Ready')].reason
