apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: trafficreplays.speedscale.com
spec:
  group: speedscale.com
  names:
    kind: TrafficReplay
    listKind: TrafficReplayList
    plural: trafficreplays
    shortNames:
    - replay
    singular: trafficreplay
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.active
      name: Active
      type: boolean
    - jsonPath: .spec.mode
      name: Mode
      type: string
    - jsonPath: .status.conditions[-1:].message
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: TrafficReplay is the Schema for the trafficreplays API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TrafficReplaySpec defines the desired state of TrafficReplay
            properties:
              buildTag:
                description: |-
                  BuildTag links a unique tag, build hash, etc. to the generated
                  traffic replay report. That way you can connect the report results to the
                  version of the code that was tested.
                type: string
              cleanup:
                description: |-
                  Cleanup is the name of cleanup mode used for this
                  TrafficReplay.
                enum:
                - inventory
                - all
                - none
                type: string
              collectLogs:
                description: |-
                  CollectLogs enables or disables log collection from target
                  workload. Defaults to true.
                  DEPRECATED: use TestReport.ActualConfig.Cluster.CollectLogs
                type: boolean
              configChecksum:
                description: |-
                  ConfigChecksum, managed my the operator, is the SHA1 checksum of the
                  configuration.
                type: string
              customURL:
                description: CustomURL allows to specify custom URL to the SUT.
                type: string
              generatorLowData:
                description: |-
                  GeneratorLowData forces the generator into a high
                  efficiency/low data output mode. This is ideal for high volume
                  performance tests. Defaults to false.
                  DEPRECATED
                type: boolean
              mode:
                description: Mode is the name of replay mode used for this TrafficReplay.
                enum:
                - full-replay
                - responder-only
                - generator-only
                type: string
              needsReport:
                description: Indicates whether a responder-only replay needs a report.
                type: boolean
              proxyMode:
                description: |-
                  ProxyMode defines proxy operational mode used with injected sidecar.
                  DEPRECATED
                type: string
              responderLowData:
                description: |-
                  ResponderLowData forces the responder into a high
                  efficiency/low data output mode. This is ideal for high volume
                  performance tests. Defaults to false.
                  DEPRECATED
                type: boolean
              secretRefs:
                description: |-
                  SecretRefs hold the references to the secrets which contain
                  various secrets like (e.g. short-lived JWTs to be used by the generator
                  for authorization with HTTP calls).
                items:
                  description: |-
                    LocalObjectReference contains enough information to locate the referenced
                    Kubernetes resource object.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              sidecar:
                description: |-
                  Sidecar defines sidecar specific configuration.
                  DEPRECATED: use Workloads
                properties:
                  inject:
                    description: 'DEPRECATED: do not use'
                    type: boolean
                  patch:
                    description: Patch is .yaml file patch for the Workload
                    format: byte
                    type: string
                  tls:
                    properties:
                      in:
                        description: In provides configuration for sidecar inbound
                          TLS.
                        properties:
                          private:
                            description: Private is the filename of the TLS inbound
                              private key.
                            type: string
                          public:
                            description: Public is the filename of the TLS inbound
                              public key.
                            type: string
                          secret:
                            description: Secret is a secret with the TLS keys to use
                              for inbound traffic.
                            type: string
                        type: object
                      mutual:
                        description: Mutual provides configuration for sidecar mutual
                          TLS.
                        properties:
                          private:
                            description: Private is the filename of the mutual TLS
                              private key.
                            type: string
                          public:
                            description: Public is the filename of the mutual TLS
                              public key.
                            type: string
                          secret:
                            description: Secret is a secret with the mutual TLS keys.
                            type: string
                        type: object
                      out:
                        description: |-
                          Out enables or disables TLS out on the
                          sidecar during replay.
                        type: boolean
                    type: object
                type: object
              snapshotID:
                description: |-
                  SnapshotID is the id of the traffic snapshot for this
                  TrafficReplay.
                type: string
              testConfigID:
                description: |-
                  TestConfigID is the id of the replay configuration to be used
                  by the generator and responder for the TrafficReplay.
                type: string
              timeout:
                description: |-
                  Timeout is the time to wait for replay test to finish. Defaults
                  to value of the `TIMEOUT` setting of the operator.
                type: string
              ttlAfterReady:
                description: |-
                  TTLAfterReady provides a TTL (time to live) mechanism to limit
                  the lifetime of TrafficReplay object that have finished the execution and
                  reached its final state (either complete or failed).
                type: string
              workloadRef:
                description: |-
                  WorkloadRef is the reference to the target workload (SUT) for
                  TrafficReplay. The operations will be performed in the namespace of the
                  target object.
                  DEPRECATED: use Workloads
                properties:
                  apiVersion:
                    description: API version of the referenced object.
                    type: string
                  kind:
                    description: Kind of the referenced object.  Defaults to "Deployment".
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                  namespace:
                    description: Namespace of the referenced object. Defaults to the
                      TrafficReplay namespace.
                    type: string
                required:
                - name
                type: object
              workloads:
                description: |-
                  Workloads define target workloads (SUT) for a TrafficReplay. Many
                  workloads may be provided, or none.  Workloads may be modified and
                  restarted during replay to configure communication with a responder.
                items:
                  description: |-
                    Workload represents a Kubernetes workload to be targeted during replay and
                    associated settings.
                  properties:
                    customURI:
                      description: CustomURI will be target of the traffic instead
                        of directly targeting workload
                      type: string
                    inTrafficKey:
                      description: 'DEPRECATED: use InTrafficKeys'
                      type: string
                    inTrafficKeys:
                      description: 'DEPRECATED: use Tests'
                      items:
                        type: string
                      type: array
                    mocks:
                      description: |-
                        Mocks are strings used to identify slices of outbound snapshot traffic to
                        mock for this workload and maps directly to a snapshot's `OutTraffic`
                        field.  Snapshot egress traffic can be split across multiple slices where
                        each slice contains part of the traffic.  A workload may specify multiple
                        keys and multiple workloads may specify the same key.


                        Only the traffic slices defined here will be mocked.  A workload with no
                        keys defined will not mock any traffic.  Pass '*' to mock all traffic.


                        Mock strings may only match part of the snapshot's `OutTraffic` key if the
                        string matches exactly one key. For example, the test string
                        `foo.example.com` would match the `OutTraffic` key of
                        my-service:foo.example.com:8080, as long as no other keys would match
                        `foo.example.com`.  Multiple mocks must be specified for multiple keys
                        unless using '*'.
                      items:
                        type: string
                      type: array
                    outTrafficKeys:
                      description: 'DEPRECATED: use Mocks'
                      items:
                        type: string
                      type: array
                    ref:
                      description: |-
                        Ref is a reference to a cluster workload, like a deployment or a
                        statefulset.
                      properties:
                        apiVersion:
                          description: API version of the referenced object.
                          type: string
                        kind:
                          description: Kind of the referenced object.  Defaults to
                            "Deployment".
                          type: string
                        name:
                          description: Name of the referenced object.
                          type: string
                        namespace:
                          description: Namespace of the referenced object. Defaults
                            to the TrafficReplay namespace.
                          type: string
                      required:
                      - name
                      type: object
                    routing:
                      description: Routing configures how workloads route egress traffic
                        to responders
                      enum:
                      - hostalias
                      - nat
                      type: string
                    sidecar:
                      description: |-
                        TODO: this is not implemented, come back and replace deprecated Sidecar with workload specific settings
                        Sidecar defines sidecar specific configuration.
                      properties:
                        inject:
                          description: 'DEPRECATED: do not use'
                          type: boolean
                        patch:
                          description: Patch is .yaml file patch for the Workload
                          format: byte
                          type: string
                        tls:
                          properties:
                            in:
                              description: In provides configuration for sidecar inbound
                                TLS.
                              properties:
                                private:
                                  description: Private is the filename of the TLS
                                    inbound private key.
                                  type: string
                                public:
                                  description: Public is the filename of the TLS inbound
                                    public key.
                                  type: string
                                secret:
                                  description: Secret is a secret with the TLS keys
                                    to use for inbound traffic.
                                  type: string
                              type: object
                            mutual:
                              description: Mutual provides configuration for sidecar
                                mutual TLS.
                              properties:
                                private:
                                  description: Private is the filename of the mutual
                                    TLS private key.
                                  type: string
                                public:
                                  description: Public is the filename of the mutual
                                    TLS public key.
                                  type: string
                                secret:
                                  description: Secret is a secret with the mutual
                                    TLS keys.
                                  type: string
                              type: object
                            out:
                              description: |-
                                Out enables or disables TLS out on the
                                sidecar during replay.
                              type: boolean
                          type: object
                      type: object
                    tests:
                      description: |-
                        Tests are strings used to identify slices of inbound snapshot traffic this
                        workload is targeting and maps directly to a snapshot's `InTraffic` field.
                        Snapshot ingress traffic can be split across multiple slices where each
                        slice contains part of the traffic.  A key must only be specified once
                        across all workloads, but a workload may specify multiple keys.


                        Test strings may only match part of the snapshot's `InTraffic` key if the
                        string matches exactly one key. For example, the test string
                        `foo.example.com` would match the `InTraffic` key of
                        my-service:foo.example.com:8080, as long as no other keys would match
                        `foo.example.com`


                        This field is optional in the spec to provide support for single-workload
                        and legacy replays, but must be specified for multi-workload replays in
                        order to provide deterministic replay configuration.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
            required:
            - snapshotID
            - testConfigID
            type: object
          status:
            default:
              observedGeneration: -1
            description: TrafficReplayStatus defines the observed state of TrafficReplay
            properties:
              active:
                description: Active indicates whether this traffic replay is currently
                  underway or not.
                type: boolean
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              finishedTime:
                description: Information when the traffic replay has finished.
                format: date-time
                type: string
              initializedTime:
                description: Information when the test environment was successfully
                  prepared.
                format: date-time
                type: string
              lastHeartbeatTime:
                description: 'DEPRECATED: will not be set'
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the last observed generation.
                format: int64
                type: integer
              reconcileFailures:
                description: |-
                  ReconcileFailures is the number of times the traffic replay controller
                  experienced an error during the reconciliation process.  The traffic
                  replay will be deleted if too many errors occur.
                format: int64
                type: integer
              reportID:
                description: The id of the traffic replay report created.
                type: string
              reportURL:
                description: The url to the traffic replay report.
                type: string
              startedTime:
                description: Information when the traffic replay has started.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
