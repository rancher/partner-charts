---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: storageclusters.core.libopenstorage.org
spec:
  group: core.libopenstorage.org
  names:
    kind: StorageCluster
    listKind: StorageClusterList
    plural: storageclusters
    shortNames:
      - stc
    singular: storagecluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The unique ID of the storage cluster
          jsonPath: .status.clusterUid
          name: Cluster UUID
          type: string
        - description: The status of the storage cluster
          jsonPath: .status.phase
          name: Status
          type: string
        - description: The version of the storage cluster
          jsonPath: .spec.version
          name: Version
          type: string
        - description: The age of the storage cluster
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: StorageCluster is the Schema for the storageclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: StorageClusterSpec defines the desired behavior of the storage
                cluster.
              properties:
                autoUpdateComponents:
                  description: AutoUpdateComponents indicates the update strategy for
                    the component images (such as Stork, Autopilot, Prometheus, and
                    so on). Portworx supports the following auto update strategies for
                    the component images:<br/> <ul><li>`None`- Updates the component
                    images only when the Portworx image changes in `StorageCluster.spec.image`.</li><li>`Once`-
                    Updates the component images once even if the Portworx image does
                    not change. This is useful when the component images on the manifest
                    server change due to bug fixes.</li><li>`Always`- Regularly checks
                    for the updates on the manifest server, and updates the component
                    images if required.</li> </ul>
                  type: string
                autopilot:
                  description: Autopilot contains details for the autopilot component
                    if running external to the storage driver. The autopilot component
                    could augment the storage driver to take intelligent actions based
                    on the current state of the cluster.
                  properties:
                    args:
                      additionalProperties:
                        type: string
                      description: Args is a map of key-value pairs that overrides the
                        default Autopilot arguments or adds new arguments.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    enabled:
                      description: Enabled decides whether autopilot needs to be enabled
                      type: boolean
                    env:
                      description: Env is a list of [Kubernetes like environment variables](https://github.com/kubernetes/api/blob/master/core/v1/types.go#L1826)
                        passed to Autopilot.
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its
                                      key must be defined
                                    type: boolean
                                required:
                                  - key
                                type: object
                                x-kubernetes-map-type: atomic
                              fieldRef:
                                description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                  - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              resourceFieldRef:
                                description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                    optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                  - resource
                                type: object
                                x-kubernetes-map-type: atomic
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key
                                      must be defined
                                    type: boolean
                                required:
                                  - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                        required:
                          - name
                        type: object
                      type: array
                    image:
                      description: Image is docker image of the autopilot container
                      type: string
                    lockImage:
                      description: 'LockImage is a boolean indicating if the autopilot
                      image needs to be locked to the given image. If the image is
                      not locked, it can be updated by the driver during upgrades.
                      DEPRECATED: This is no longer needed to lock an image. The new
                      behavior is to use the image as it is, if present, else use
                      a default image.'
                      type: boolean
                    providers:
                      description: Providers is a list of input data providers for autopilot
                        if it needs any
                      items:
                        description: DataProviderSpec contains the details for data
                          providers for components like autopilot
                        properties:
                          name:
                            description: Name is the unique name for the provider
                            type: string
                          params:
                            additionalProperties:
                              type: string
                            description: Params is a list of key-value params for the
                              provider
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type:
                            description: Type is the type of data provider. For instance,
                              prometheus
                            type: string
                        type: object
                      type: array
                    resources:
                      description: Resources for autopilot pods, e.g. CPU and memory
                        requests or limits
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this field
                                  is used. It makes that resource available inside a
                                  container.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                    volumes:
                      description: Volumes is a list of extra volumes to used by autopilot.
                        The schema is similar to the [top-level volumes](#volume-configuration).
                      items:
                        description: VolumeSpec describes a volume that needs to be
                          mounted inside a container
                        properties:
                          awsElasticBlockStore:
                            description: 'awsElasticBlockStore represents an AWS Disk
                            resource that is attached to a kubelet''s host machine
                            and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              partition:
                                description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty).'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'readOnly value true will force the readOnly
                                setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: boolean
                              volumeID:
                                description: 'volumeID is unique ID of the persistent
                                disk resource in AWS (Amazon EBS volume). More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: string
                            required:
                              - volumeID
                            type: object
                          azureDisk:
                            description: azureDisk represents an Azure Data Disk mount
                              on the host and bind mount to the pod.
                            properties:
                              cachingMode:
                                description: 'cachingMode is the Host Caching mode:
                                None, Read Only, Read Write.'
                                type: string
                              diskName:
                                description: diskName is the Name of the data disk in
                                  the blob storage
                                type: string
                              diskURI:
                                description: diskURI is the URI of data disk in the
                                  blob storage
                                type: string
                              fsType:
                                description: fsType is Filesystem type to mount. Must
                                  be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              kind:
                                description: 'kind expected values are Shared: multiple
                                blob disks per storage account  Dedicated: single
                                blob disk per storage account  Managed: azure managed
                                data disk (only in managed availability set). defaults
                                to shared'
                                type: string
                              readOnly:
                                description: readOnly Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                            required:
                              - diskName
                              - diskURI
                            type: object
                          azureFile:
                            description: azureFile represents an Azure File Service
                              mount on the host and bind mount to the pod.
                            properties:
                              readOnly:
                                description: readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretName:
                                description: secretName is the  name of secret that
                                  contains Azure Storage Account Name and Key
                                type: string
                              shareName:
                                description: shareName is the azure share Name
                                type: string
                            required:
                              - secretName
                              - shareName
                            type: object
                          cephfs:
                            description: cephFS represents a Ceph FS mount on the host
                              that shares a pod's lifetime
                            properties:
                              monitors:
                                description: 'monitors is Required: Monitors is a collection
                                of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              path:
                                description: 'path is Optional: Used as the mounted
                                root, rather than the full Ceph tree, default is /'
                                type: string
                              readOnly:
                                description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: boolean
                              secretFile:
                                description: 'secretFile is Optional: SecretFile is
                                the path to key ring for User, default is /etc/ceph/user.secret
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                              secretRef:
                                description: 'secretRef is Optional: SecretRef is reference
                                to the authentication secret for User, default is
                                empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              user:
                                description: 'user is optional: User is the rados user
                                name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                            required:
                              - monitors
                            type: object
                          cinder:
                            description: 'cinder represents a cinder volume attached
                            and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                              readOnly:
                                description: 'readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: boolean
                              secretRef:
                                description: 'secretRef is optional: points to a secret
                                object containing parameters used to connect to OpenStack.'
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              volumeID:
                                description: 'volumeID used to identify the volume in
                                cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                            required:
                              - volumeID
                            type: object
                          configMap:
                            description: configMap represents a configMap that should
                              populate this volume
                            properties:
                              defaultMode:
                                description: 'defaultMode is optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                                format: int32
                                type: integer
                              items:
                                description: items if unspecified, each key-value pair
                                  in the Data field of the referenced ConfigMap will
                                  be projected into the volume as a file whose name
                                  is the key and content is the value. If specified,
                                  the listed keys will be projected into the specified
                                  paths, and unlisted keys will not be present. If a
                                  key is specified which is not present in the ConfigMap,
                                  the volume setup will error unless it is marked optional.
                                  Paths must be relative and may not contain the '..'
                                  path or start with '..'.
                                items:
                                  description: Maps a string key to a path within a
                                    volume.
                                  properties:
                                    key:
                                      description: key is the key to project.
                                      type: string
                                    mode:
                                      description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: path is the relative path of the
                                        file to map the key to. May not be an absolute
                                        path. May not contain the path element '..'.
                                        May not start with the string '..'.
                                      type: string
                                  required:
                                    - key
                                    - path
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                              optional:
                                description: optional specify whether the ConfigMap
                                  or its keys must be defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                          csi:
                            description: csi (Container Storage Interface) represents
                              ephemeral storage that is handled by certain external
                              CSI drivers (Beta feature).
                            properties:
                              driver:
                                description: driver is the name of the CSI driver that
                                  handles this volume. Consult with your admin for the
                                  correct name as registered in the cluster.
                                type: string
                              fsType:
                                description: fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                  If not provided, the empty value is passed to the
                                  associated CSI driver which will determine the default
                                  filesystem to apply.
                                type: string
                              nodePublishSecretRef:
                                description: nodePublishSecretRef is a reference to
                                  the secret object containing sensitive information
                                  to pass to the CSI driver to complete the CSI NodePublishVolume
                                  and NodeUnpublishVolume calls. This field is optional,
                                  and  may be empty if no secret is required. If the
                                  secret object contains more than one secret, all secret
                                  references are passed.
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              readOnly:
                                description: readOnly specifies a read-only configuration
                                  for the volume. Defaults to false (read/write).
                                type: boolean
                              volumeAttributes:
                                additionalProperties:
                                  type: string
                                description: volumeAttributes stores driver-specific
                                  properties that are passed to the CSI driver. Consult
                                  your driver's documentation for supported values.
                                type: object
                            required:
                              - driver
                            type: object
                          downwardAPI:
                            description: downwardAPI represents downward API about the
                              pod that should populate this volume
                            properties:
                              defaultMode:
                                description: 'Optional: mode bits to use on created
                                files by default. Must be a Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                                format: int32
                                type: integer
                              items:
                                description: Items is a list of downward API volume
                                  file
                                items:
                                  description: DownwardAPIVolumeFile represents information
                                    to create the file containing the pod field
                                  properties:
                                    fieldRef:
                                      description: 'Required: Selects a field of the
                                      pod: only annotations, labels, name, namespace
                                      and uid are supported.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in
                                            the specified API version.
                                          type: string
                                      required:
                                        - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    mode:
                                      description: 'Optional: mode bits used to set
                                      permissions on this file, must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. If not specified, the volume defaultMode
                                      will be used. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: 'Required: Path is  the relative
                                      path name of the file to be created. Must not
                                      be absolute or contain the ''..'' path. Must
                                      be utf-8 encoded. The first item of the relative
                                      path must not start with ''..'''
                                      type: string
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, requests.cpu and requests.memory)
                                      are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                          volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Specifies the output format of
                                            the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                        - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                    - path
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          emptyDir:
                            description: 'emptyDir represents a temporary directory
                            that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            properties:
                              medium:
                                description: 'medium represents what type of storage
                                medium should back this directory. The default is
                                "" which means to use the node''s default medium.
                                Must be an empty string (default) or Memory. More
                                info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                type: string
                              sizeLimit:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: 'sizeLimit is the total amount of local
                                storage required for this EmptyDir volume. The size
                                limit is also applicable for memory medium. The maximum
                                usage on memory medium EmptyDir would be the minimum
                                value between the SizeLimit specified here and the
                                sum of memory limits of all containers in a pod. The
                                default is nil which means that the limit is undefined.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                          ephemeral:
                            description: "ephemeral represents a volume that is handled
                            by a cluster storage driver. The volume's lifecycle is
                            tied to the pod that defines it - it will be created before
                            the pod starts, and deleted when the pod is removed. \n
                            Use this if: a) the volume is only needed while the pod
                            runs, b) features of normal volumes like restoring from
                            snapshot or capacity tracking are needed, c) the storage
                            driver is specified through a storage class, and d) the
                            storage driver supports dynamic volume provisioning through
                            a PersistentVolumeClaim (see EphemeralVolumeSource for
                            more information on the connection between this volume
                            type and PersistentVolumeClaim). \n Use PersistentVolumeClaim
                            or one of the vendor-specific APIs for volumes that persist
                            for longer than the lifecycle of an individual pod. \n
                            Use CSI for light-weight local ephemeral volumes if the
                            CSI driver is meant to be used that way - see the documentation
                            of the driver for more information. \n A pod can use both
                            types of ephemeral volumes and persistent volumes at the
                            same time."
                            properties:
                              volumeClaimTemplate:
                                description: "Will be used to create a stand-alone PVC
                                to provision the volume. The pod in which this EphemeralVolumeSource
                                is embedded will be the owner of the PVC, i.e. the
                                PVC will be deleted together with the pod.  The name
                                of the PVC will be `<pod name>-<volume name>` where
                                `<volume name>` is the name from the `PodSpec.Volumes`
                                array entry. Pod validation will reject the pod if
                                the concatenated name is not valid for a PVC (for
                                example, too long). \n An existing PVC with that name
                                that is not owned by the pod will *not* be used for
                                the pod to avoid using an unrelated volume by mistake.
                                Starting the pod is then blocked until the unrelated
                                PVC is removed. If such a pre-created PVC is meant
                                to be used by the pod, the PVC has to updated with
                                an owner reference to the pod once the pod exists.
                                Normally this should not be necessary, but it may
                                be useful when manually reconstructing a broken cluster.
                                \n This field is read-only and no changes will be
                                made by Kubernetes to the PVC after it has been created.
                                \n Required, must not be nil."
                                properties:
                                  metadata:
                                    description: May contain labels and annotations
                                      that will be copied into the PVC when creating
                                      it. No other fields are allowed and will be rejected
                                      during validation.
                                    type: object
                                  spec:
                                    description: The specification for the PersistentVolumeClaim.
                                      The entire content is copied unchanged into the
                                      PVC that gets created from this template. The
                                      same fields as in a PersistentVolumeClaim are
                                      also valid here.
                                    properties:
                                      accessModes:
                                        description: 'accessModes contains the desired
                                        access modes the volume should have. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      dataSource:
                                        description: 'dataSource field can be used to
                                        specify either: * An existing VolumeSnapshot
                                        object (snapshot.storage.k8s.io/VolumeSnapshot)
                                        * An existing PVC (PersistentVolumeClaim)
                                        If the provisioner or an external controller
                                        can support the specified data source, it
                                        will create a new volume based on the contents
                                        of the specified data source. When the AnyVolumeDataSource
                                        feature gate is enabled, dataSource contents
                                        will be copied to dataSourceRef, and dataSourceRef
                                        contents will be copied to dataSource when
                                        dataSourceRef.namespace is not specified.
                                        If the namespace is specified, then dataSourceRef
                                        will not be copied to dataSource.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for the
                                              resource being referenced. If APIGroup
                                              is not specified, the specified Kind must
                                              be in the core API group. For any other
                                              third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      dataSourceRef:
                                        description: 'dataSourceRef specifies the object
                                        from which to populate the volume with data,
                                        if a non-empty volume is desired. This may
                                        be any object from a non-empty API group (non
                                        core object) or a PersistentVolumeClaim object.
                                        When this field is specified, volume binding
                                        will only succeed if the type of the specified
                                        object matches some installed volume populator
                                        or dynamic provisioner. This field will replace
                                        the functionality of the dataSource field
                                        and as such if both fields are non-empty,
                                        they must have the same value. For backwards
                                        compatibility, when namespace isn''t specified
                                        in dataSourceRef, both fields (dataSource
                                        and dataSourceRef) will be set to the same
                                        value automatically if one of them is empty
                                        and the other is non-empty. When namespace
                                        is specified in dataSourceRef, dataSource
                                        isn''t set to the same value and must be empty.
                                        There are three important differences between
                                        dataSource and dataSourceRef: * While dataSource
                                        only allows two specific types of objects,
                                        dataSourceRef allows any non-core object,
                                        as well as PersistentVolumeClaim objects.
                                        * While dataSource ignores disallowed values
                                        (dropping them), dataSourceRef preserves all
                                        values, and generates an error if a disallowed
                                        value is specified. * While dataSource only
                                        allows local objects, dataSourceRef allows
                                        objects in any namespaces. (Beta) Using this
                                        field requires the AnyVolumeDataSource feature
                                        gate to be enabled. (Alpha) Using the namespace
                                        field of dataSourceRef requires the CrossNamespaceVolumeDataSource
                                        feature gate to be enabled.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for the
                                              resource being referenced. If APIGroup
                                              is not specified, the specified Kind must
                                              be in the core API group. For any other
                                              third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                          namespace:
                                            description: Namespace is the namespace
                                              of resource being referenced Note that
                                              when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                              object is required in the referent namespace
                                              to allow that namespace's owner to accept
                                              the reference. See the ReferenceGrant
                                              documentation for details. (Alpha) This
                                              field requires the CrossNamespaceVolumeDataSource
                                              feature gate to be enabled.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                      resources:
                                        description: 'resources represents the minimum
                                        resources the volume should have. If RecoverVolumeExpansionFailure
                                        feature is enabled users are allowed to specify
                                        resource requirements that are lower than
                                        previous value but must still be higher than
                                        capacity recorded in the status field of the
                                        claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: selector is a label query over
                                          volumes to consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      storageClassName:
                                        description: 'storageClassName is the name of
                                        the StorageClass required by the claim. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeAttributesClassName:
                                        description: 'volumeAttributesClassName may
                                        be used to set the VolumeAttributesClass used
                                        by this claim. If specified, the CSI driver
                                        will create or update the volume with the
                                        attributes defined in the corresponding VolumeAttributesClass.
                                        This has a different purpose than storageClassName,
                                        it can be changed after the claim is created.
                                        An empty string value means that no VolumeAttributesClass
                                        will be applied to the claim but it''s not
                                        allowed to reset this field to empty string
                                        once it is set. If unspecified and the PersistentVolumeClaim
                                        is unbound, the default VolumeAttributesClass
                                        will be set by the persistentvolume controller
                                        if it exists. If the resource referred to
                                        by volumeAttributesClass does not exist, this
                                        PersistentVolumeClaim will be set to a Pending
                                        state, as reflected by the modifyVolumeStatus
                                        field, until such as a resource exists. More
                                        info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                        (Alpha) Using this field requires the VolumeAttributesClass
                                        feature gate to be enabled.'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type of
                                          volume is required by the claim. Value of
                                          Filesystem is implied when not included in
                                          claim spec.
                                        type: string
                                      volumeName:
                                        description: volumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                required:
                                  - spec
                                type: object
                            type: object
                          fc:
                            description: fc represents a Fibre Channel resource that
                              is attached to a kubelet's host machine and then exposed
                              to the pod.
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified. TODO: how do we prevent
                                errors in the filesystem from compromising the machine'
                                type: string
                              lun:
                                description: 'lun is Optional: FC target lun number'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                                type: boolean
                              targetWWNs:
                                description: 'targetWWNs is Optional: FC target worldwide
                                names (WWNs)'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              wwids:
                                description: 'wwids Optional: FC volume world wide identifiers
                                (wwids) Either wwids or combination of targetWWNs
                                and lun must be set, but not both simultaneously.'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          flexVolume:
                            description: flexVolume represents a generic volume resource
                              that is provisioned/attached using an exec based plugin.
                            properties:
                              driver:
                                description: driver is the name of the driver to use
                                  for this volume.
                                type: string
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". The default filesystem
                                  depends on FlexVolume script.
                                type: string
                              options:
                                additionalProperties:
                                  type: string
                                description: 'options is Optional: this field holds
                                extra command options if any.'
                                type: object
                              readOnly:
                                description: 'readOnly is Optional: defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                                type: boolean
                              secretRef:
                                description: 'secretRef is Optional: secretRef is reference
                                to the secret object containing sensitive information
                                to pass to the plugin scripts. This may be empty if
                                no secret object is specified. If the secret object
                                contains more than one secret, all secrets are passed
                                to the plugin scripts.'
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                              - driver
                            type: object
                          flocker:
                            description: flocker represents a Flocker volume attached
                              to a kubelet's host machine. This depends on the Flocker
                              control service being running
                            properties:
                              datasetName:
                                description: datasetName is Name of the dataset stored
                                  as metadata -> name on the dataset for Flocker should
                                  be considered as deprecated
                                type: string
                              datasetUUID:
                                description: datasetUUID is the UUID of the dataset.
                                  This is unique identifier of a Flocker dataset
                                type: string
                            type: object
                          gcePersistentDisk:
                            description: 'gcePersistentDisk represents a GCE Disk resource
                            that is attached to a kubelet''s host machine and then
                            exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            properties:
                              fsType:
                                description: 'fsType is filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              partition:
                                description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                format: int32
                                type: integer
                              pdName:
                                description: 'pdName is unique name of the PD resource
                                in GCE. Used to identify the disk in GCE. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: boolean
                            required:
                              - pdName
                            type: object
                          gitRepo:
                            description: 'gitRepo represents a git repository at a particular
                            revision. DEPRECATED: GitRepo is deprecated. To provision
                            a container with a git repo, mount an EmptyDir into an
                            InitContainer that clones the repo using git, then mount
                            the EmptyDir into the Pod''s container.'
                            properties:
                              directory:
                                description: directory is the target directory name.
                                  Must not contain or start with '..'.  If '.' is supplied,
                                  the volume directory will be the git repository.  Otherwise,
                                  if specified, the volume will contain the git repository
                                  in the subdirectory with the given name.
                                type: string
                              repository:
                                description: repository is the URL
                                type: string
                              revision:
                                description: revision is the commit hash for the specified
                                  revision.
                                type: string
                            required:
                              - repository
                            type: object
                          glusterfs:
                            description: 'glusterfs represents a Glusterfs mount on
                            the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                            properties:
                              endpoints:
                                description: 'endpoints is the endpoint name that details
                                Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              path:
                                description: 'path is the Glusterfs volume path. More
                                info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the Glusterfs
                                volume to be mounted with read-only permissions. Defaults
                                to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: boolean
                            required:
                              - endpoints
                              - path
                            type: object
                          hostPath:
                            description: 'hostPath represents a pre-existing file or
                            directory on the host machine that is directly exposed
                            to the container. This is generally used for system agents
                            or other privileged things that are allowed to see the
                            host machine. Most containers will NOT need this. More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            --- TODO(jonesdl) We need to restrict who can use host
                            directory mounts and who can/can not mount host directories
                            as read/write.'
                            properties:
                              path:
                                description: 'path of the directory on the host. If
                                the path is a symlink, it will follow the link to
                                the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                              type:
                                description: 'type for HostPath Volume Defaults to ""
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                            required:
                              - path
                            type: object
                          iscsi:
                            description: 'iscsi represents an ISCSI Disk resource that
                            is attached to a kubelet''s host machine and then exposed
                            to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                            properties:
                              chapAuthDiscovery:
                                description: chapAuthDiscovery defines whether support
                                  iSCSI Discovery CHAP authentication
                                type: boolean
                              chapAuthSession:
                                description: chapAuthSession defines whether support
                                  iSCSI Session CHAP authentication
                                type: boolean
                              fsType:
                                description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              initiatorName:
                                description: initiatorName is the custom iSCSI Initiator
                                  Name. If initiatorName is specified with iscsiInterface
                                  simultaneously, new iSCSI interface <target portal>:<volume
                                  name> will be created for the connection.
                                type: string
                              iqn:
                                description: iqn is the target iSCSI Qualified Name.
                                type: string
                              iscsiInterface:
                                description: iscsiInterface is the interface Name that
                                  uses an iSCSI transport. Defaults to 'default' (tcp).
                                type: string
                              lun:
                                description: lun represents iSCSI Target Lun number.
                                format: int32
                                type: integer
                              portals:
                                description: portals is the iSCSI Target Portal List.
                                  The portal is either an IP or ip_addr:port if the
                                  port is other than default (typically TCP ports 860
                                  and 3260).
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              readOnly:
                                description: readOnly here will force the ReadOnly setting
                                  in VolumeMounts. Defaults to false.
                                type: boolean
                              secretRef:
                                description: secretRef is the CHAP Secret for iSCSI
                                  target and initiator authentication
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              targetPortal:
                                description: targetPortal is iSCSI Target Portal. The
                                  Portal is either an IP or ip_addr:port if the port
                                  is other than default (typically TCP ports 860 and
                                  3260).
                                type: string
                            required:
                              - iqn
                              - lun
                              - targetPortal
                            type: object
                          mountPath:
                            description: Path within the Portworx container at which
                              the volume should be mounted. Must not contain ':'.
                            type: string
                          mountPropagation:
                            description: MountPropagation determines how mounts are
                              propagated from the host to container and the other way
                              around. When not set, MountPropagationNone is used.
                            type: string
                          name:
                            description: Name is unique name for the volume.
                            type: string
                          nfs:
                            description: 'nfs represents an NFS mount on the host that
                            shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            properties:
                              path:
                                description: 'path that is exported by the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the NFS export
                                to be mounted with read-only permissions. Defaults
                                to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: boolean
                              server:
                                description: 'server is the hostname or IP address of
                                the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                            required:
                              - path
                              - server
                            type: object
                          persistentVolumeClaim:
                            description: 'persistentVolumeClaimVolumeSource represents
                            a reference to a PersistentVolumeClaim in the same namespace.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            properties:
                              claimName:
                                description: 'claimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                type: string
                              readOnly:
                                description: readOnly Will force the ReadOnly setting
                                  in VolumeMounts. Default false.
                                type: boolean
                            required:
                              - claimName
                            type: object
                          photonPersistentDisk:
                            description: photonPersistentDisk represents a PhotonController
                              persistent disk attached and mounted on kubelets host
                              machine
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              pdID:
                                description: pdID is the ID that identifies Photon Controller
                                  persistent disk
                                type: string
                            required:
                              - pdID
                            type: object
                          portworxVolume:
                            description: portworxVolume represents a portworx volume
                              attached and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: fSType represents the filesystem type to
                                  mount Must be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              readOnly:
                                description: readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              volumeID:
                                description: volumeID uniquely identifies a Portworx
                                  volume
                                type: string
                            required:
                              - volumeID
                            type: object
                          projected:
                            description: projected items for all in one resources secrets,
                              configmaps, and downward API
                            properties:
                              defaultMode:
                                description: defaultMode are the mode bits used to set
                                  permissions on created files by default. Must be an
                                  octal value between 0000 and 0777 or a decimal value
                                  between 0 and 511. YAML accepts both octal and decimal
                                  values, JSON requires decimal values for mode bits.
                                  Directories within the path are not affected by this
                                  setting. This might be in conflict with other options
                                  that affect the file mode, like fsGroup, and the result
                                  can be other mode bits set.
                                format: int32
                                type: integer
                              sources:
                                description: sources is the list of volume projections
                                items:
                                  description: Projection that may be projected along
                                    with other supported volume types
                                  properties:
                                    clusterTrustBundle:
                                      description: "ClusterTrustBundle allows a pod
                                      to access the `.spec.trustBundle` field of ClusterTrustBundle
                                      objects in an auto-updating file. \n Alpha,
                                      gated by the ClusterTrustBundleProjection feature
                                      gate. \n ClusterTrustBundle objects can either
                                      be selected by name, or by the combination of
                                      signer name and a label selector. \n Kubelet
                                      performs aggressive normalization of the PEM
                                      contents written into the pod filesystem.  Esoteric
                                      PEM features such as inter-block comments and
                                      block headers are stripped.  Certificates are
                                      deduplicated. The ordering of certificates within
                                      the file is arbitrary, and Kubelet may change
                                      the order over time."
                                      properties:
                                        labelSelector:
                                          description: Select all ClusterTrustBundles
                                            that match this label selector.  Only has
                                            effect if signerName is set.  Mutually-exclusive
                                            with name.  If unset, interpreted as "match
                                            nothing".  If set but empty, interpreted
                                            as "match everything".
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key
                                                      that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value}
                                                pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        name:
                                          description: Select a single ClusterTrustBundle
                                            by object name.  Mutually-exclusive with
                                            signerName and labelSelector.
                                          type: string
                                        optional:
                                          description: If true, don't block pod startup
                                            if the referenced ClusterTrustBundle(s)
                                            aren't available.  If using name, then the
                                            named ClusterTrustBundle is allowed not
                                            to exist.  If using signerName, then the
                                            combination of signerName and labelSelector
                                            is allowed to match zero ClusterTrustBundles.
                                          type: boolean
                                        path:
                                          description: Relative path from the volume
                                            root to write the bundle.
                                          type: string
                                        signerName:
                                          description: Select all ClusterTrustBundles
                                            that match this signer name. Mutually-exclusive
                                            with name.  The contents of all selected
                                            ClusterTrustBundles will be unified and
                                            deduplicated.
                                          type: string
                                      required:
                                        - path
                                      type: object
                                    configMap:
                                      description: configMap information about the configMap
                                        data to project
                                      properties:
                                        items:
                                          description: items if unspecified, each key-value
                                            pair in the Data field of the referenced
                                            ConfigMap will be projected into the volume
                                            as a file whose name is the key and content
                                            is the value. If specified, the listed keys
                                            will be projected into the specified paths,
                                            and unlisted keys will not be present. If
                                            a key is specified which is not present
                                            in the ConfigMap, the volume setup will
                                            error unless it is marked optional. Paths
                                            must be relative and may not contain the
                                            '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative path
                                                  of the file to map the key to. May
                                                  not be an absolute path. May not contain
                                                  the path element '..'. May not start
                                                  with the string '..'.
                                                type: string
                                            required:
                                              - key
                                              - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        name:
                                          default: ""
                                          description: 'Name of the referent. This field
                                          is effectively required, but due to backwards
                                          compatibility is allowed to be empty. Instances
                                          of this type with an empty value here are
                                          almost certainly wrong. TODO: Add other
                                          useful fields. apiVersion, kind, uid? More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Drop `kubebuilder:default` when controller-gen
                                          doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    downwardAPI:
                                      description: downwardAPI information about the
                                        downwardAPI data to project
                                      properties:
                                        items:
                                          description: Items is a list of DownwardAPIVolume
                                            file
                                          items:
                                            description: DownwardAPIVolumeFile represents
                                              information to create the file containing
                                              the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name, namespace and uid are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in terms
                                                      of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to
                                                      select in the specified API version.
                                                    type: string
                                                required:
                                                  - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              mode:
                                                description: 'Optional: mode bits used
                                                to set permissions on this file, must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                requests.cpu and requests.memory)
                                                are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                    to select'
                                                    type: string
                                                required:
                                                  - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            required:
                                              - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    secret:
                                      description: secret information about the secret
                                        data to project
                                      properties:
                                        items:
                                          description: items if unspecified, each key-value
                                            pair in the Data field of the referenced
                                            Secret will be projected into the volume
                                            as a file whose name is the key and content
                                            is the value. If specified, the listed keys
                                            will be projected into the specified paths,
                                            and unlisted keys will not be present. If
                                            a key is specified which is not present
                                            in the Secret, the volume setup will error
                                            unless it is marked optional. Paths must
                                            be relative and may not contain the '..'
                                            path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative path
                                                  of the file to map the key to. May
                                                  not be an absolute path. May not contain
                                                  the path element '..'. May not start
                                                  with the string '..'.
                                                type: string
                                            required:
                                              - key
                                              - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        name:
                                          default: ""
                                          description: 'Name of the referent. This field
                                          is effectively required, but due to backwards
                                          compatibility is allowed to be empty. Instances
                                          of this type with an empty value here are
                                          almost certainly wrong. TODO: Add other
                                          useful fields. apiVersion, kind, uid? More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Drop `kubebuilder:default` when controller-gen
                                          doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                          type: string
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its key must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    serviceAccountToken:
                                      description: serviceAccountToken is information
                                        about the serviceAccountToken data to project
                                      properties:
                                        audience:
                                          description: audience is the intended audience
                                            of the token. A recipient of a token must
                                            identify itself with an identifier specified
                                            in the audience of the token, and otherwise
                                            should reject the token. The audience defaults
                                            to the identifier of the apiserver.
                                          type: string
                                        expirationSeconds:
                                          description: expirationSeconds is the requested
                                            duration of validity of the service account
                                            token. As the token approaches expiration,
                                            the kubelet volume plugin will proactively
                                            rotate the service account token. The kubelet
                                            will start trying to rotate the token if
                                            the token is older than 80 percent of its
                                            time to live or if the token is older than
                                            24 hours.Defaults to 1 hour and must be
                                            at least 10 minutes.
                                          format: int64
                                          type: integer
                                        path:
                                          description: path is the path relative to
                                            the mount point of the file to project the
                                            token into.
                                          type: string
                                      required:
                                        - path
                                      type: object
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          quobyte:
                            description: quobyte represents a Quobyte mount on the host
                              that shares a pod's lifetime
                            properties:
                              group:
                                description: group to map volume access to Default is
                                  no group
                                type: string
                              readOnly:
                                description: readOnly here will force the Quobyte volume
                                  to be mounted with read-only permissions. Defaults
                                  to false.
                                type: boolean
                              registry:
                                description: registry represents a single or multiple
                                  Quobyte Registry services specified as a string as
                                  host:port pair (multiple entries are separated with
                                  commas) which acts as the central registry for volumes
                                type: string
                              tenant:
                                description: tenant owning the given Quobyte volume
                                  in the Backend Used with dynamically provisioned Quobyte
                                  volumes, value is set by the plugin
                                type: string
                              user:
                                description: user to map volume access to Defaults to
                                  serivceaccount user
                                type: string
                              volume:
                                description: volume is a string that references an already
                                  created Quobyte volume by name.
                                type: string
                            required:
                              - registry
                              - volume
                            type: object
                          rbd:
                            description: 'rbd represents a Rados Block Device mount
                            on the host that shares a pod''s lifetime. More info:
                            https://examples.k8s.io/volumes/rbd/README.md'
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              image:
                                description: 'image is the rados image name. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              keyring:
                                description: 'keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              monitors:
                                description: 'monitors is a collection of Ceph monitors.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              pool:
                                description: 'pool is the rados pool name. Default is
                                rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: boolean
                              secretRef:
                                description: 'secretRef is name of the authentication
                                secret for RBDUser. If provided overrides keyring.
                                Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              user:
                                description: 'user is the rados user name. Default is
                                admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                            required:
                              - image
                              - monitors
                            type: object
                          readOnly:
                            description: Mounted read-only if true, read-write otherwise
                              (false or unspecified). Defaults to false.
                            type: boolean
                          scaleIO:
                            description: scaleIO represents a ScaleIO persistent volume
                              attached and mounted on Kubernetes nodes.
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                                type: string
                              gateway:
                                description: gateway is the host address of the ScaleIO
                                  API Gateway.
                                type: string
                              protectionDomain:
                                description: protectionDomain is the name of the ScaleIO
                                  Protection Domain for the configured storage.
                                type: string
                              readOnly:
                                description: readOnly Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: secretRef references to the secret for
                                  ScaleIO user and other sensitive information. If this
                                  is not provided, Login operation will fail.
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              sslEnabled:
                                description: sslEnabled Flag enable/disable SSL communication
                                  with Gateway, default false
                                type: boolean
                              storageMode:
                                description: storageMode indicates whether the storage
                                  for a volume should be ThickProvisioned or ThinProvisioned.
                                  Default is ThinProvisioned.
                                type: string
                              storagePool:
                                description: storagePool is the ScaleIO Storage Pool
                                  associated with the protection domain.
                                type: string
                              system:
                                description: system is the name of the storage system
                                  as configured in ScaleIO.
                                type: string
                              volumeName:
                                description: volumeName is the name of a volume already
                                  created in the ScaleIO system that is associated with
                                  this volume source.
                                type: string
                            required:
                              - gateway
                              - secretRef
                              - system
                            type: object
                          secret:
                            description: 'secret represents a secret that should populate
                            this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                            properties:
                              defaultMode:
                                description: 'defaultMode is Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                                format: int32
                                type: integer
                              items:
                                description: items If unspecified, each key-value pair
                                  in the Data field of the referenced Secret will be
                                  projected into the volume as a file whose name is
                                  the key and content is the value. If specified, the
                                  listed keys will be projected into the specified paths,
                                  and unlisted keys will not be present. If a key is
                                  specified which is not present in the Secret, the
                                  volume setup will error unless it is marked optional.
                                  Paths must be relative and may not contain the '..'
                                  path or start with '..'.
                                items:
                                  description: Maps a string key to a path within a
                                    volume.
                                  properties:
                                    key:
                                      description: key is the key to project.
                                      type: string
                                    mode:
                                      description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: path is the relative path of the
                                        file to map the key to. May not be an absolute
                                        path. May not contain the path element '..'.
                                        May not start with the string '..'.
                                      type: string
                                  required:
                                    - key
                                    - path
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              optional:
                                description: optional field specify whether the Secret
                                  or its keys must be defined
                                type: boolean
                              secretName:
                                description: 'secretName is the name of the secret in
                                the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                type: string
                            type: object
                          storageos:
                            description: storageOS represents a StorageOS volume attached
                              and mounted on Kubernetes nodes.
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              readOnly:
                                description: readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: secretRef specifies the secret to use for
                                  obtaining the StorageOS API credentials.  If not specified,
                                  default values will be attempted.
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              volumeName:
                                description: volumeName is the human-readable name of
                                  the StorageOS volume.  Volume names are only unique
                                  within a namespace.
                                type: string
                              volumeNamespace:
                                description: volumeNamespace specifies the scope of
                                  the volume within StorageOS.  If no namespace is specified
                                  then the Pod's namespace will be used.  This allows
                                  the Kubernetes name scoping to be mirrored within
                                  StorageOS for tighter integration. Set VolumeName
                                  to any name to override the default behaviour. Set
                                  to "default" if you are not using namespaces within
                                  StorageOS. Namespaces that do not pre-exist within
                                  StorageOS will be created.
                                type: string
                            type: object
                          vsphereVolume:
                            description: vsphereVolume represents a vSphere volume attached
                              and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: fsType is filesystem type to mount. Must
                                  be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              storagePolicyID:
                                description: storagePolicyID is the storage Policy Based
                                  Management (SPBM) profile ID associated with the StoragePolicyName.
                                type: string
                              storagePolicyName:
                                description: storagePolicyName is the storage Policy
                                  Based Management (SPBM) profile name.
                                type: string
                              volumePath:
                                description: volumePath is the path that identifies
                                  vSphere volume vmdk
                                type: string
                            required:
                              - volumePath
                            type: object
                        type: object
                      type: array
                  type: object
                cloudStorage:
                  description: CloudStorage details of storage used in cloud environment.
                  properties:
                    capacitySpecs:
                      description: CapacitySpecs list of cluster wide storage types
                        and their capacities. A single capacity spec identifies a storage
                        pool with a set of minimum requested IOPS and size. Based on
                        the cloud provider, the total storage capacity will get divided
                        amongst the nodes. The nodes bearing storage themselves will
                        get uniformly distributed across all the zones.
                      items:
                        description: CloudStorageCapacitySpec details the minimum and
                          maximum amount of storage that will be provisioned in the
                          cluster for a particular set of minimum IOPS.
                        properties:
                          maxCapacityInGiB:
                            description: MaxCapacityInGiB is max capacity for this storage
                              cluster. The total capacity of devices created by this
                              capacity spec should not be greater than this number for
                              the entire cluster.
                            format: int64
                            minimum: 0
                            type: integer
                          minCapacityInGiB:
                            description: MinCapacityInGiB minimum capacity for this
                              storage cluster. The total capacity of devices created
                              by this capacity spec should not be less than this number
                              for the entire cluster.
                            format: int64
                            minimum: 0
                            type: integer
                          minIOPS:
                            description: MinIOPS minimum IOPS expected from the cloud
                              drive
                            format: int64
                            minimum: 0
                            type: integer
                          options:
                            additionalProperties:
                              type: string
                            description: Options additional options required to provision
                              the drive in cloud
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                    deviceSpecs:
                      description: DeviceSpecs list of storage device specs. A cloud
                        storage device will be created for every spec in the list. The
                        specs will be applied to all nodes in the cluster that match
                        the node group selector. The number of nodes that will come
                        up with storage are constrained by maxStorageNodes, maxStorageNodesPerZone
                        and maxStorageNodesPerZonePerNodeGroup.
                      items:
                        type: string
                      type: array
                    journalDeviceSpec:
                      description: JournalDeviceSpec specifies the cloud device Portworx
                        uses for journaling.
                      type: string
                    kvdbDeviceSpec:
                      description: KvdbDeviceSpec specifies the cloud device Portworx
                        uses for an internal KVDB.
                      type: string
                    maxStorageNodes:
                      description: MaxStorageNodes specifies the maximum number of storage
                        nodes. If this number is reached, and a new node is added, Portworx
                        doesn't provision drives for the new node. Instead, Portworx
                        starts the node as a compute-only node. As a best practice,
                        it is recommended to use the `maxStorageNodesPerZone` field.
                      format: int32
                      minimum: 0
                      type: integer
                    maxStorageNodesPerZone:
                      description: MaxStorageNodesPerZone indicates maximum number of
                        storage nodes per zone. If this number is reached, and a new
                        node is added to the zone, Portworx doesn't provision drives
                        for the new node. Instead, Portworx starts the node as a compute-only
                        node.
                      format: int32
                      minimum: 0
                      type: integer
                    maxStorageNodesPerZonePerNodeGroup:
                      description: MaxStorageNodesPerZonePerNodeGroup maximum nodes
                        in every zone in every node group that will have storage in
                        the cluster.
                      format: int32
                      minimum: 0
                      type: integer
                    nodePoolLabel:
                      description: NodePoolLabel Kubernetes node label key with which
                        nodes are grouped into node pools for cloud storage distribution
                      type: string
                    provider:
                      description: Provider specifies the cloud provider name. Example
                        - azure, aws, gce, vsphere.
                      type: string
                    systemMetadataDeviceSpec:
                      description: SystemMdDeviceSpec is the device spec for the metadata
                        device. This device will be used to store system metadata by
                        the driver.
                      type: string
                  type: object
                csi:
                  description: CSI configurations for setting up CSI
                  properties:
                    enabled:
                      description: Enabled flag indicates whether CSI needs to be installed
                        for the storage cluster. Default value is `true`.
                      type: boolean
                    externalProvisioner:
                      description: CSIExternalProvisionerSpec is used to define the
                        CSI external provisioner configurations
                      properties:
                        resources:
                          description: Resources for csi-external-provisioner container,
                            e.g. CPU and memory requests or limits
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where this
                                      field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    installSnapshotController:
                      description: InstallSnapshotController flag indicates whether
                        CSI Snapshot Controller needs to be installed for the storage
                        cluster. Default value is `false`.
                      type: boolean
                    nodeDriverRegistrar:
                      description: CSINodeDriverRegistrarSpec is used to define the
                        CSI node driver registrar configurations
                      properties:
                        resources:
                          description: Resources for csi-node-driver-registrar container,
                            e.g. CPU and memory requests or limits
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where this
                                      field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    placement:
                      description: PlacementSpec has placement configuration for the
                        storage cluster nodes
                      properties:
                        nodeAffinity:
                          description: NodeAffinity is used to restrict Portwox on certain
                            nodes. It works similarly to the [Kubernetes node affinity](https://github.com/kubernetes/api/blob/master/core/v1/types.go#L2692)
                            feature.
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the affinity expressions specified
                                by this field, but it may choose a node that violates
                                one or more of the expressions. The node that is most
                                preferred is the one with the greatest sum of weights,
                                i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node matches the corresponding matchExpressions;
                                the node(s) with the highest sum are the most preferred.
                              items:
                                description: An empty preferred scheduling term matches
                                  all objects with implicit weight 0 (i.e. it's a no-op).
                                  A null preferred scheduling term matches no objects
                                  (i.e. is also a no-op).
                                properties:
                                  preference:
                                    description: A node selector term, associated with
                                      the corresponding weight.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  weight:
                                    description: Weight associated with matching the
                                      corresponding nodeSelectorTerm, in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - preference
                                  - weight
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the affinity requirements specified by
                                this field are not met at scheduling time, the pod will
                                not be scheduled onto the node. If the affinity requirements
                                specified by this field cease to be met at some point
                                during pod execution (e.g. due to an update), the system
                                may or may not try to eventually evict the pod from
                                its node.
                              properties:
                                nodeSelectorTerms:
                                  description: Required. A list of node selector terms.
                                    The terms are ORed.
                                  items:
                                    description: A null or empty node selector term
                                      matches no objects. The requirements of them are
                                      ANDed. The TopologySelectorTerm type implements
                                      a subset of the NodeSelectorTerm.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                                - nodeSelectorTerms
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        tolerations:
                          description: Tolerations specifies a list of tolerations that
                            will be applied to Portworx pods so that they can run on
                            nodes with matching taints.
                          items:
                            description: The pod this Toleration is attached to tolerates
                              any taint that matches the triple <key,value,effect> using
                              the matching operator <operator>.
                            properties:
                              effect:
                                description: Effect indicates the taint effect to match.
                                  Empty means match all taint effects. When specified,
                                  allowed values are NoSchedule, PreferNoSchedule and
                                  NoExecute.
                                type: string
                              key:
                                description: Key is the taint key that the toleration
                                  applies to. Empty means match all taint keys. If the
                                  key is empty, operator must be Exists; this combination
                                  means to match all values and all keys.
                                type: string
                              operator:
                                description: Operator represents a key's relationship
                                  to the value. Valid operators are Exists and Equal.
                                  Defaults to Equal. Exists is equivalent to wildcard
                                  for value, so that a pod can tolerate all taints of
                                  a particular category.
                                type: string
                              tolerationSeconds:
                                description: TolerationSeconds represents the period
                                  of time the toleration (which must be of effect NoExecute,
                                  otherwise this field is ignored) tolerates the taint.
                                  By default, it is not set, which means tolerate the
                                  taint forever (do not evict). Zero and negative values
                                  will be treated as 0 (evict immediately) by the system.
                                format: int64
                                type: integer
                              value:
                                description: Value is the taint value the toleration
                                  matches to. If the operator is Exists, the value should
                                  be empty, otherwise just a regular string.
                                type: string
                            type: object
                          type: array
                      type: object
                    resizer:
                      description: CSIResizerSpec is used to define the CSI resizer
                        configurations
                      properties:
                        resources:
                          description: Resources for csi-resizer container, e.g. CPU
                            and memory requests or limits
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where this
                                      field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    snapshotController:
                      description: CSISnapshotControllerSpec is used to define the CSI
                        snapshot controller configurations
                      properties:
                        resources:
                          description: Resources for csi snapshot-controller container,
                            e.g. CPU and memory requests or limits
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where this
                                      field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    snapshotter:
                      description: CSISnapshotterSpec is used to define the CSI snapshotter
                        configurations
                      properties:
                        resources:
                          description: Resources for csi-snapshotter container, e.g.
                            CPU and memory requests or limits
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where this
                                      field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      type: object
                    topology:
                      description: CSITopologySpec is used to define the CSI topology
                        configurations
                      properties:
                        enabled:
                          description: Enabled flag indicates whether CSI topology feature
                            gate is enabled.
                          type: boolean
                      type: object
                  type: object
                customImageRegistry:
                  description: 'CustomImageRegistry is a custom container registry server
                  (may include repository) that will be used instead of index.docker.io
                  to download Docker images. (Example: myregistry.net:5443 or myregistry.com/myrepository)'
                  type: string
                deleteStrategy:
                  description: DeleteStrategy indicates what happens when the Portworx
                    `StorageCluster` object is deleted. By default, there is no delete
                    strategy, which means only the Kubernetes components deployed by
                    the operator are removed. The Portworx `systemd` service continues
                    to run, and the Kubernetes applications using the Portworx volumes
                    are not affected. Portworx supports the following delete strategies.
                    <br/> - `Uninstall` - Removes all Portworx components from the system
                    and leaves the devices and KVDB intact. <br/> - `UninstallAndWipe`
                    - Removes all Portworx components from the system and wipes the
                    devices and metadata from KVDB.
                  properties:
                    type:
                      description: Type of storage cluster delete. Can be Uninstall
                        or UninstallAndWipe. There is no default delete strategy. When
                        no delete strategy only objects managed by the StorageCluster
                        controller and owned by the StorageCluster object are deleted.
                        The storage driver will be left in a state where it will not
                        be managed by any object. Uninstall strategy ensures that the
                        cluster is completely uninstalled even from the storage driver
                        perspective. UninstallAndWipe strategy ensures that the cluster
                        is completely uninstalled as well as the storage devices and
                        metadata are wiped for reuse. This may result in data loss.
                      enum:
                        - Uninstall
                        - UninstallAndWipe
                      type: string
                  type: object
                env:
                  description: Env is a list of [Kubernetes like environment variables](https://github.com/kubernetes/api/blob/master/core/v1/types.go#L1826).
                    Similar to how environment variables are provided in Kubernetes,
                    you can directly provide values to Portworx or import them from
                    a source like a Secret, ConfigMap, etc.
                  items:
                    description: EnvVar represents an environment variable present in
                      a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot
                          be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key
                                  must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                            x-kubernetes-map-type: atomic
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                              - fieldPath
                            type: object
                            x-kubernetes-map-type: atomic
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                              - resource
                            type: object
                            x-kubernetes-map-type: atomic
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must
                                  be defined
                                type: boolean
                            required:
                              - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                    required:
                      - name
                    type: object
                  type: array
                featureGates:
                  additionalProperties:
                    type: string
                  description: FeatureGates are a set of key-value pairs that describe
                    what Portworx features need to be enabled.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                image:
                  description: Image is docker image of the Portworx monitor image
                  type: string
                imagePullPolicy:
                  description: ImagePullPolicy specifies the image pull policy for all
                    the images deployed by the operator. The possible values can be
                    `Always` or `IfNotPresent`. Default value is `Always`.
                  type: string
                imagePullSecret:
                  description: ImagePullSecret is a reference to secret whenPortworx
                    pulls images from a secure repository, you can use this field to
                    pass it the name of the secret. Note that the secret should be in
                    the same namespace as the `StorageCluster` object.
                  type: string
                kvdb:
                  description: Kvdb is the information of kvdb that storage driver uses
                  properties:
                    authSecret:
                      description: AuthSecret is name of the kubernetes secret containing
                        information to authenticate with your kvdb. The secret must
                        be placed in the same namespace as the `StorageCluster` object.
                        The secret should provide the following information. <br/> -
                        `username` (optional) <br/> - `password` (optional) <br/> -
                        `kvdb-ca.crt` (the CA certificate) <br/> - `kvdb.key` (certificate
                        key) <br/> - `kvdb.crt` (etcd certificate) <br/> - `acl-token`
                        (optional) <br/>For example, create a directory called etcd-secrets,
                        copy the files into it and create a secret with `kubectl -n
                        kube-system create secret generic px-kvdb-auth --from-file=etcd-secrets/`
                      type: string
                    endpoints:
                      description: Endpoints is the list of endpoints for your external
                        key-value database like ETCD. This field takes precedence over
                        the spec.kvdb.internal field. That is, if you specify the endpoints,
                        Portworx ignores the spec.kvdb.internal field and it uses the
                        external KVDB
                      items:
                        type: string
                      type: array
                    internal:
                      description: Internal flag indicates  if Portworx starts with
                        the [internal KVDB](/portworx-enterprise/operations/kvdb-for-portworx/internal-kvdb).
                        Default value is `true`.
                      type: boolean
                    resources:
                      description: Resources for portworx-kvdb pods, e.g. CPU and memory
                        requests or limits
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this field
                                  is used. It makes that resource available inside a
                                  container.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                  type: object
                metadata:
                  description: Metadata contains metadata of StorageCluster components
                  properties:
                    annotations:
                      additionalProperties:
                        additionalProperties:
                          type: string
                        type: object
                      description: Annotations section of spec is a map of map to pass
                        custom annotations to different storage cluster components.
                        The key specifies component in format of "kind/component", e.g.
                        "deployment/stork" to pass custom annotations to stork deployment.
                        The value is a map of string that contains custom annotation
                        key and value pairs
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        additionalProperties:
                          type: string
                        type: object
                      description: Labels section of spec is a map of map to pass custom
                        annotations to different storage cluster components. The key
                        specifies component in format of "kind/component", e.g. "deployment/stork"
                        to pass custom annotations to stork deployment. The value is
                        a map of string that contains custom annotation key and value
                        pairs
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                monitoring:
                  description: Monitoring contains monitoring configuration for the
                    storage cluster.
                  properties:
                    enableMetrics:
                      description: EnableMetrics exposes the storage cluster metrics
                        to external monitoring solutions like Prometheus. DEPRECATED
                        - use prometheus.exportMetrics instead
                      type: boolean
                    grafana:
                      description: Grafana contains the configurations of Grafana stack
                        that will be deployed to monitor metrics from the storage cluster.
                      properties:
                        enabled:
                          description: Enabled decides whether grafana stack needs to
                            be deployed with Portworx dashboards. Default value is `false`.
                          type: boolean
                      type: object
                    prometheus:
                      description: Prometheus contains configuration of Prometheus to
                        monitor the storage cluster.
                      properties:
                        alertManager:
                          description: AlertManager is the spec for configuring alert
                            manager for storage cluster
                          properties:
                            enabled:
                              description: Enabled decides whether Prometheus alert
                                manager needs to be deployed
                              type: boolean
                          type: object
                        enabled:
                          description: Enabled decides whether prometheus stack needs
                            to be deployed. Default value is `false`.
                          type: boolean
                        exportMetrics:
                          description: ExportMetrics exposes the Portworx metrics to
                            an external or operator deployed Prometheus. Default value
                            is `false`.
                          type: boolean
                        remoteWriteEndpoint:
                          description: RemoteWriteEndpoint specifies the remote write
                            endpoint for Prometheus
                          type: string
                        replicas:
                          description: Replicas specifies the number of replicas that
                            will be deployed. Default value is `1`.
                          format: int32
                          type: integer
                        resources:
                          description: Resources define resources requests and limits
                            for Prometheus pods. The value will pass through to Prometheus
                            CR. Default limits - `CPU 1, memory 800M, and ephemeral
                            storage 5G`
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where this
                                      field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        retention:
                          description: Retention specifies time duration Prometheus
                            shall retain historical metrics. Default is '24h' if retentionSize
                            is not set, and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)`
                            (milliseconds seconds minutes hours days weeks years).
                          pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                          type: string
                        retentionSize:
                          description: RetentionSize specifies maximum amount of disk
                            space used by blocks.
                          pattern: (^0|([0-9]*[.])?[0-9]+((K|M|G|T|E|P)i?)?B)$
                          type: string
                        securityContext:
                          description: SecurityContext holds pod-level security attributes
                            and common container settings. This defaults to the default
                            PodSecurityContext. The value will pass through to Prometheus
                            CR.
                          properties:
                            appArmorProfile:
                              description: appArmorProfile is the AppArmor options to
                                use by the containers in this pod. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    loaded on the node that should be used. The profile
                                    must be preconfigured on the node to work. Must
                                    match the loaded name of the profile. Must be set
                                    if and only if type is "Localhost".
                                  type: string
                                type:
                                  description: 'type indicates which kind of AppArmor
                                  profile will be applied. Valid options are: Localhost
                                  - a profile pre-loaded on the node. RuntimeDefault
                                  - the container runtime''s default profile. Unconfined
                                  - no AppArmor enforcement.'
                                  type: string
                              required:
                                - type
                              type: object
                            fsGroup:
                              description: "A special supplemental group that applies
                              to all containers in a pod. Some volume types allow
                              the Kubelet to change the ownership of that volume to
                              be owned by the pod: \n 1. The owning GID will be the
                              FSGroup 2. The setgid bit is set (new files created
                              in the volume will be owned by FSGroup) 3. The permission
                              bits are OR'd with rw-rw---- \n If unset, the Kubelet
                              will not modify the ownership and permissions of any
                              volume. Note that this field cannot be set when spec.os.name
                              is windows."
                              format: int64
                              type: integer
                            fsGroupChangePolicy:
                              description: 'fsGroupChangePolicy defines behavior of
                              changing ownership and permission of the volume before
                              being exposed inside Pod. This field will only apply
                              to volume types which support fsGroup based ownership(and
                              permissions). It will have no effect on ephemeral volume
                              types such as: secret, configmaps and emptydir. Valid
                              values are "OnRootMismatch" and "Always". If not specified,
                              "Always" is used. Note that this field cannot be set
                              when spec.os.name is windows.'
                              type: string
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in SecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence for that container. Note that this
                                field cannot be set when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if it
                                does. If unset or false, no such validation will be
                                performed. May also be set in SecurityContext.  If set
                                in both SecurityContext and PodSecurityContext, the
                                value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in SecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence
                                for that container. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to all
                                containers. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in SecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence for that container. Note that this
                                field cannot be set when spec.os.name is windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by the containers
                                in this pod. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used. The
                                    profile must be preconfigured on the node to work.
                                    Must be a descending path, relative to the kubelet's
                                    configured seccomp profile location. Must be set
                                    if type is "Localhost". Must NOT be set for any
                                    other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                  profile will be applied. Valid options are: \n Localhost
                                  - a profile defined in a file on the node should
                                  be used. RuntimeDefault - the container runtime
                                  default profile should be used. Unconfined - no
                                  profile should be applied."
                                  type: string
                              required:
                                - type
                              type: object
                            supplementalGroups:
                              description: A list of groups applied to the first process
                                run in each container, in addition to the container's
                                primary GID, the fsGroup (if specified), and group memberships
                                defined in the container image for the uid of the container
                                process. If unspecified, no additional groups are added
                                to any container. Note that group memberships defined
                                in the container image for the uid of the container
                                process are still effective, even if they are not included
                                in this list. Note that this field cannot be set when
                                spec.os.name is windows.
                              items:
                                format: int64
                                type: integer
                              type: array
                              x-kubernetes-list-type: atomic
                            sysctls:
                              description: Sysctls hold a list of namespaced sysctls
                                used for the pod. Pods with unsupported sysctls (by
                                the container runtime) might fail to launch. Note that
                                this field cannot be set when spec.os.name is windows.
                              items:
                                description: Sysctl defines a kernel parameter to be
                                  set
                                properties:
                                  name:
                                    description: Name of a property to set
                                    type: string
                                  value:
                                    description: Value of a property to set
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options within a
                                container's SecurityContext will be used. If set in
                                both SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name of
                                    the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a mix
                                    of HostProcess containers and non-HostProcess containers).
                                    In addition, if HostProcess is true then HostNetwork
                                    must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the entrypoint
                                    of the container process. Defaults to the user specified
                                    in image metadata if unspecified. May also be set
                                    in PodSecurityContext. If set in both SecurityContext
                                    and PodSecurityContext, the value specified in SecurityContext
                                    takes precedence.
                                  type: string
                              type: object
                          type: object
                        storage:
                          description: Storage defines the storage type that Prometheus
                            will use for storing data. If you set the storage type to
                            PVCs, do not set the `runAsGroup` or `fsGroup` option for
                            the `spec.monitoring.prometheus.securityContext` flag.
                          properties:
                            disableMountSubPath:
                              description: 'Deprecated: subPath usage will be disabled
                              by default in a future release, this option will become
                              unnecessary. DisableMountSubPath allows to remove any
                              subPath usage in volume mounts.'
                              type: boolean
                            emptyDir:
                              description: 'EmptyDirVolumeSource to be used by the Prometheus
                              StatefulSets. If specified, used in place of any volumeClaimTemplate.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
                              properties:
                                medium:
                                  description: 'medium represents what type of storage
                                  medium should back this directory. The default is
                                  "" which means to use the node''s default medium.
                                  Must be an empty string (default) or Memory. More
                                  info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                  type: string
                                sizeLimit:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: 'sizeLimit is the total amount of local
                                  storage required for this EmptyDir volume. The size
                                  limit is also applicable for memory medium. The
                                  maximum usage on memory medium EmptyDir would be
                                  the minimum value between the SizeLimit specified
                                  here and the sum of memory limits of all containers
                                  in a pod. The default is nil which means that the
                                  limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              type: object
                            volumeClaimTemplate:
                              description: A PVC spec to be used by the Prometheus StatefulSets.
                              properties:
                                apiVersion:
                                  description: 'APIVersion defines the versioned schema
                                  of this representation of an object. Servers should
                                  convert recognized schemas to the latest internal
                                  value, and may reject unrecognized values. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                  type: string
                                kind:
                                  description: 'Kind is a string value representing
                                  the REST resource this object represents. Servers
                                  may infer this from the endpoint the client submits
                                  requests to. Cannot be updated. In CamelCase. More
                                  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                metadata:
                                  description: EmbeddedMetadata contains metadata relevant
                                    to an EmbeddedResource.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: 'Annotations is an unstructured key
                                      value map stored with a resource that may be
                                      set by external tools to store and retrieve
                                      arbitrary metadata. They are not queryable and
                                      should be preserved when modifying objects.
                                      More info: http://kubernetes.io/docs/user-guide/annotations'
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: 'Map of string keys and values that
                                      can be used to organize and categorize (scope
                                      and select) objects. May match selectors of
                                      replication controllers and services. More info:
                                      http://kubernetes.io/docs/user-guide/labels'
                                      type: object
                                    name:
                                      description: 'Name must be unique within a namespace.
                                      Is required when creating resources, although
                                      some resources may allow a client to request
                                      the generation of an appropriate name automatically.
                                      Name is primarily intended for creation idempotence
                                      and configuration definition. Cannot be updated.
                                      More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                      type: string
                                  type: object
                                spec:
                                  description: 'Spec defines the desired characteristics
                                  of a volume requested by a pod author. More info:
                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                  properties:
                                    accessModes:
                                      description: 'accessModes contains the desired
                                      access modes the volume should have. More info:
                                      https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    dataSource:
                                      description: 'dataSource field can be used to
                                      specify either: * An existing VolumeSnapshot
                                      object (snapshot.storage.k8s.io/VolumeSnapshot)
                                      * An existing PVC (PersistentVolumeClaim) If
                                      the provisioner or an external controller can
                                      support the specified data source, it will create
                                      a new volume based on the contents of the specified
                                      data source. When the AnyVolumeDataSource feature
                                      gate is enabled, dataSource contents will be
                                      copied to dataSourceRef, and dataSourceRef contents
                                      will be copied to dataSource when dataSourceRef.namespace
                                      is not specified. If the namespace is specified,
                                      then dataSourceRef will not be copied to dataSource.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup is
                                            not specified, the specified Kind must be
                                            in the core API group. For any other third-party
                                            types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                      required:
                                        - kind
                                        - name
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    dataSourceRef:
                                      description: 'dataSourceRef specifies the object
                                      from which to populate the volume with data,
                                      if a non-empty volume is desired. This may be
                                      any object from a non-empty API group (non core
                                      object) or a PersistentVolumeClaim object. When
                                      this field is specified, volume binding will
                                      only succeed if the type of the specified object
                                      matches some installed volume populator or dynamic
                                      provisioner. This field will replace the functionality
                                      of the dataSource field and as such if both
                                      fields are non-empty, they must have the same
                                      value. For backwards compatibility, when namespace
                                      isn''t specified in dataSourceRef, both fields
                                      (dataSource and dataSourceRef) will be set to
                                      the same value automatically if one of them
                                      is empty and the other is non-empty. When namespace
                                      is specified in dataSourceRef, dataSource isn''t
                                      set to the same value and must be empty. There
                                      are three important differences between dataSource
                                      and dataSourceRef: * While dataSource only allows
                                      two specific types of objects, dataSourceRef
                                      allows any non-core object, as well as PersistentVolumeClaim
                                      objects. * While dataSource ignores disallowed
                                      values (dropping them), dataSourceRef preserves
                                      all values, and generates an error if a disallowed
                                      value is specified. * While dataSource only
                                      allows local objects, dataSourceRef allows objects
                                      in any namespaces. (Beta) Using this field requires
                                      the AnyVolumeDataSource feature gate to be enabled.
                                      (Alpha) Using the namespace field of dataSourceRef
                                      requires the CrossNamespaceVolumeDataSource
                                      feature gate to be enabled.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup is
                                            not specified, the specified Kind must be
                                            in the core API group. For any other third-party
                                            types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                        namespace:
                                          description: Namespace is the namespace of
                                            resource being referenced Note that when
                                            a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                            object is required in the referent namespace
                                            to allow that namespace's owner to accept
                                            the reference. See the ReferenceGrant documentation
                                            for details. (Alpha) This field requires
                                            the CrossNamespaceVolumeDataSource feature
                                            gate to be enabled.
                                          type: string
                                      required:
                                        - kind
                                        - name
                                      type: object
                                    resources:
                                      description: 'resources represents the minimum
                                      resources the volume should have. If RecoverVolumeExpansionFailure
                                      feature is enabled users are allowed to specify
                                      resource requirements that are lower than previous
                                      value but must still be higher than capacity
                                      recorded in the status field of the claim. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                          amount of compute resources allowed. More
                                          info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                          amount of compute resources required. If
                                          Requests is omitted for a container, it
                                          defaults to Limits if that is explicitly
                                          specified, otherwise to an implementation-defined
                                          value. Requests cannot exceed Limits. More
                                          info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    selector:
                                      description: selector is a label query over volumes
                                        to consider for binding.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of
                                            label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values, a
                                              key, and an operator that relates the
                                              key and values.
                                            properties:
                                              key:
                                                description: key is the label key that
                                                  the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's
                                                  relationship to a set of values. Valid
                                                  operators are In, NotIn, Exists and
                                                  DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string
                                                  values. If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This
                                                  array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator is
                                            "In", and the values array contains only
                                            "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    storageClassName:
                                      description: 'storageClassName is the name of
                                      the StorageClass required by the claim. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                      type: string
                                    volumeAttributesClassName:
                                      description: 'volumeAttributesClassName may be
                                      used to set the VolumeAttributesClass used by
                                      this claim. If specified, the CSI driver will
                                      create or update the volume with the attributes
                                      defined in the corresponding VolumeAttributesClass.
                                      This has a different purpose than storageClassName,
                                      it can be changed after the claim is created.
                                      An empty string value means that no VolumeAttributesClass
                                      will be applied to the claim but it''s not allowed
                                      to reset this field to empty string once it
                                      is set. If unspecified and the PersistentVolumeClaim
                                      is unbound, the default VolumeAttributesClass
                                      will be set by the persistentvolume controller
                                      if it exists. If the resource referred to by
                                      volumeAttributesClass does not exist, this PersistentVolumeClaim
                                      will be set to a Pending state, as reflected
                                      by the modifyVolumeStatus field, until such
                                      as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                      (Alpha) Using this field requires the VolumeAttributesClass
                                      feature gate to be enabled.'
                                      type: string
                                    volumeMode:
                                      description: volumeMode defines what type of volume
                                        is required by the claim. Value of Filesystem
                                        is implied when not included in claim spec.
                                      type: string
                                    volumeName:
                                      description: volumeName is the binding reference
                                        to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                                status:
                                  description: 'Status represents the current information/status
                                  of a persistent volume claim. Read-only. More info:
                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                  properties:
                                    accessModes:
                                      description: 'accessModes contains the actual
                                      access modes the volume backing the PVC has.
                                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    allocatedResourceStatuses:
                                      additionalProperties:
                                        description: When a controller receives persistentvolume
                                          claim update with ClaimResourceStatus for
                                          a resource that it does not recognizes, then
                                          it should ignore that update and let other
                                          controllers handle it.
                                        type: string
                                      description: "allocatedResourceStatuses stores
                                      status of resource being resized for the given
                                      PVC. Key names follow standard Kubernetes label
                                      syntax. Valid values are either: * Un-prefixed
                                      keys: - storage - the capacity of the volume.
                                      * Custom resources must use implementation-defined
                                      prefixed names such as \"example.com/my-custom-resource\"
                                      Apart from above values - keys that are unprefixed
                                      or have kubernetes.io prefix are considered
                                      reserved and hence may not be used. \n ClaimResourceStatus
                                      can be in any of following states: - ControllerResizeInProgress:
                                      State set when resize controller starts resizing
                                      the volume in control-plane. - ControllerResizeFailed:
                                      State set when resize has failed in resize controller
                                      with a terminal error. - NodeResizePending:
                                      State set when resize controller has finished
                                      resizing the volume but further resizing of
                                      volume is needed on the node. - NodeResizeInProgress:
                                      State set when kubelet starts resizing the volume.
                                      - NodeResizeFailed: State set when resizing
                                      has failed in kubelet with a terminal error.
                                      Transient errors don't set NodeResizeFailed.
                                      For example: if expanding a PVC for more capacity
                                      - this field can be one of the following states:
                                      - pvc.status.allocatedResourceStatus['storage']
                                      = \"ControllerResizeInProgress\" - pvc.status.allocatedResourceStatus['storage']
                                      = \"ControllerResizeFailed\" - pvc.status.allocatedResourceStatus['storage']
                                      = \"NodeResizePending\" - pvc.status.allocatedResourceStatus['storage']
                                      = \"NodeResizeInProgress\" - pvc.status.allocatedResourceStatus['storage']
                                      = \"NodeResizeFailed\" When this field is not
                                      set, it means that no resize operation is in
                                      progress for the given PVC. \n A controller
                                      that receives PVC update with previously unknown
                                      resourceName or ClaimResourceStatus should ignore
                                      the update for the purpose it was designed.
                                      For example - a controller that only is responsible
                                      for resizing capacity of the volume, should
                                      ignore PVC updates that change other valid resources
                                      associated with PVC. \n This is an alpha field
                                      and requires enabling RecoverVolumeExpansionFailure
                                      feature."
                                      type: object
                                      x-kubernetes-map-type: granular
                                    allocatedResources:
                                      additionalProperties:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: "allocatedResources tracks the resources
                                      allocated to a PVC including its capacity. Key
                                      names follow standard Kubernetes label syntax.
                                      Valid values are either: * Un-prefixed keys:
                                      - storage - the capacity of the volume. * Custom
                                      resources must use implementation-defined prefixed
                                      names such as \"example.com/my-custom-resource\"
                                      Apart from above values - keys that are unprefixed
                                      or have kubernetes.io prefix are considered
                                      reserved and hence may not be used. \n Capacity
                                      reported here may be larger than the actual
                                      capacity when a volume expansion operation is
                                      requested. For storage quota, the larger value
                                      from allocatedResources and PVC.spec.resources
                                      is used. If allocatedResources is not set, PVC.spec.resources
                                      alone is used for quota calculation. If a volume
                                      expansion capacity request is lowered, allocatedResources
                                      is only lowered if there are no expansion operations
                                      in progress and if the actual volume capacity
                                      is equal or lower than the requested capacity.
                                      \n A controller that receives PVC update with
                                      previously unknown resourceName should ignore
                                      the update for the purpose it was designed.
                                      For example - a controller that only is responsible
                                      for resizing capacity of the volume, should
                                      ignore PVC updates that change other valid resources
                                      associated with PVC. \n This is an alpha field
                                      and requires enabling RecoverVolumeExpansionFailure
                                      feature."
                                      type: object
                                    capacity:
                                      additionalProperties:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: capacity represents the actual resources
                                        of the underlying volume.
                                      type: object
                                    conditions:
                                      description: conditions is the current Condition
                                        of persistent volume claim. If underlying persistent
                                        volume is being resized then the Condition will
                                        be set to 'Resizing'.
                                      items:
                                        description: PersistentVolumeClaimCondition
                                          contains details about state of pvc
                                        properties:
                                          lastProbeTime:
                                            description: lastProbeTime is the time we
                                              probed the condition.
                                            format: date-time
                                            type: string
                                          lastTransitionTime:
                                            description: lastTransitionTime is the time
                                              the condition transitioned from one status
                                              to another.
                                            format: date-time
                                            type: string
                                          message:
                                            description: message is the human-readable
                                              message indicating details about last
                                              transition.
                                            type: string
                                          reason:
                                            description: reason is a unique, this should
                                              be a short, machine understandable string
                                              that gives the reason for condition's
                                              last transition. If it reports "Resizing"
                                              that means the underlying persistent volume
                                              is being resized.
                                            type: string
                                          status:
                                            type: string
                                          type:
                                            description: PersistentVolumeClaimConditionType
                                              is a valid value of PersistentVolumeClaimCondition.Type
                                            type: string
                                        required:
                                          - status
                                          - type
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                        - type
                                      x-kubernetes-list-type: map
                                    currentVolumeAttributesClassName:
                                      description: currentVolumeAttributesClassName
                                        is the current name of the VolumeAttributesClass
                                        the PVC is using. When unset, there is no VolumeAttributeClass
                                        applied to this PersistentVolumeClaim This is
                                        an alpha field and requires enabling VolumeAttributesClass
                                        feature.
                                      type: string
                                    modifyVolumeStatus:
                                      description: ModifyVolumeStatus represents the
                                        status object of ControllerModifyVolume operation.
                                        When this is unset, there is no ModifyVolume
                                        operation being attempted. This is an alpha
                                        field and requires enabling VolumeAttributesClass
                                        feature.
                                      properties:
                                        status:
                                          description: 'status is the status of the
                                          ControllerModifyVolume operation. It can
                                          be in any of following states: - Pending
                                          Pending indicates that the PersistentVolumeClaim
                                          cannot be modified due to unmet requirements,
                                          such as the specified VolumeAttributesClass
                                          not existing. - InProgress InProgress indicates
                                          that the volume is being modified. - Infeasible
                                          Infeasible indicates that the request has
                                          been rejected as invalid by the CSI driver.
                                          To resolve the error, a valid VolumeAttributesClass
                                          needs to be specified. Note: New statuses
                                          can be added in the future. Consumers should
                                          check for unknown statuses and fail appropriately.'
                                          type: string
                                        targetVolumeAttributesClassName:
                                          description: targetVolumeAttributesClassName
                                            is the name of the VolumeAttributesClass
                                            the PVC currently being reconciled
                                          type: string
                                      required:
                                        - status
                                      type: object
                                    phase:
                                      description: phase represents the current phase
                                        of PersistentVolumeClaim.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        volumeMounts:
                          description: VolumeMounts allows configuration of additional
                            VolumeMounts on the output StatefulSet definition. VolumeMounts
                            specified will be appended to other VolumeMounts in the
                            prometheus container, that are generated as a result of
                            StorageSpec objects.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10. When RecursiveReadOnly
                                  is set to IfPossible or to Enabled, MountPropagation
                                  must be None or unspecified (which defaults to None).
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write otherwise
                                  (false or unspecified). Defaults to false.
                                type: boolean
                              recursiveReadOnly:
                                description: "RecursiveReadOnly specifies whether read-only
                                mounts should be handled recursively. \n If ReadOnly
                                is false, this field has no meaning and must be unspecified.
                                \n If ReadOnly is true, and this field is set to Disabled,
                                the mount is not made recursively read-only.  If this
                                field is set to IfPossible, the mount is made recursively
                                read-only, if it is supported by the container runtime.
                                \ If this field is set to Enabled, the mount is made
                                recursively read-only if it is supported by the container
                                runtime, otherwise the pod will not be started and
                                an error will be generated to indicate the reason.
                                \n If this field is set to IfPossible or Enabled,
                                MountPropagation must be set to None (or be unspecified,
                                which defaults to None). \n If this field is not specified,
                                it is treated as an equivalent of Disabled."
                                type: string
                              subPath:
                                description: Path within the volume from which the container's
                                  volume should be mounted. Defaults to "" (volume's
                                  root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from which
                                  the container's volume should be mounted. Behaves
                                  similarly to SubPath but environment variable references
                                  $(VAR_NAME) are expanded using the container's environment.
                                  Defaults to "" (volume's root). SubPathExpr and SubPath
                                  are mutually exclusive.
                                type: string
                            required:
                              - mountPath
                              - name
                            type: object
                          type: array
                        volumes:
                          description: Volumes allows configuration of additional volumes
                            on the output StatefulSet definition. Volumes specified
                            will be appended to other volumes that are generated as
                            a result of StorageSpec objects.
                          items:
                            description: Volume represents a named volume in a pod that
                              may be accessed by any container in the pod.
                            properties:
                              awsElasticBlockStore:
                                description: 'awsElasticBlockStore represents an AWS
                                Disk resource that is attached to a kubelet''s host
                                machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                properties:
                                  fsType:
                                    description: 'fsType is the filesystem type of the
                                    volume that you want to mount. Tip: Ensure that
                                    the filesystem type is supported by the host operating
                                    system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                    inferred to be "ext4" if unspecified. More info:
                                    https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                    TODO: how do we prevent errors in the filesystem
                                    from compromising the machine'
                                    type: string
                                  partition:
                                    description: 'partition is the partition in the
                                    volume that you want to mount. If omitted, the
                                    default is to mount by volume name. Examples:
                                    For volume /dev/sda1, you specify the partition
                                    as "1". Similarly, the volume partition for /dev/sda
                                    is "0" (or you can leave the property empty).'
                                    format: int32
                                    type: integer
                                  readOnly:
                                    description: 'readOnly value true will force the
                                    readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                    type: boolean
                                  volumeID:
                                    description: 'volumeID is unique ID of the persistent
                                    disk resource in AWS (Amazon EBS volume). More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                    type: string
                                required:
                                  - volumeID
                                type: object
                              azureDisk:
                                description: azureDisk represents an Azure Data Disk
                                  mount on the host and bind mount to the pod.
                                properties:
                                  cachingMode:
                                    description: 'cachingMode is the Host Caching mode:
                                    None, Read Only, Read Write.'
                                    type: string
                                  diskName:
                                    description: diskName is the Name of the data disk
                                      in the blob storage
                                    type: string
                                  diskURI:
                                    description: diskURI is the URI of data disk in
                                      the blob storage
                                    type: string
                                  fsType:
                                    description: fsType is Filesystem type to mount.
                                      Must be a filesystem type supported by the host
                                      operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                      inferred to be "ext4" if unspecified.
                                    type: string
                                  kind:
                                    description: 'kind expected values are Shared: multiple
                                    blob disks per storage account  Dedicated: single
                                    blob disk per storage account  Managed: azure
                                    managed data disk (only in managed availability
                                    set). defaults to shared'
                                    type: string
                                  readOnly:
                                    description: readOnly Defaults to false (read/write).
                                      ReadOnly here will force the ReadOnly setting
                                      in VolumeMounts.
                                    type: boolean
                                required:
                                  - diskName
                                  - diskURI
                                type: object
                              azureFile:
                                description: azureFile represents an Azure File Service
                                  mount on the host and bind mount to the pod.
                                properties:
                                  readOnly:
                                    description: readOnly defaults to false (read/write).
                                      ReadOnly here will force the ReadOnly setting
                                      in VolumeMounts.
                                    type: boolean
                                  secretName:
                                    description: secretName is the  name of secret that
                                      contains Azure Storage Account Name and Key
                                    type: string
                                  shareName:
                                    description: shareName is the azure share Name
                                    type: string
                                required:
                                  - secretName
                                  - shareName
                                type: object
                              cephfs:
                                description: cephFS represents a Ceph FS mount on the
                                  host that shares a pod's lifetime
                                properties:
                                  monitors:
                                    description: 'monitors is Required: Monitors is
                                    a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  path:
                                    description: 'path is Optional: Used as the mounted
                                    root, rather than the full Ceph tree, default
                                    is /'
                                    type: string
                                  readOnly:
                                    description: 'readOnly is Optional: Defaults to
                                    false (read/write). ReadOnly here will force the
                                    ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                    type: boolean
                                  secretFile:
                                    description: 'secretFile is Optional: SecretFile
                                    is the path to key ring for User, default is /etc/ceph/user.secret
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                    type: string
                                  secretRef:
                                    description: 'secretRef is Optional: SecretRef is
                                    reference to the authentication secret for User,
                                    default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                    properties:
                                      name:
                                        default: ""
                                        description: 'Name of the referent. This field
                                        is effectively required, but due to backwards
                                        compatibility is allowed to be empty. Instances
                                        of this type with an empty value here are
                                        almost certainly wrong. TODO: Add other useful
                                        fields. apiVersion, kind, uid? More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Drop `kubebuilder:default` when controller-gen
                                        doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  user:
                                    description: 'user is optional: User is the rados
                                    user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                    type: string
                                required:
                                  - monitors
                                type: object
                              cinder:
                                description: 'cinder represents a cinder volume attached
                                and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                properties:
                                  fsType:
                                    description: 'fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host
                                    operating system. Examples: "ext4", "xfs", "ntfs".
                                    Implicitly inferred to be "ext4" if unspecified.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                    type: string
                                  readOnly:
                                    description: 'readOnly defaults to false (read/write).
                                    ReadOnly here will force the ReadOnly setting
                                    in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                    type: boolean
                                  secretRef:
                                    description: 'secretRef is optional: points to a
                                    secret object containing parameters used to connect
                                    to OpenStack.'
                                    properties:
                                      name:
                                        default: ""
                                        description: 'Name of the referent. This field
                                        is effectively required, but due to backwards
                                        compatibility is allowed to be empty. Instances
                                        of this type with an empty value here are
                                        almost certainly wrong. TODO: Add other useful
                                        fields. apiVersion, kind, uid? More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Drop `kubebuilder:default` when controller-gen
                                        doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  volumeID:
                                    description: 'volumeID used to identify the volume
                                    in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                    type: string
                                required:
                                  - volumeID
                                type: object
                              configMap:
                                description: configMap represents a configMap that should
                                  populate this volume
                                properties:
                                  defaultMode:
                                    description: 'defaultMode is optional: mode bits
                                    used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or
                                    a decimal value between 0 and 511. YAML accepts
                                    both octal and decimal values, JSON requires decimal
                                    values for mode bits. Defaults to 0644. Directories
                                    within the path are not affected by this setting.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  items:
                                    description: items if unspecified, each key-value
                                      pair in the Data field of the referenced ConfigMap
                                      will be projected into the volume as a file whose
                                      name is the key and content is the value. If specified,
                                      the listed keys will be projected into the specified
                                      paths, and unlisted keys will not be present.
                                      If a key is specified which is not present in
                                      the ConfigMap, the volume setup will error unless
                                      it is marked optional. Paths must be relative
                                      and may not contain the '..' path or start with
                                      '..'.
                                    items:
                                      description: Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: key is the key to project.
                                          type: string
                                        mode:
                                          description: 'mode is Optional: mode bits
                                          used to set permissions on this file. Must
                                          be an octal value between 0000 and 0777
                                          or a decimal value between 0 and 511. YAML
                                          accepts both octal and decimal values, JSON
                                          requires decimal values for mode bits. If
                                          not specified, the volume defaultMode will
                                          be used. This might be in conflict with
                                          other options that affect the file mode,
                                          like fsGroup, and the result can be other
                                          mode bits set.'
                                          format: int32
                                          type: integer
                                        path:
                                          description: path is the relative path of
                                            the file to map the key to. May not be an
                                            absolute path. May not contain the path
                                            element '..'. May not start with the string
                                            '..'.
                                          type: string
                                      required:
                                        - key
                                        - path
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                  optional:
                                    description: optional specify whether the ConfigMap
                                      or its keys must be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              csi:
                                description: csi (Container Storage Interface) represents
                                  ephemeral storage that is handled by certain external
                                  CSI drivers (Beta feature).
                                properties:
                                  driver:
                                    description: driver is the name of the CSI driver
                                      that handles this volume. Consult with your admin
                                      for the correct name as registered in the cluster.
                                    type: string
                                  fsType:
                                    description: fsType to mount. Ex. "ext4", "xfs",
                                      "ntfs". If not provided, the empty value is passed
                                      to the associated CSI driver which will determine
                                      the default filesystem to apply.
                                    type: string
                                  nodePublishSecretRef:
                                    description: nodePublishSecretRef is a reference
                                      to the secret object containing sensitive information
                                      to pass to the CSI driver to complete the CSI
                                      NodePublishVolume and NodeUnpublishVolume calls.
                                      This field is optional, and  may be empty if no
                                      secret is required. If the secret object contains
                                      more than one secret, all secret references are
                                      passed.
                                    properties:
                                      name:
                                        default: ""
                                        description: 'Name of the referent. This field
                                        is effectively required, but due to backwards
                                        compatibility is allowed to be empty. Instances
                                        of this type with an empty value here are
                                        almost certainly wrong. TODO: Add other useful
                                        fields. apiVersion, kind, uid? More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Drop `kubebuilder:default` when controller-gen
                                        doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  readOnly:
                                    description: readOnly specifies a read-only configuration
                                      for the volume. Defaults to false (read/write).
                                    type: boolean
                                  volumeAttributes:
                                    additionalProperties:
                                      type: string
                                    description: volumeAttributes stores driver-specific
                                      properties that are passed to the CSI driver.
                                      Consult your driver's documentation for supported
                                      values.
                                    type: object
                                required:
                                  - driver
                                type: object
                              downwardAPI:
                                description: downwardAPI represents downward API about
                                  the pod that should populate this volume
                                properties:
                                  defaultMode:
                                    description: 'Optional: mode bits to use on created
                                    files by default. Must be a Optional: mode bits
                                    used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or
                                    a decimal value between 0 and 511. YAML accepts
                                    both octal and decimal values, JSON requires decimal
                                    values for mode bits. Defaults to 0644. Directories
                                    within the path are not affected by this setting.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  items:
                                    description: Items is a list of downward API volume
                                      file
                                    items:
                                      description: DownwardAPIVolumeFile represents
                                        information to create the file containing the
                                        pod field
                                      properties:
                                        fieldRef:
                                          description: 'Required: Selects a field of
                                          the pod: only annotations, labels, name,
                                          namespace and uid are supported.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of, defaults
                                                to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                            - fieldPath
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        mode:
                                          description: 'Optional: mode bits used to
                                          set permissions on this file, must be an
                                          octal value between 0000 and 0777 or a decimal
                                          value between 0 and 511. YAML accepts both
                                          octal and decimal values, JSON requires
                                          decimal values for mode bits. If not specified,
                                          the volume defaultMode will be used. This
                                          might be in conflict with other options
                                          that affect the file mode, like fsGroup,
                                          and the result can be other mode bits set.'
                                          format: int32
                                          type: integer
                                        path:
                                          description: 'Required: Path is  the relative
                                          path name of the file to be created. Must
                                          not be absolute or contain the ''..'' path.
                                          Must be utf-8 encoded. The first item of
                                          the relative path must not start with ''..'''
                                          type: string
                                        resourceFieldRef:
                                          description: 'Selects a resource of the container:
                                          only resources limits and requests (limits.cpu,
                                          limits.memory, requests.cpu and requests.memory)
                                          are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                              for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults to
                                                "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to select'
                                              type: string
                                          required:
                                            - resource
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                        - path
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              emptyDir:
                                description: 'emptyDir represents a temporary directory
                                that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                properties:
                                  medium:
                                    description: 'medium represents what type of storage
                                    medium should back this directory. The default
                                    is "" which means to use the node''s default medium.
                                    Must be an empty string (default) or Memory. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                    type: string
                                  sizeLimit:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: 'sizeLimit is the total amount of local
                                    storage required for this EmptyDir volume. The
                                    size limit is also applicable for memory medium.
                                    The maximum usage on memory medium EmptyDir would
                                    be the minimum value between the SizeLimit specified
                                    here and the sum of memory limits of all containers
                                    in a pod. The default is nil which means that
                                    the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                type: object
                              ephemeral:
                                description: "ephemeral represents a volume that is
                                handled by a cluster storage driver. The volume's
                                lifecycle is tied to the pod that defines it - it
                                will be created before the pod starts, and deleted
                                when the pod is removed. \n Use this if: a) the volume
                                is only needed while the pod runs, b) features of
                                normal volumes like restoring from snapshot or capacity
                                tracking are needed, c) the storage driver is specified
                                through a storage class, and d) the storage driver
                                supports dynamic volume provisioning through a PersistentVolumeClaim
                                (see EphemeralVolumeSource for more information on
                                the connection between this volume type and PersistentVolumeClaim).
                                \n Use PersistentVolumeClaim or one of the vendor-specific
                                APIs for volumes that persist for longer than the
                                lifecycle of an individual pod. \n Use CSI for light-weight
                                local ephemeral volumes if the CSI driver is meant
                                to be used that way - see the documentation of the
                                driver for more information. \n A pod can use both
                                types of ephemeral volumes and persistent volumes
                                at the same time."
                                properties:
                                  volumeClaimTemplate:
                                    description: "Will be used to create a stand-alone
                                    PVC to provision the volume. The pod in which
                                    this EphemeralVolumeSource is embedded will be
                                    the owner of the PVC, i.e. the PVC will be deleted
                                    together with the pod.  The name of the PVC will
                                    be `<pod name>-<volume name>` where `<volume name>`
                                    is the name from the `PodSpec.Volumes` array entry.
                                    Pod validation will reject the pod if the concatenated
                                    name is not valid for a PVC (for example, too
                                    long). \n An existing PVC with that name that
                                    is not owned by the pod will *not* be used for
                                    the pod to avoid using an unrelated volume by
                                    mistake. Starting the pod is then blocked until
                                    the unrelated PVC is removed. If such a pre-created
                                    PVC is meant to be used by the pod, the PVC has
                                    to updated with an owner reference to the pod
                                    once the pod exists. Normally this should not
                                    be necessary, but it may be useful when manually
                                    reconstructing a broken cluster. \n This field
                                    is read-only and no changes will be made by Kubernetes
                                    to the PVC after it has been created. \n Required,
                                    must not be nil."
                                    properties:
                                      metadata:
                                        description: May contain labels and annotations
                                          that will be copied into the PVC when creating
                                          it. No other fields are allowed and will be
                                          rejected during validation.
                                        type: object
                                      spec:
                                        description: The specification for the PersistentVolumeClaim.
                                          The entire content is copied unchanged into
                                          the PVC that gets created from this template.
                                          The same fields as in a PersistentVolumeClaim
                                          are also valid here.
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the desired
                                            access modes the volume should have. More
                                            info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          dataSource:
                                            description: 'dataSource field can be used
                                            to specify either: * An existing VolumeSnapshot
                                            object (snapshot.storage.k8s.io/VolumeSnapshot)
                                            * An existing PVC (PersistentVolumeClaim)
                                            If the provisioner or an external controller
                                            can support the specified data source,
                                            it will create a new volume based on the
                                            contents of the specified data source.
                                            When the AnyVolumeDataSource feature gate
                                            is enabled, dataSource contents will be
                                            copied to dataSourceRef, and dataSourceRef
                                            contents will be copied to dataSource
                                            when dataSourceRef.namespace is not specified.
                                            If the namespace is specified, then dataSourceRef
                                            will not be copied to dataSource.'
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group for
                                                  the resource being referenced. If
                                                  APIGroup is not specified, the specified
                                                  Kind must be in the core API group.
                                                  For any other third-party types, APIGroup
                                                  is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                            required:
                                              - kind
                                              - name
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          dataSourceRef:
                                            description: 'dataSourceRef specifies the
                                            object from which to populate the volume
                                            with data, if a non-empty volume is desired.
                                            This may be any object from a non-empty
                                            API group (non core object) or a PersistentVolumeClaim
                                            object. When this field is specified,
                                            volume binding will only succeed if the
                                            type of the specified object matches some
                                            installed volume populator or dynamic
                                            provisioner. This field will replace the
                                            functionality of the dataSource field
                                            and as such if both fields are non-empty,
                                            they must have the same value. For backwards
                                            compatibility, when namespace isn''t specified
                                            in dataSourceRef, both fields (dataSource
                                            and dataSourceRef) will be set to the
                                            same value automatically if one of them
                                            is empty and the other is non-empty. When
                                            namespace is specified in dataSourceRef,
                                            dataSource isn''t set to the same value
                                            and must be empty. There are three important
                                            differences between dataSource and dataSourceRef:
                                            * While dataSource only allows two specific
                                            types of objects, dataSourceRef allows
                                            any non-core object, as well as PersistentVolumeClaim
                                            objects. * While dataSource ignores disallowed
                                            values (dropping them), dataSourceRef
                                            preserves all values, and generates an
                                            error if a disallowed value is specified.
                                            * While dataSource only allows local objects,
                                            dataSourceRef allows objects in any namespaces.
                                            (Beta) Using this field requires the AnyVolumeDataSource
                                            feature gate to be enabled. (Alpha) Using
                                            the namespace field of dataSourceRef requires
                                            the CrossNamespaceVolumeDataSource feature
                                            gate to be enabled.'
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group for
                                                  the resource being referenced. If
                                                  APIGroup is not specified, the specified
                                                  Kind must be in the core API group.
                                                  For any other third-party types, APIGroup
                                                  is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                              namespace:
                                                description: Namespace is the namespace
                                                  of resource being referenced Note
                                                  that when a namespace is specified,
                                                  a gateway.networking.k8s.io/ReferenceGrant
                                                  object is required in the referent
                                                  namespace to allow that namespace's
                                                  owner to accept the reference. See
                                                  the ReferenceGrant documentation for
                                                  details. (Alpha) This field requires
                                                  the CrossNamespaceVolumeDataSource
                                                  feature gate to be enabled.
                                                type: string
                                            required:
                                              - kind
                                              - name
                                            type: object
                                          resources:
                                            description: 'resources represents the minimum
                                            resources the volume should have. If RecoverVolumeExpansionFailure
                                            feature is enabled users are allowed to
                                            specify resource requirements that are
                                            lower than previous value but must still
                                            be higher than capacity recorded in the
                                            status field of the claim. More info:
                                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                            properties:
                                              limits:
                                                additionalProperties:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Limits describes the maximum
                                                amount of compute resources allowed.
                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                              requests:
                                                additionalProperties:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Requests describes the
                                                minimum amount of compute resources
                                                required. If Requests is omitted for
                                                a container, it defaults to Limits
                                                if that is explicitly specified, otherwise
                                                to an implementation-defined value.
                                                Requests cannot exceed Limits. More
                                                info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                            type: object
                                          selector:
                                            description: selector is a label query over
                                              volumes to consider for binding.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list
                                                  of label selector requirements. The
                                                  requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a set
                                                        of values. Valid operators are
                                                        In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values array
                                                        must be non-empty. If the operator
                                                        is Exists or DoesNotExist, the
                                                        values array must be empty.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map of
                                                  {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          storageClassName:
                                            description: 'storageClassName is the name
                                            of the StorageClass required by the claim.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                            type: string
                                          volumeAttributesClassName:
                                            description: 'volumeAttributesClassName
                                            may be used to set the VolumeAttributesClass
                                            used by this claim. If specified, the
                                            CSI driver will create or update the volume
                                            with the attributes defined in the corresponding
                                            VolumeAttributesClass. This has a different
                                            purpose than storageClassName, it can
                                            be changed after the claim is created.
                                            An empty string value means that no VolumeAttributesClass
                                            will be applied to the claim but it''s
                                            not allowed to reset this field to empty
                                            string once it is set. If unspecified
                                            and the PersistentVolumeClaim is unbound,
                                            the default VolumeAttributesClass will
                                            be set by the persistentvolume controller
                                            if it exists. If the resource referred
                                            to by volumeAttributesClass does not exist,
                                            this PersistentVolumeClaim will be set
                                            to a Pending state, as reflected by the
                                            modifyVolumeStatus field, until such as
                                            a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                            (Alpha) Using this field requires the
                                            VolumeAttributesClass feature gate to
                                            be enabled.'
                                            type: string
                                          volumeMode:
                                            description: volumeMode defines what type
                                              of volume is required by the claim. Value
                                              of Filesystem is implied when not included
                                              in claim spec.
                                            type: string
                                          volumeName:
                                            description: volumeName is the binding reference
                                              to the PersistentVolume backing this claim.
                                            type: string
                                        type: object
                                    required:
                                      - spec
                                    type: object
                                type: object
                              fc:
                                description: fc represents a Fibre Channel resource
                                  that is attached to a kubelet's host machine and then
                                  exposed to the pod.
                                properties:
                                  fsType:
                                    description: 'fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host
                                    operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                    inferred to be "ext4" if unspecified. TODO: how
                                    do we prevent errors in the filesystem from compromising
                                    the machine'
                                    type: string
                                  lun:
                                    description: 'lun is Optional: FC target lun number'
                                    format: int32
                                    type: integer
                                  readOnly:
                                    description: 'readOnly is Optional: Defaults to
                                    false (read/write). ReadOnly here will force the
                                    ReadOnly setting in VolumeMounts.'
                                    type: boolean
                                  targetWWNs:
                                    description: 'targetWWNs is Optional: FC target
                                    worldwide names (WWNs)'
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  wwids:
                                    description: 'wwids Optional: FC volume world wide
                                    identifiers (wwids) Either wwids or combination
                                    of targetWWNs and lun must be set, but not both
                                    simultaneously.'
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              flexVolume:
                                description: flexVolume represents a generic volume
                                  resource that is provisioned/attached using an exec
                                  based plugin.
                                properties:
                                  driver:
                                    description: driver is the name of the driver to
                                      use for this volume.
                                    type: string
                                  fsType:
                                    description: fsType is the filesystem type to mount.
                                      Must be a filesystem type supported by the host
                                      operating system. Ex. "ext4", "xfs", "ntfs". The
                                      default filesystem depends on FlexVolume script.
                                    type: string
                                  options:
                                    additionalProperties:
                                      type: string
                                    description: 'options is Optional: this field holds
                                    extra command options if any.'
                                    type: object
                                  readOnly:
                                    description: 'readOnly is Optional: defaults to
                                    false (read/write). ReadOnly here will force the
                                    ReadOnly setting in VolumeMounts.'
                                    type: boolean
                                  secretRef:
                                    description: 'secretRef is Optional: secretRef is
                                    reference to the secret object containing sensitive
                                    information to pass to the plugin scripts. This
                                    may be empty if no secret object is specified.
                                    If the secret object contains more than one secret,
                                    all secrets are passed to the plugin scripts.'
                                    properties:
                                      name:
                                        default: ""
                                        description: 'Name of the referent. This field
                                        is effectively required, but due to backwards
                                        compatibility is allowed to be empty. Instances
                                        of this type with an empty value here are
                                        almost certainly wrong. TODO: Add other useful
                                        fields. apiVersion, kind, uid? More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Drop `kubebuilder:default` when controller-gen
                                        doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - driver
                                type: object
                              flocker:
                                description: flocker represents a Flocker volume attached
                                  to a kubelet's host machine. This depends on the Flocker
                                  control service being running
                                properties:
                                  datasetName:
                                    description: datasetName is Name of the dataset
                                      stored as metadata -> name on the dataset for
                                      Flocker should be considered as deprecated
                                    type: string
                                  datasetUUID:
                                    description: datasetUUID is the UUID of the dataset.
                                      This is unique identifier of a Flocker dataset
                                    type: string
                                type: object
                              gcePersistentDisk:
                                description: 'gcePersistentDisk represents a GCE Disk
                                resource that is attached to a kubelet''s host machine
                                and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                properties:
                                  fsType:
                                    description: 'fsType is filesystem type of the volume
                                    that you want to mount. Tip: Ensure that the filesystem
                                    type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred
                                    to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                    TODO: how do we prevent errors in the filesystem
                                    from compromising the machine'
                                    type: string
                                  partition:
                                    description: 'partition is the partition in the
                                    volume that you want to mount. If omitted, the
                                    default is to mount by volume name. Examples:
                                    For volume /dev/sda1, you specify the partition
                                    as "1". Similarly, the volume partition for /dev/sda
                                    is "0" (or you can leave the property empty).
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                    format: int32
                                    type: integer
                                  pdName:
                                    description: 'pdName is unique name of the PD resource
                                    in GCE. Used to identify the disk in GCE. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                    type: string
                                  readOnly:
                                    description: 'readOnly here will force the ReadOnly
                                    setting in VolumeMounts. Defaults to false. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                    type: boolean
                                required:
                                  - pdName
                                type: object
                              gitRepo:
                                description: 'gitRepo represents a git repository at
                                a particular revision. DEPRECATED: GitRepo is deprecated.
                                To provision a container with a git repo, mount an
                                EmptyDir into an InitContainer that clones the repo
                                using git, then mount the EmptyDir into the Pod''s
                                container.'
                                properties:
                                  directory:
                                    description: directory is the target directory name.
                                      Must not contain or start with '..'.  If '.' is
                                      supplied, the volume directory will be the git
                                      repository.  Otherwise, if specified, the volume
                                      will contain the git repository in the subdirectory
                                      with the given name.
                                    type: string
                                  repository:
                                    description: repository is the URL
                                    type: string
                                  revision:
                                    description: revision is the commit hash for the
                                      specified revision.
                                    type: string
                                required:
                                  - repository
                                type: object
                              glusterfs:
                                description: 'glusterfs represents a Glusterfs mount
                                on the host that shares a pod''s lifetime. More info:
                                https://examples.k8s.io/volumes/glusterfs/README.md'
                                properties:
                                  endpoints:
                                    description: 'endpoints is the endpoint name that
                                    details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                    type: string
                                  path:
                                    description: 'path is the Glusterfs volume path.
                                    More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                    type: string
                                  readOnly:
                                    description: 'readOnly here will force the Glusterfs
                                    volume to be mounted with read-only permissions.
                                    Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                    type: boolean
                                required:
                                  - endpoints
                                  - path
                                type: object
                              hostPath:
                                description: 'hostPath represents a pre-existing file
                                or directory on the host machine that is directly
                                exposed to the container. This is generally used for
                                system agents or other privileged things that are
                                allowed to see the host machine. Most containers will
                                NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                --- TODO(jonesdl) We need to restrict who can use
                                host directory mounts and who can/can not mount host
                                directories as read/write.'
                                properties:
                                  path:
                                    description: 'path of the directory on the host.
                                    If the path is a symlink, it will follow the link
                                    to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                    type: string
                                  type:
                                    description: 'type for HostPath Volume Defaults
                                    to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                    type: string
                                required:
                                  - path
                                type: object
                              iscsi:
                                description: 'iscsi represents an ISCSI Disk resource
                                that is attached to a kubelet''s host machine and
                                then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                properties:
                                  chapAuthDiscovery:
                                    description: chapAuthDiscovery defines whether support
                                      iSCSI Discovery CHAP authentication
                                    type: boolean
                                  chapAuthSession:
                                    description: chapAuthSession defines whether support
                                      iSCSI Session CHAP authentication
                                    type: boolean
                                  fsType:
                                    description: 'fsType is the filesystem type of the
                                    volume that you want to mount. Tip: Ensure that
                                    the filesystem type is supported by the host operating
                                    system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                    inferred to be "ext4" if unspecified. More info:
                                    https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                    TODO: how do we prevent errors in the filesystem
                                    from compromising the machine'
                                    type: string
                                  initiatorName:
                                    description: initiatorName is the custom iSCSI Initiator
                                      Name. If initiatorName is specified with iscsiInterface
                                      simultaneously, new iSCSI interface <target portal>:<volume
                                      name> will be created for the connection.
                                    type: string
                                  iqn:
                                    description: iqn is the target iSCSI Qualified Name.
                                    type: string
                                  iscsiInterface:
                                    description: iscsiInterface is the interface Name
                                      that uses an iSCSI transport. Defaults to 'default'
                                      (tcp).
                                    type: string
                                  lun:
                                    description: lun represents iSCSI Target Lun number.
                                    format: int32
                                    type: integer
                                  portals:
                                    description: portals is the iSCSI Target Portal
                                      List. The portal is either an IP or ip_addr:port
                                      if the port is other than default (typically TCP
                                      ports 860 and 3260).
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  readOnly:
                                    description: readOnly here will force the ReadOnly
                                      setting in VolumeMounts. Defaults to false.
                                    type: boolean
                                  secretRef:
                                    description: secretRef is the CHAP Secret for iSCSI
                                      target and initiator authentication
                                    properties:
                                      name:
                                        default: ""
                                        description: 'Name of the referent. This field
                                        is effectively required, but due to backwards
                                        compatibility is allowed to be empty. Instances
                                        of this type with an empty value here are
                                        almost certainly wrong. TODO: Add other useful
                                        fields. apiVersion, kind, uid? More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Drop `kubebuilder:default` when controller-gen
                                        doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  targetPortal:
                                    description: targetPortal is iSCSI Target Portal.
                                      The Portal is either an IP or ip_addr:port if
                                      the port is other than default (typically TCP
                                      ports 860 and 3260).
                                    type: string
                                required:
                                  - iqn
                                  - lun
                                  - targetPortal
                                type: object
                              name:
                                description: 'name of the volume. Must be a DNS_LABEL
                                and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              nfs:
                                description: 'nfs represents an NFS mount on the host
                                that shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                properties:
                                  path:
                                    description: 'path that is exported by the NFS server.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                    type: string
                                  readOnly:
                                    description: 'readOnly here will force the NFS export
                                    to be mounted with read-only permissions. Defaults
                                    to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                    type: boolean
                                  server:
                                    description: 'server is the hostname or IP address
                                    of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                    type: string
                                required:
                                  - path
                                  - server
                                type: object
                              persistentVolumeClaim:
                                description: 'persistentVolumeClaimVolumeSource represents
                                a reference to a PersistentVolumeClaim in the same
                                namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                properties:
                                  claimName:
                                    description: 'claimName is the name of a PersistentVolumeClaim
                                    in the same namespace as the pod using this volume.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    type: string
                                  readOnly:
                                    description: readOnly Will force the ReadOnly setting
                                      in VolumeMounts. Default false.
                                    type: boolean
                                required:
                                  - claimName
                                type: object
                              photonPersistentDisk:
                                description: photonPersistentDisk represents a PhotonController
                                  persistent disk attached and mounted on kubelets host
                                  machine
                                properties:
                                  fsType:
                                    description: fsType is the filesystem type to mount.
                                      Must be a filesystem type supported by the host
                                      operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                      inferred to be "ext4" if unspecified.
                                    type: string
                                  pdID:
                                    description: pdID is the ID that identifies Photon
                                      Controller persistent disk
                                    type: string
                                required:
                                  - pdID
                                type: object
                              portworxVolume:
                                description: portworxVolume represents a portworx volume
                                  attached and mounted on kubelets host machine
                                properties:
                                  fsType:
                                    description: fSType represents the filesystem type
                                      to mount Must be a filesystem type supported by
                                      the host operating system. Ex. "ext4", "xfs".
                                      Implicitly inferred to be "ext4" if unspecified.
                                    type: string
                                  readOnly:
                                    description: readOnly defaults to false (read/write).
                                      ReadOnly here will force the ReadOnly setting
                                      in VolumeMounts.
                                    type: boolean
                                  volumeID:
                                    description: volumeID uniquely identifies a Portworx
                                      volume
                                    type: string
                                required:
                                  - volumeID
                                type: object
                              projected:
                                description: projected items for all in one resources
                                  secrets, configmaps, and downward API
                                properties:
                                  defaultMode:
                                    description: defaultMode are the mode bits used
                                      to set permissions on created files by default.
                                      Must be an octal value between 0000 and 0777 or
                                      a decimal value between 0 and 511. YAML accepts
                                      both octal and decimal values, JSON requires decimal
                                      values for mode bits. Directories within the path
                                      are not affected by this setting. This might be
                                      in conflict with other options that affect the
                                      file mode, like fsGroup, and the result can be
                                      other mode bits set.
                                    format: int32
                                    type: integer
                                  sources:
                                    description: sources is the list of volume projections
                                    items:
                                      description: Projection that may be projected
                                        along with other supported volume types
                                      properties:
                                        clusterTrustBundle:
                                          description: "ClusterTrustBundle allows a
                                          pod to access the `.spec.trustBundle` field
                                          of ClusterTrustBundle objects in an auto-updating
                                          file. \n Alpha, gated by the ClusterTrustBundleProjection
                                          feature gate. \n ClusterTrustBundle objects
                                          can either be selected by name, or by the
                                          combination of signer name and a label selector.
                                          \n Kubelet performs aggressive normalization
                                          of the PEM contents written into the pod
                                          filesystem.  Esoteric PEM features such
                                          as inter-block comments and block headers
                                          are stripped.  Certificates are deduplicated.
                                          The ordering of certificates within the
                                          file is arbitrary, and Kubelet may change
                                          the order over time."
                                          properties:
                                            labelSelector:
                                              description: Select all ClusterTrustBundles
                                                that match this label selector.  Only
                                                has effect if signerName is set.  Mutually-exclusive
                                                with name.  If unset, interpreted as
                                                "match nothing".  If set but empty,
                                                interpreted as "match everything".
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a
                                                    list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an array
                                                          of string values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty. If
                                                          the operator is Exists or
                                                          DoesNotExist, the values array
                                                          must be empty. This array
                                                          is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single {key,value}
                                                    in the matchLabels map is equivalent
                                                    to an element of matchExpressions,
                                                    whose key field is "key", the operator
                                                    is "In", and the values array contains
                                                    only "value". The requirements are
                                                    ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            name:
                                              description: Select a single ClusterTrustBundle
                                                by object name.  Mutually-exclusive
                                                with signerName and labelSelector.
                                              type: string
                                            optional:
                                              description: If true, don't block pod
                                                startup if the referenced ClusterTrustBundle(s)
                                                aren't available.  If using name, then
                                                the named ClusterTrustBundle is allowed
                                                not to exist.  If using signerName,
                                                then the combination of signerName and
                                                labelSelector is allowed to match zero
                                                ClusterTrustBundles.
                                              type: boolean
                                            path:
                                              description: Relative path from the volume
                                                root to write the bundle.
                                              type: string
                                            signerName:
                                              description: Select all ClusterTrustBundles
                                                that match this signer name. Mutually-exclusive
                                                with name.  The contents of all selected
                                                ClusterTrustBundles will be unified
                                                and deduplicated.
                                              type: string
                                          required:
                                            - path
                                          type: object
                                        configMap:
                                          description: configMap information about the
                                            configMap data to project
                                          properties:
                                            items:
                                              description: items if unspecified, each
                                                key-value pair in the Data field of
                                                the referenced ConfigMap will be projected
                                                into the volume as a file whose name
                                                is the key and content is the value.
                                                If specified, the listed keys will be
                                                projected into the specified paths,
                                                and unlisted keys will not be present.
                                                If a key is specified which is not present
                                                in the ConfigMap, the volume setup will
                                                error unless it is marked optional.
                                                Paths must be relative and may not contain
                                                the '..' path or start with '..'.
                                              items:
                                                description: Maps a string key to a
                                                  path within a volume.
                                                properties:
                                                  key:
                                                    description: key is the key to project.
                                                    type: string
                                                  mode:
                                                    description: 'mode is Optional:
                                                    mode bits used to set permissions
                                                    on this file. Must be an octal
                                                    value between 0000 and 0777 or
                                                    a decimal value between 0 and
                                                    511. YAML accepts both octal and
                                                    decimal values, JSON requires
                                                    decimal values for mode bits.
                                                    If not specified, the volume defaultMode
                                                    will be used. This might be in
                                                    conflict with other options that
                                                    affect the file mode, like fsGroup,
                                                    and the result can be other mode
                                                    bits set.'
                                                    format: int32
                                                    type: integer
                                                  path:
                                                    description: path is the relative
                                                      path of the file to map the key
                                                      to. May not be an absolute path.
                                                      May not contain the path element
                                                      '..'. May not start with the string
                                                      '..'.
                                                    type: string
                                                required:
                                                  - key
                                                  - path
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            name:
                                              default: ""
                                              description: 'Name of the referent. This
                                              field is effectively required, but due
                                              to backwards compatibility is allowed
                                              to be empty. Instances of this type
                                              with an empty value here are almost
                                              certainly wrong. TODO: Add other useful
                                              fields. apiVersion, kind, uid? More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Drop `kubebuilder:default` when
                                              controller-gen doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                              type: string
                                            optional:
                                              description: optional specify whether
                                                the ConfigMap or its keys must be defined
                                              type: boolean
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        downwardAPI:
                                          description: downwardAPI information about
                                            the downwardAPI data to project
                                          properties:
                                            items:
                                              description: Items is a list of DownwardAPIVolume
                                                file
                                              items:
                                                description: DownwardAPIVolumeFile represents
                                                  information to create the file containing
                                                  the pod field
                                                properties:
                                                  fieldRef:
                                                    description: 'Required: Selects
                                                    a field of the pod: only annotations,
                                                    labels, name, namespace and uid
                                                    are supported.'
                                                    properties:
                                                      apiVersion:
                                                        description: Version of the
                                                          schema the FieldPath is written
                                                          in terms of, defaults to "v1".
                                                        type: string
                                                      fieldPath:
                                                        description: Path of the field
                                                          to select in the specified
                                                          API version.
                                                        type: string
                                                    required:
                                                      - fieldPath
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  mode:
                                                    description: 'Optional: mode bits
                                                    used to set permissions on this
                                                    file, must be an octal value between
                                                    0000 and 0777 or a decimal value
                                                    between 0 and 511. YAML accepts
                                                    both octal and decimal values,
                                                    JSON requires decimal values for
                                                    mode bits. If not specified, the
                                                    volume defaultMode will be used.
                                                    This might be in conflict with
                                                    other options that affect the
                                                    file mode, like fsGroup, and the
                                                    result can be other mode bits
                                                    set.'
                                                    format: int32
                                                    type: integer
                                                  path:
                                                    description: 'Required: Path is  the
                                                    relative path name of the file
                                                    to be created. Must not be absolute
                                                    or contain the ''..'' path. Must
                                                    be utf-8 encoded. The first item
                                                    of the relative path must not
                                                    start with ''..'''
                                                    type: string
                                                  resourceFieldRef:
                                                    description: 'Selects a resource
                                                    of the container: only resources
                                                    limits and requests (limits.cpu,
                                                    limits.memory, requests.cpu and
                                                    requests.memory) are currently
                                                    supported.'
                                                    properties:
                                                      containerName:
                                                        description: 'Container name:
                                                        required for volumes, optional
                                                        for env vars'
                                                        type: string
                                                      divisor:
                                                        anyOf:
                                                          - type: integer
                                                          - type: string
                                                        description: Specifies the output
                                                          format of the exposed resources,
                                                          defaults to "1"
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      resource:
                                                        description: 'Required: resource
                                                        to select'
                                                        type: string
                                                    required:
                                                      - resource
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                required:
                                                  - path
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        secret:
                                          description: secret information about the
                                            secret data to project
                                          properties:
                                            items:
                                              description: items if unspecified, each
                                                key-value pair in the Data field of
                                                the referenced Secret will be projected
                                                into the volume as a file whose name
                                                is the key and content is the value.
                                                If specified, the listed keys will be
                                                projected into the specified paths,
                                                and unlisted keys will not be present.
                                                If a key is specified which is not present
                                                in the Secret, the volume setup will
                                                error unless it is marked optional.
                                                Paths must be relative and may not contain
                                                the '..' path or start with '..'.
                                              items:
                                                description: Maps a string key to a
                                                  path within a volume.
                                                properties:
                                                  key:
                                                    description: key is the key to project.
                                                    type: string
                                                  mode:
                                                    description: 'mode is Optional:
                                                    mode bits used to set permissions
                                                    on this file. Must be an octal
                                                    value between 0000 and 0777 or
                                                    a decimal value between 0 and
                                                    511. YAML accepts both octal and
                                                    decimal values, JSON requires
                                                    decimal values for mode bits.
                                                    If not specified, the volume defaultMode
                                                    will be used. This might be in
                                                    conflict with other options that
                                                    affect the file mode, like fsGroup,
                                                    and the result can be other mode
                                                    bits set.'
                                                    format: int32
                                                    type: integer
                                                  path:
                                                    description: path is the relative
                                                      path of the file to map the key
                                                      to. May not be an absolute path.
                                                      May not contain the path element
                                                      '..'. May not start with the string
                                                      '..'.
                                                    type: string
                                                required:
                                                  - key
                                                  - path
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            name:
                                              default: ""
                                              description: 'Name of the referent. This
                                              field is effectively required, but due
                                              to backwards compatibility is allowed
                                              to be empty. Instances of this type
                                              with an empty value here are almost
                                              certainly wrong. TODO: Add other useful
                                              fields. apiVersion, kind, uid? More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Drop `kubebuilder:default` when
                                              controller-gen doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                              type: string
                                            optional:
                                              description: optional field specify whether
                                                the Secret or its key must be defined
                                              type: boolean
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        serviceAccountToken:
                                          description: serviceAccountToken is information
                                            about the serviceAccountToken data to project
                                          properties:
                                            audience:
                                              description: audience is the intended
                                                audience of the token. A recipient of
                                                a token must identify itself with an
                                                identifier specified in the audience
                                                of the token, and otherwise should reject
                                                the token. The audience defaults to
                                                the identifier of the apiserver.
                                              type: string
                                            expirationSeconds:
                                              description: expirationSeconds is the
                                                requested duration of validity of the
                                                service account token. As the token
                                                approaches expiration, the kubelet volume
                                                plugin will proactively rotate the service
                                                account token. The kubelet will start
                                                trying to rotate the token if the token
                                                is older than 80 percent of its time
                                                to live or if the token is older than
                                                24 hours.Defaults to 1 hour and must
                                                be at least 10 minutes.
                                              format: int64
                                              type: integer
                                            path:
                                              description: path is the path relative
                                                to the mount point of the file to project
                                                the token into.
                                              type: string
                                          required:
                                            - path
                                          type: object
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              quobyte:
                                description: quobyte represents a Quobyte mount on the
                                  host that shares a pod's lifetime
                                properties:
                                  group:
                                    description: group to map volume access to Default
                                      is no group
                                    type: string
                                  readOnly:
                                    description: readOnly here will force the Quobyte
                                      volume to be mounted with read-only permissions.
                                      Defaults to false.
                                    type: boolean
                                  registry:
                                    description: registry represents a single or multiple
                                      Quobyte Registry services specified as a string
                                      as host:port pair (multiple entries are separated
                                      with commas) which acts as the central registry
                                      for volumes
                                    type: string
                                  tenant:
                                    description: tenant owning the given Quobyte volume
                                      in the Backend Used with dynamically provisioned
                                      Quobyte volumes, value is set by the plugin
                                    type: string
                                  user:
                                    description: user to map volume access to Defaults
                                      to serivceaccount user
                                    type: string
                                  volume:
                                    description: volume is a string that references
                                      an already created Quobyte volume by name.
                                    type: string
                                required:
                                  - registry
                                  - volume
                                type: object
                              rbd:
                                description: 'rbd represents a Rados Block Device mount
                                on the host that shares a pod''s lifetime. More info:
                                https://examples.k8s.io/volumes/rbd/README.md'
                                properties:
                                  fsType:
                                    description: 'fsType is the filesystem type of the
                                    volume that you want to mount. Tip: Ensure that
                                    the filesystem type is supported by the host operating
                                    system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                    inferred to be "ext4" if unspecified. More info:
                                    https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                    TODO: how do we prevent errors in the filesystem
                                    from compromising the machine'
                                    type: string
                                  image:
                                    description: 'image is the rados image name. More
                                    info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: string
                                  keyring:
                                    description: 'keyring is the path to key ring for
                                    RBDUser. Default is /etc/ceph/keyring. More info:
                                    https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: string
                                  monitors:
                                    description: 'monitors is a collection of Ceph monitors.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  pool:
                                    description: 'pool is the rados pool name. Default
                                    is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: string
                                  readOnly:
                                    description: 'readOnly here will force the ReadOnly
                                    setting in VolumeMounts. Defaults to false. More
                                    info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: boolean
                                  secretRef:
                                    description: 'secretRef is name of the authentication
                                    secret for RBDUser. If provided overrides keyring.
                                    Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    properties:
                                      name:
                                        default: ""
                                        description: 'Name of the referent. This field
                                        is effectively required, but due to backwards
                                        compatibility is allowed to be empty. Instances
                                        of this type with an empty value here are
                                        almost certainly wrong. TODO: Add other useful
                                        fields. apiVersion, kind, uid? More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Drop `kubebuilder:default` when controller-gen
                                        doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  user:
                                    description: 'user is the rados user name. Default
                                    is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: string
                                required:
                                  - image
                                  - monitors
                                type: object
                              scaleIO:
                                description: scaleIO represents a ScaleIO persistent
                                  volume attached and mounted on Kubernetes nodes.
                                properties:
                                  fsType:
                                    description: fsType is the filesystem type to mount.
                                      Must be a filesystem type supported by the host
                                      operating system. Ex. "ext4", "xfs", "ntfs". Default
                                      is "xfs".
                                    type: string
                                  gateway:
                                    description: gateway is the host address of the
                                      ScaleIO API Gateway.
                                    type: string
                                  protectionDomain:
                                    description: protectionDomain is the name of the
                                      ScaleIO Protection Domain for the configured storage.
                                    type: string
                                  readOnly:
                                    description: readOnly Defaults to false (read/write).
                                      ReadOnly here will force the ReadOnly setting
                                      in VolumeMounts.
                                    type: boolean
                                  secretRef:
                                    description: secretRef references to the secret
                                      for ScaleIO user and other sensitive information.
                                      If this is not provided, Login operation will
                                      fail.
                                    properties:
                                      name:
                                        default: ""
                                        description: 'Name of the referent. This field
                                        is effectively required, but due to backwards
                                        compatibility is allowed to be empty. Instances
                                        of this type with an empty value here are
                                        almost certainly wrong. TODO: Add other useful
                                        fields. apiVersion, kind, uid? More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Drop `kubebuilder:default` when controller-gen
                                        doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  sslEnabled:
                                    description: sslEnabled Flag enable/disable SSL
                                      communication with Gateway, default false
                                    type: boolean
                                  storageMode:
                                    description: storageMode indicates whether the storage
                                      for a volume should be ThickProvisioned or ThinProvisioned.
                                      Default is ThinProvisioned.
                                    type: string
                                  storagePool:
                                    description: storagePool is the ScaleIO Storage
                                      Pool associated with the protection domain.
                                    type: string
                                  system:
                                    description: system is the name of the storage system
                                      as configured in ScaleIO.
                                    type: string
                                  volumeName:
                                    description: volumeName is the name of a volume
                                      already created in the ScaleIO system that is
                                      associated with this volume source.
                                    type: string
                                required:
                                  - gateway
                                  - secretRef
                                  - system
                                type: object
                              secret:
                                description: 'secret represents a secret that should
                                populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                properties:
                                  defaultMode:
                                    description: 'defaultMode is Optional: mode bits
                                    used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or
                                    a decimal value between 0 and 511. YAML accepts
                                    both octal and decimal values, JSON requires decimal
                                    values for mode bits. Defaults to 0644. Directories
                                    within the path are not affected by this setting.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                    format: int32
                                    type: integer
                                  items:
                                    description: items If unspecified, each key-value
                                      pair in the Data field of the referenced Secret
                                      will be projected into the volume as a file whose
                                      name is the key and content is the value. If specified,
                                      the listed keys will be projected into the specified
                                      paths, and unlisted keys will not be present.
                                      If a key is specified which is not present in
                                      the Secret, the volume setup will error unless
                                      it is marked optional. Paths must be relative
                                      and may not contain the '..' path or start with
                                      '..'.
                                    items:
                                      description: Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: key is the key to project.
                                          type: string
                                        mode:
                                          description: 'mode is Optional: mode bits
                                          used to set permissions on this file. Must
                                          be an octal value between 0000 and 0777
                                          or a decimal value between 0 and 511. YAML
                                          accepts both octal and decimal values, JSON
                                          requires decimal values for mode bits. If
                                          not specified, the volume defaultMode will
                                          be used. This might be in conflict with
                                          other options that affect the file mode,
                                          like fsGroup, and the result can be other
                                          mode bits set.'
                                          format: int32
                                          type: integer
                                        path:
                                          description: path is the relative path of
                                            the file to map the key to. May not be an
                                            absolute path. May not contain the path
                                            element '..'. May not start with the string
                                            '..'.
                                          type: string
                                      required:
                                        - key
                                        - path
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  optional:
                                    description: optional field specify whether the
                                      Secret or its keys must be defined
                                    type: boolean
                                  secretName:
                                    description: 'secretName is the name of the secret
                                    in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                    type: string
                                type: object
                              storageos:
                                description: storageOS represents a StorageOS volume
                                  attached and mounted on Kubernetes nodes.
                                properties:
                                  fsType:
                                    description: fsType is the filesystem type to mount.
                                      Must be a filesystem type supported by the host
                                      operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                      inferred to be "ext4" if unspecified.
                                    type: string
                                  readOnly:
                                    description: readOnly defaults to false (read/write).
                                      ReadOnly here will force the ReadOnly setting
                                      in VolumeMounts.
                                    type: boolean
                                  secretRef:
                                    description: secretRef specifies the secret to use
                                      for obtaining the StorageOS API credentials.  If
                                      not specified, default values will be attempted.
                                    properties:
                                      name:
                                        default: ""
                                        description: 'Name of the referent. This field
                                        is effectively required, but due to backwards
                                        compatibility is allowed to be empty. Instances
                                        of this type with an empty value here are
                                        almost certainly wrong. TODO: Add other useful
                                        fields. apiVersion, kind, uid? More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Drop `kubebuilder:default` when controller-gen
                                        doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  volumeName:
                                    description: volumeName is the human-readable name
                                      of the StorageOS volume.  Volume names are only
                                      unique within a namespace.
                                    type: string
                                  volumeNamespace:
                                    description: volumeNamespace specifies the scope
                                      of the volume within StorageOS.  If no namespace
                                      is specified then the Pod's namespace will be
                                      used.  This allows the Kubernetes name scoping
                                      to be mirrored within StorageOS for tighter integration.
                                      Set VolumeName to any name to override the default
                                      behaviour. Set to "default" if you are not using
                                      namespaces within StorageOS. Namespaces that do
                                      not pre-exist within StorageOS will be created.
                                    type: string
                                type: object
                              vsphereVolume:
                                description: vsphereVolume represents a vSphere volume
                                  attached and mounted on kubelets host machine
                                properties:
                                  fsType:
                                    description: fsType is filesystem type to mount.
                                      Must be a filesystem type supported by the host
                                      operating system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                      inferred to be "ext4" if unspecified.
                                    type: string
                                  storagePolicyID:
                                    description: storagePolicyID is the storage Policy
                                      Based Management (SPBM) profile ID associated
                                      with the StoragePolicyName.
                                    type: string
                                  storagePolicyName:
                                    description: storagePolicyName is the storage Policy
                                      Based Management (SPBM) profile name.
                                    type: string
                                  volumePath:
                                    description: volumePath is the path that identifies
                                      vSphere volume vmdk
                                    type: string
                                required:
                                  - volumePath
                                type: object
                            required:
                              - name
                            type: object
                          type: array
                      type: object
                    telemetry:
                      description: Telemetry contains custom configuration for storage
                        driver telemetry. This is optional.
                      properties:
                        enabled:
                          description: Enabled decides whether telemetry needs to be
                            enabled
                          type: boolean
                        image:
                          description: Image is docker image of the telemetry container
                          type: string
                        logUploaderImage:
                          description: LogUploaderImage is docker image of the log-upload-service
                            container.
                          type: string
                      type: object
                  type: object
                network:
                  description: Network is to specify network configuration for the selected
                    nodes, similar to the one [specified at cluster level](#network-configuration).
                    If this network configuration is empty, then cluster level values
                    are used.
                  properties:
                    dataInterface:
                      description: DataInterface is the network interface used by driver
                        for data traffic
                      type: string
                    mgmtInterface:
                      description: MgmtInterface is the network interface used by Portworx
                        for control plane traffic
                      type: string
                  type: object
                nodes:
                  description: Nodes node level configurations that will override the
                    ones at cluster level. These configurations can be grouped based
                    on label selectors.
                  items:
                    description: NodeSpec is the spec used to define node level configuration.
                      Values here will override the ones present at cluster-level for
                      nodes matching the selector.
                    properties:
                      cloudStorage:
                        description: CloudStorage details of storage in cloud environment
                          for the nodegroup. This will override the cluster-level cloud
                          storage configuration.
                        properties:
                          deviceSpecs:
                            description: DeviceSpecs list of storage device specs. A
                              cloud storage device will be created for every spec in
                              the list. The specs will be applied to all nodes in the
                              cluster that match the node group selector. The number
                              of nodes that will come up with storage are constrained
                              by maxStorageNodes, maxStorageNodesPerZone and maxStorageNodesPerZonePerNodeGroup.
                            items:
                              type: string
                            type: array
                          journalDeviceSpec:
                            description: JournalDeviceSpec specifies the cloud device
                              Portworx uses for journaling.
                            type: string
                          kvdbDeviceSpec:
                            description: KvdbDeviceSpec specifies the cloud device Portworx
                              uses for an internal KVDB.
                            type: string
                          maxStorageNodesPerZonePerNodeGroup:
                            description: MaxStorageNodesPerZonePerNodeGroup maximum
                              nodes in every zone in every node group that will have
                              storage in the cluster.
                            format: int32
                            minimum: 0
                            type: integer
                          systemMetadataDeviceSpec:
                            description: SystemMdDeviceSpec is the device spec for the
                              metadata device. This device will be used to store system
                              metadata by the driver.
                            type: string
                        type: object
                      env:
                        description: Env is a list of [Kubernetes like environment variables](https://github.com/kubernetes/api/blob/master/core/v1/types.go#L1826).
                          Similar to how environment variables are provided in Kubernetes,
                          you can directly provide values to Portworx or import them
                          from a source like a Secret, ConfigMap, etc.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be
                                a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                              using the previously defined environment variables in
                              the container and any service environment variables.
                              If a variable cannot be resolved, the reference in the
                              input string will be unchanged. Double $$ are reduced
                              to a single $, which allows for escaping the $(VAR_NAME)
                              syntax: i.e. "$$(VAR_NAME)" will produce the string
                              literal "$(VAR_NAME)". Escaped references will never
                              be expanded, regardless of whether the variable exists
                              or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: 'Name of the referent. This field
                                      is effectively required, but due to backwards
                                      compatibility is allowed to be empty. Instances
                                      of this type with an empty value here are almost
                                      certainly wrong. TODO: Add other useful fields.
                                      apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Drop `kubebuilder:default` when controller-gen
                                      doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                  metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                  `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                  spec.serviceAccountName, status.hostIP, status.podIP,
                                  status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                    - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                  only resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage, requests.cpu,
                                  requests.memory and requests.ephemeral-storage)
                                  are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                      optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                    - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: 'Name of the referent. This field
                                      is effectively required, but due to backwards
                                      compatibility is allowed to be empty. Instances
                                      of this type with an empty value here are almost
                                      certainly wrong. TODO: Add other useful fields.
                                      apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Drop `kubebuilder:default` when controller-gen
                                      doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                            - name
                          type: object
                        type: array
                      network:
                        description: Network is to specify network configuration for
                          the selected nodes, similar to the one [specified at cluster
                          level](#network-configuration). If this network configuration
                          is empty, then cluster level values are used.
                        properties:
                          dataInterface:
                            description: DataInterface is the network interface used
                              by driver for data traffic
                            type: string
                          mgmtInterface:
                            description: MgmtInterface is the network interface used
                              by Portworx for control plane traffic
                            type: string
                        type: object
                      runtimeOptions:
                        additionalProperties:
                          type: string
                        description: RuntimeOpts is acollection of key-value pairs that
                          overwrites the runtime options.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      selector:
                        description: Selector for the node(s) to which the configuration
                          in this section will be applied.
                        properties:
                          labelSelector:
                            description: LabelSelector is The [Kubernetes style label
                              selector](https://github.com/kubernetes/apimachinery/blob/master/pkg/apis/meta/v1/types.go)
                              for nodes to which this configuration will be applied.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be empty.
                                        This array is replaced during a strategic merge
                                        patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                    - key
                                    - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          nodeName:
                            description: NodeName is the name of Kubernetes node that
                              it to be selected. Node name takes precedence over `selector.labelSelector`.
                            type: string
                        type: object
                      storage:
                        description: Storage specifies storage configuration for the
                          selected nodes, similar to the one [specified at cluster level](#storage-configuration).
                          If some of the config is left empty, the cluster level storage
                          values are passed to the nodes. If you don't want to use a
                          cluster level value and set the field to empty, then explicitly
                          set an empty value for it so no value is passed to the nodes.
                          For instance, set `spec.nodes[0].storage.kvdbDevice:""`, to
                          prevent using the KVDB device for the selected nodes.
                        properties:
                          cacheDevices:
                            description: CacheDevices is list of cache devices Portworx
                              should use
                            items:
                              type: string
                            type: array
                          devices:
                            description: Devices list of devices to be used by storage
                              driver
                            items:
                              type: string
                            type: array
                          forceUseDisks:
                            description: ForceUseDisks use the drives even if there
                              is file system present on it. Note that the drives may
                              be wiped before using. Default value is `false`.
                            type: boolean
                          journalDevice:
                            description: JournalDevice device Portworx uses for journaling
                            type: string
                          kvdbDevice:
                            description: KvdbDevice device Portworx uses to store internal
                              kvdb data
                            type: string
                          systemMetadataDevice:
                            description: SystemMdDevice device that will be used to
                              store system metadata.  For better performance, specify
                              a system metadata device when using Portworx with the
                              internal KVDB.
                            type: string
                          useAll:
                            description: UseAll use all available, unformatted, unpartioned
                              devices. This will be ignored if Devices is not empty.
                              Default value is `true`.
                            type: boolean
                          useAllWithPartitions:
                            description: UseAllWithPartitions use all available unformatted
                              devices including partitions. This will be ignored if
                              Devices is not empty. Default value is `false`.
                            type: boolean
                        type: object
                    type: object
                  type: array
                placement:
                  description: Placement configuration for the storage cluster pods
                  properties:
                    nodeAffinity:
                      description: NodeAffinity is used to restrict Portwox on certain
                        nodes. It works similarly to the [Kubernetes node affinity](https://github.com/kubernetes/api/blob/master/core/v1/types.go#L2692)
                        feature.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods to
                            nodes that satisfy the affinity expressions specified by
                            this field, but it may choose a node that violates one or
                            more of the expressions. The node that is most preferred
                            is the one with the greatest sum of weights, i.e. for each
                            node that meets all of the scheduling requirements (resource
                            request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements of
                            this field and adding "weight" to the sum if the node matches
                            the corresponding matchExpressions; the node(s) with the
                            highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects (i.e.
                              is also a no-op).
                            properties:
                              preference:
                                description: A node selector term, associated with the
                                  corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is a
                                        selector that contains values, a key, and an
                                        operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values array
                                            must be empty. If the operator is Gt or
                                            Lt, the values array must have a single
                                            element, which will be interpreted as an
                                            integer. This array is replaced during a
                                            strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is a
                                        selector that contains values, a key, and an
                                        operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values array
                                            must be empty. If the operator is Gt or
                                            Lt, the values array must have a single
                                            element, which will be interpreted as an
                                            integer. This array is replaced during a
                                            strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                                x-kubernetes-map-type: atomic
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                              - preference
                              - weight
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not be
                            scheduled onto the node. If the affinity requirements specified
                            by this field cease to be met at some point during pod execution
                            (e.g. due to an update), the system may or may not try to
                            eventually evict the pod from its node.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed. The
                                  TopologySelectorTerm type implements a subset of the
                                  NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is a
                                        selector that contains values, a key, and an
                                        operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values array
                                            must be empty. If the operator is Gt or
                                            Lt, the values array must have a single
                                            element, which will be interpreted as an
                                            integer. This array is replaced during a
                                            strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is a
                                        selector that contains values, a key, and an
                                        operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values. If
                                            the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values array
                                            must be empty. If the operator is Gt or
                                            Lt, the values array must have a single
                                            element, which will be interpreted as an
                                            integer. This array is replaced during a
                                            strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                                x-kubernetes-map-type: atomic
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                            - nodeSelectorTerms
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    tolerations:
                      description: Tolerations specifies a list of tolerations that
                        will be applied to Portworx pods so that they can run on nodes
                        with matching taints.
                      items:
                        description: The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified, allowed
                              values are NoSchedule, PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration applies
                              to. Empty means match all taint keys. If the key is empty,
                              operator must be Exists; this combination means to match
                              all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship to
                              the value. Valid operators are Exists and Equal. Defaults
                              to Equal. Exists is equivalent to wildcard for value,
                              so that a pod can tolerate all taints of a particular
                              category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the taint
                              forever (do not evict). Zero and negative values will
                              be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                  type: object
                portworxApi:
                  description: PortworxAPI is the spec to configure the Portworx API
                    component.
                  properties:
                    resources:
                      description: Resources for portworx-api container, e.g. CPU and
                        memory requests or limits
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this field
                                  is used. It makes that resource available inside a
                                  container.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                  type: object
                preserveFullCustomImageRegistry:
                  description: PreserveFullCustomImageRegistry when set to true stops
                    part of the image tag from being swallowed when setting a customImageRegistry
                    with a / in it. When set to false using a customImageRegistry of
                    `example.io/public` and an image of `portworx/oci-monitor` the full
                    image path is `example.io/public/oci-monitor`, setting to true gives
                    you `example.io/public/portworx/oci-monitor`. Defaults to false
                  type: boolean
                priorityClassName:
                  description: PriorityClassName to be passed to Podspec of px pods
                    for it to be scheduled accordingly
                  type: string
                resources:
                  description: Resource requirements for portworx container in  a storage
                    cluster pod, e.g. CPU and memory requests or limits
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        properties:
                          name:
                            description: Name must match the name of one entry in pod.spec.resourceClaims
                              of the Pod where this field is used. It makes that resource
                              available inside a container.
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      type: object
                  type: object
                revisionHistoryLimit:
                  description: RevisionHistoryLimit is the number of old history to
                    retain to allow rollback. This is a pointer to distinguish between
                    explicit zero and not specified. Defaults to 10.
                  format: int32
                  type: integer
                runtimeOptions:
                  additionalProperties:
                    type: string
                  description: RuntimeOpts is acollection of key-value pairs that overwrites
                    the runtime options.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                secretsProvider:
                  description: SecretsProvider is the name of secret provider Portworx
                    uses to store your credentials. To use features like cloud snapshots
                    or volume encryption, you must configure a secret store provider.
                    Refer to the [Secret store management page](/portworx-enterprise/operations/key-management)for
                    more details.
                  type: string
                security:
                  description: Security configurations for specifying PX-Security configurations.
                    Refer to the [Operator Security page](/portworx-enterprise/operations/operate-kubernetes/authorization/enable)
                    for more details.
                  properties:
                    auth:
                      description: Auth is used to configure the authorization for a
                        RBAC enabled storage cluster.
                      properties:
                        guestAccess:
                          description: GuestAccess determines how the guest role will
                            be updated in your cluster. The options are Enabled, Disabled,
                            or Managed. Managed will cause the operator to ignore updating
                            the system.guest role. Enabled and Disabled will allow or
                            disable guest role access, respectively. Default value is
                            `Enabled`.
                          type: string
                        selfSigned:
                          description: SelfSigned is used to configure self-signed authentication
                            for a storage cluster.
                          properties:
                            issuer:
                              description: Issuer is  issuer name to be used when configuring
                                PX-Security. This field maps to the `PORTWORX_AUTH_JWT_ISSUER`
                                environment variable in the Portworx Daemonset. Default
                                value is `operator.portworx.io`.
                              type: string
                            sharedSecret:
                              description: SharedSecret is the name of the Kubernetes
                                secret name for retrieving and storing your shared secret.
                                This field can be used to add a pre-existing shared
                                secret or for customizing which secret name the operator
                                will use for its auto-generated shared secret key. This
                                field maps to the `PORTWORX_AUTH_JWT_SHAREDSECRET` environment
                                variable in the Portworx Daemonset. Default value is
                                `px-shared-secret`.
                              type: string
                            tokenLifetime:
                              description: TokenLifetime is the length operator-generated
                                tokens will be alive until being refreshed. Default
                                value is `24h`.
                              type: string
                          type: object
                      type: object
                    enabled:
                      description: Enabled flag indicating whether security features
                        need to be enabled for the storage cluster. Default value is
                        `false`.
                      type: boolean
                  type: object
                startPort:
                  description: StartPort is the starting port in the range of ports
                    used by the cluster.
                  format: int32
                  minimum: 0
                  type: integer
                storage:
                  description: Storage specifies storage configuration for the selected
                    nodes, similar to the one [specified at cluster level](#storage-configuration).
                    If some of the config is left empty, the cluster level storage values
                    are passed to the nodes. If you don't want to use a cluster level
                    value and set the field to empty, then explicitly set an empty value
                    for it so no value is passed to the nodes. For instance, set `spec.nodes[0].storage.kvdbDevice:""`,
                    to prevent using the KVDB device for the selected nodes.
                  properties:
                    cacheDevices:
                      description: CacheDevices is list of cache devices Portworx should
                        use
                      items:
                        type: string
                      type: array
                    devices:
                      description: Devices list of devices to be used by storage driver
                      items:
                        type: string
                      type: array
                    forceUseDisks:
                      description: ForceUseDisks use the drives even if there is file
                        system present on it. Note that the drives may be wiped before
                        using. Default value is `false`.
                      type: boolean
                    journalDevice:
                      description: JournalDevice device Portworx uses for journaling
                      type: string
                    kvdbDevice:
                      description: KvdbDevice device Portworx uses to store internal
                        kvdb data
                      type: string
                    systemMetadataDevice:
                      description: SystemMdDevice device that will be used to store
                        system metadata.  For better performance, specify a system metadata
                        device when using Portworx with the internal KVDB.
                      type: string
                    useAll:
                      description: UseAll use all available, unformatted, unpartioned
                        devices. This will be ignored if Devices is not empty. Default
                        value is `true`.
                      type: boolean
                    useAllWithPartitions:
                      description: UseAllWithPartitions use all available unformatted
                        devices including partitions. This will be ignored if Devices
                        is not empty. Default value is `false`.
                      type: boolean
                  type: object
                stork:
                  description: Stork contains STORK related parameters. For more information
                    about STORK, check https://github.com/libopenstorage/stork
                  properties:
                    args:
                      additionalProperties:
                        type: string
                      description: Args is a map of key-value pairs that overrides the
                        default Stork arguments or adds new arguments.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    enabled:
                      description: Enabled decides whether STORK needs to be enabled.
                        Default value is `true`.
                      type: boolean
                    env:
                      description: Env is a list of [Kubernetes like environment variables](https://github.com/kubernetes/api/blob/master/core/v1/types.go#L1826)
                        passed to Stork.
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its
                                      key must be defined
                                    type: boolean
                                required:
                                  - key
                                type: object
                                x-kubernetes-map-type: atomic
                              fieldRef:
                                description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                  - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              resourceFieldRef:
                                description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                    optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                  - resource
                                type: object
                                x-kubernetes-map-type: atomic
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key
                                      must be defined
                                    type: boolean
                                required:
                                  - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                        required:
                          - name
                        type: object
                      type: array
                    hostNetwork:
                      description: HostNetwork if set, will use host's network for stork
                        pods
                      type: boolean
                    image:
                      description: Image is docker image of the STORK container
                      type: string
                    lockImage:
                      description: 'LockImage is a boolean indicating if the stork image
                      needs to be locked to the given image. If the image is not locked,
                      it can be updated by the driver during upgrades. DEPRECATED:
                      This is no longer needed to lock an image. The new behavior
                      is to use the image as it is, if present, else use a default
                      image.'
                      type: boolean
                    resources:
                      description: Resources for stork and stork-scheduler pods, e.g.
                        CPU and memory requests or limits
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this field
                                  is used. It makes that resource available inside a
                                  container.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                    volumes:
                      description: Volumes is a list of extra volumes to used by stork.
                        The schema is similar to the [top-level volumes](#volume-configuration).
                      items:
                        description: VolumeSpec describes a volume that needs to be
                          mounted inside a container
                        properties:
                          awsElasticBlockStore:
                            description: 'awsElasticBlockStore represents an AWS Disk
                            resource that is attached to a kubelet''s host machine
                            and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              partition:
                                description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty).'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'readOnly value true will force the readOnly
                                setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: boolean
                              volumeID:
                                description: 'volumeID is unique ID of the persistent
                                disk resource in AWS (Amazon EBS volume). More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: string
                            required:
                              - volumeID
                            type: object
                          azureDisk:
                            description: azureDisk represents an Azure Data Disk mount
                              on the host and bind mount to the pod.
                            properties:
                              cachingMode:
                                description: 'cachingMode is the Host Caching mode:
                                None, Read Only, Read Write.'
                                type: string
                              diskName:
                                description: diskName is the Name of the data disk in
                                  the blob storage
                                type: string
                              diskURI:
                                description: diskURI is the URI of data disk in the
                                  blob storage
                                type: string
                              fsType:
                                description: fsType is Filesystem type to mount. Must
                                  be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              kind:
                                description: 'kind expected values are Shared: multiple
                                blob disks per storage account  Dedicated: single
                                blob disk per storage account  Managed: azure managed
                                data disk (only in managed availability set). defaults
                                to shared'
                                type: string
                              readOnly:
                                description: readOnly Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                            required:
                              - diskName
                              - diskURI
                            type: object
                          azureFile:
                            description: azureFile represents an Azure File Service
                              mount on the host and bind mount to the pod.
                            properties:
                              readOnly:
                                description: readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretName:
                                description: secretName is the  name of secret that
                                  contains Azure Storage Account Name and Key
                                type: string
                              shareName:
                                description: shareName is the azure share Name
                                type: string
                            required:
                              - secretName
                              - shareName
                            type: object
                          cephfs:
                            description: cephFS represents a Ceph FS mount on the host
                              that shares a pod's lifetime
                            properties:
                              monitors:
                                description: 'monitors is Required: Monitors is a collection
                                of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              path:
                                description: 'path is Optional: Used as the mounted
                                root, rather than the full Ceph tree, default is /'
                                type: string
                              readOnly:
                                description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: boolean
                              secretFile:
                                description: 'secretFile is Optional: SecretFile is
                                the path to key ring for User, default is /etc/ceph/user.secret
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                              secretRef:
                                description: 'secretRef is Optional: SecretRef is reference
                                to the authentication secret for User, default is
                                empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              user:
                                description: 'user is optional: User is the rados user
                                name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                            required:
                              - monitors
                            type: object
                          cinder:
                            description: 'cinder represents a cinder volume attached
                            and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                              readOnly:
                                description: 'readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: boolean
                              secretRef:
                                description: 'secretRef is optional: points to a secret
                                object containing parameters used to connect to OpenStack.'
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              volumeID:
                                description: 'volumeID used to identify the volume in
                                cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                            required:
                              - volumeID
                            type: object
                          configMap:
                            description: configMap represents a configMap that should
                              populate this volume
                            properties:
                              defaultMode:
                                description: 'defaultMode is optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                                format: int32
                                type: integer
                              items:
                                description: items if unspecified, each key-value pair
                                  in the Data field of the referenced ConfigMap will
                                  be projected into the volume as a file whose name
                                  is the key and content is the value. If specified,
                                  the listed keys will be projected into the specified
                                  paths, and unlisted keys will not be present. If a
                                  key is specified which is not present in the ConfigMap,
                                  the volume setup will error unless it is marked optional.
                                  Paths must be relative and may not contain the '..'
                                  path or start with '..'.
                                items:
                                  description: Maps a string key to a path within a
                                    volume.
                                  properties:
                                    key:
                                      description: key is the key to project.
                                      type: string
                                    mode:
                                      description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: path is the relative path of the
                                        file to map the key to. May not be an absolute
                                        path. May not contain the path element '..'.
                                        May not start with the string '..'.
                                      type: string
                                  required:
                                    - key
                                    - path
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                              optional:
                                description: optional specify whether the ConfigMap
                                  or its keys must be defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                          csi:
                            description: csi (Container Storage Interface) represents
                              ephemeral storage that is handled by certain external
                              CSI drivers (Beta feature).
                            properties:
                              driver:
                                description: driver is the name of the CSI driver that
                                  handles this volume. Consult with your admin for the
                                  correct name as registered in the cluster.
                                type: string
                              fsType:
                                description: fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                  If not provided, the empty value is passed to the
                                  associated CSI driver which will determine the default
                                  filesystem to apply.
                                type: string
                              nodePublishSecretRef:
                                description: nodePublishSecretRef is a reference to
                                  the secret object containing sensitive information
                                  to pass to the CSI driver to complete the CSI NodePublishVolume
                                  and NodeUnpublishVolume calls. This field is optional,
                                  and  may be empty if no secret is required. If the
                                  secret object contains more than one secret, all secret
                                  references are passed.
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              readOnly:
                                description: readOnly specifies a read-only configuration
                                  for the volume. Defaults to false (read/write).
                                type: boolean
                              volumeAttributes:
                                additionalProperties:
                                  type: string
                                description: volumeAttributes stores driver-specific
                                  properties that are passed to the CSI driver. Consult
                                  your driver's documentation for supported values.
                                type: object
                            required:
                              - driver
                            type: object
                          downwardAPI:
                            description: downwardAPI represents downward API about the
                              pod that should populate this volume
                            properties:
                              defaultMode:
                                description: 'Optional: mode bits to use on created
                                files by default. Must be a Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                                format: int32
                                type: integer
                              items:
                                description: Items is a list of downward API volume
                                  file
                                items:
                                  description: DownwardAPIVolumeFile represents information
                                    to create the file containing the pod field
                                  properties:
                                    fieldRef:
                                      description: 'Required: Selects a field of the
                                      pod: only annotations, labels, name, namespace
                                      and uid are supported.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in
                                            the specified API version.
                                          type: string
                                      required:
                                        - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    mode:
                                      description: 'Optional: mode bits used to set
                                      permissions on this file, must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. If not specified, the volume defaultMode
                                      will be used. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: 'Required: Path is  the relative
                                      path name of the file to be created. Must not
                                      be absolute or contain the ''..'' path. Must
                                      be utf-8 encoded. The first item of the relative
                                      path must not start with ''..'''
                                      type: string
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, requests.cpu and requests.memory)
                                      are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                          volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Specifies the output format of
                                            the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                        - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                    - path
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          emptyDir:
                            description: 'emptyDir represents a temporary directory
                            that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            properties:
                              medium:
                                description: 'medium represents what type of storage
                                medium should back this directory. The default is
                                "" which means to use the node''s default medium.
                                Must be an empty string (default) or Memory. More
                                info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                type: string
                              sizeLimit:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: 'sizeLimit is the total amount of local
                                storage required for this EmptyDir volume. The size
                                limit is also applicable for memory medium. The maximum
                                usage on memory medium EmptyDir would be the minimum
                                value between the SizeLimit specified here and the
                                sum of memory limits of all containers in a pod. The
                                default is nil which means that the limit is undefined.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                          ephemeral:
                            description: "ephemeral represents a volume that is handled
                            by a cluster storage driver. The volume's lifecycle is
                            tied to the pod that defines it - it will be created before
                            the pod starts, and deleted when the pod is removed. \n
                            Use this if: a) the volume is only needed while the pod
                            runs, b) features of normal volumes like restoring from
                            snapshot or capacity tracking are needed, c) the storage
                            driver is specified through a storage class, and d) the
                            storage driver supports dynamic volume provisioning through
                            a PersistentVolumeClaim (see EphemeralVolumeSource for
                            more information on the connection between this volume
                            type and PersistentVolumeClaim). \n Use PersistentVolumeClaim
                            or one of the vendor-specific APIs for volumes that persist
                            for longer than the lifecycle of an individual pod. \n
                            Use CSI for light-weight local ephemeral volumes if the
                            CSI driver is meant to be used that way - see the documentation
                            of the driver for more information. \n A pod can use both
                            types of ephemeral volumes and persistent volumes at the
                            same time."
                            properties:
                              volumeClaimTemplate:
                                description: "Will be used to create a stand-alone PVC
                                to provision the volume. The pod in which this EphemeralVolumeSource
                                is embedded will be the owner of the PVC, i.e. the
                                PVC will be deleted together with the pod.  The name
                                of the PVC will be `<pod name>-<volume name>` where
                                `<volume name>` is the name from the `PodSpec.Volumes`
                                array entry. Pod validation will reject the pod if
                                the concatenated name is not valid for a PVC (for
                                example, too long). \n An existing PVC with that name
                                that is not owned by the pod will *not* be used for
                                the pod to avoid using an unrelated volume by mistake.
                                Starting the pod is then blocked until the unrelated
                                PVC is removed. If such a pre-created PVC is meant
                                to be used by the pod, the PVC has to updated with
                                an owner reference to the pod once the pod exists.
                                Normally this should not be necessary, but it may
                                be useful when manually reconstructing a broken cluster.
                                \n This field is read-only and no changes will be
                                made by Kubernetes to the PVC after it has been created.
                                \n Required, must not be nil."
                                properties:
                                  metadata:
                                    description: May contain labels and annotations
                                      that will be copied into the PVC when creating
                                      it. No other fields are allowed and will be rejected
                                      during validation.
                                    type: object
                                  spec:
                                    description: The specification for the PersistentVolumeClaim.
                                      The entire content is copied unchanged into the
                                      PVC that gets created from this template. The
                                      same fields as in a PersistentVolumeClaim are
                                      also valid here.
                                    properties:
                                      accessModes:
                                        description: 'accessModes contains the desired
                                        access modes the volume should have. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      dataSource:
                                        description: 'dataSource field can be used to
                                        specify either: * An existing VolumeSnapshot
                                        object (snapshot.storage.k8s.io/VolumeSnapshot)
                                        * An existing PVC (PersistentVolumeClaim)
                                        If the provisioner or an external controller
                                        can support the specified data source, it
                                        will create a new volume based on the contents
                                        of the specified data source. When the AnyVolumeDataSource
                                        feature gate is enabled, dataSource contents
                                        will be copied to dataSourceRef, and dataSourceRef
                                        contents will be copied to dataSource when
                                        dataSourceRef.namespace is not specified.
                                        If the namespace is specified, then dataSourceRef
                                        will not be copied to dataSource.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for the
                                              resource being referenced. If APIGroup
                                              is not specified, the specified Kind must
                                              be in the core API group. For any other
                                              third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      dataSourceRef:
                                        description: 'dataSourceRef specifies the object
                                        from which to populate the volume with data,
                                        if a non-empty volume is desired. This may
                                        be any object from a non-empty API group (non
                                        core object) or a PersistentVolumeClaim object.
                                        When this field is specified, volume binding
                                        will only succeed if the type of the specified
                                        object matches some installed volume populator
                                        or dynamic provisioner. This field will replace
                                        the functionality of the dataSource field
                                        and as such if both fields are non-empty,
                                        they must have the same value. For backwards
                                        compatibility, when namespace isn''t specified
                                        in dataSourceRef, both fields (dataSource
                                        and dataSourceRef) will be set to the same
                                        value automatically if one of them is empty
                                        and the other is non-empty. When namespace
                                        is specified in dataSourceRef, dataSource
                                        isn''t set to the same value and must be empty.
                                        There are three important differences between
                                        dataSource and dataSourceRef: * While dataSource
                                        only allows two specific types of objects,
                                        dataSourceRef allows any non-core object,
                                        as well as PersistentVolumeClaim objects.
                                        * While dataSource ignores disallowed values
                                        (dropping them), dataSourceRef preserves all
                                        values, and generates an error if a disallowed
                                        value is specified. * While dataSource only
                                        allows local objects, dataSourceRef allows
                                        objects in any namespaces. (Beta) Using this
                                        field requires the AnyVolumeDataSource feature
                                        gate to be enabled. (Alpha) Using the namespace
                                        field of dataSourceRef requires the CrossNamespaceVolumeDataSource
                                        feature gate to be enabled.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for the
                                              resource being referenced. If APIGroup
                                              is not specified, the specified Kind must
                                              be in the core API group. For any other
                                              third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                          namespace:
                                            description: Namespace is the namespace
                                              of resource being referenced Note that
                                              when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                              object is required in the referent namespace
                                              to allow that namespace's owner to accept
                                              the reference. See the ReferenceGrant
                                              documentation for details. (Alpha) This
                                              field requires the CrossNamespaceVolumeDataSource
                                              feature gate to be enabled.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                      resources:
                                        description: 'resources represents the minimum
                                        resources the volume should have. If RecoverVolumeExpansionFailure
                                        feature is enabled users are allowed to specify
                                        resource requirements that are lower than
                                        previous value but must still be higher than
                                        capacity recorded in the status field of the
                                        claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: selector is a label query over
                                          volumes to consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      storageClassName:
                                        description: 'storageClassName is the name of
                                        the StorageClass required by the claim. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeAttributesClassName:
                                        description: 'volumeAttributesClassName may
                                        be used to set the VolumeAttributesClass used
                                        by this claim. If specified, the CSI driver
                                        will create or update the volume with the
                                        attributes defined in the corresponding VolumeAttributesClass.
                                        This has a different purpose than storageClassName,
                                        it can be changed after the claim is created.
                                        An empty string value means that no VolumeAttributesClass
                                        will be applied to the claim but it''s not
                                        allowed to reset this field to empty string
                                        once it is set. If unspecified and the PersistentVolumeClaim
                                        is unbound, the default VolumeAttributesClass
                                        will be set by the persistentvolume controller
                                        if it exists. If the resource referred to
                                        by volumeAttributesClass does not exist, this
                                        PersistentVolumeClaim will be set to a Pending
                                        state, as reflected by the modifyVolumeStatus
                                        field, until such as a resource exists. More
                                        info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                        (Alpha) Using this field requires the VolumeAttributesClass
                                        feature gate to be enabled.'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type of
                                          volume is required by the claim. Value of
                                          Filesystem is implied when not included in
                                          claim spec.
                                        type: string
                                      volumeName:
                                        description: volumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                required:
                                  - spec
                                type: object
                            type: object
                          fc:
                            description: fc represents a Fibre Channel resource that
                              is attached to a kubelet's host machine and then exposed
                              to the pod.
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified. TODO: how do we prevent
                                errors in the filesystem from compromising the machine'
                                type: string
                              lun:
                                description: 'lun is Optional: FC target lun number'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                                type: boolean
                              targetWWNs:
                                description: 'targetWWNs is Optional: FC target worldwide
                                names (WWNs)'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              wwids:
                                description: 'wwids Optional: FC volume world wide identifiers
                                (wwids) Either wwids or combination of targetWWNs
                                and lun must be set, but not both simultaneously.'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          flexVolume:
                            description: flexVolume represents a generic volume resource
                              that is provisioned/attached using an exec based plugin.
                            properties:
                              driver:
                                description: driver is the name of the driver to use
                                  for this volume.
                                type: string
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". The default filesystem
                                  depends on FlexVolume script.
                                type: string
                              options:
                                additionalProperties:
                                  type: string
                                description: 'options is Optional: this field holds
                                extra command options if any.'
                                type: object
                              readOnly:
                                description: 'readOnly is Optional: defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                                type: boolean
                              secretRef:
                                description: 'secretRef is Optional: secretRef is reference
                                to the secret object containing sensitive information
                                to pass to the plugin scripts. This may be empty if
                                no secret object is specified. If the secret object
                                contains more than one secret, all secrets are passed
                                to the plugin scripts.'
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                              - driver
                            type: object
                          flocker:
                            description: flocker represents a Flocker volume attached
                              to a kubelet's host machine. This depends on the Flocker
                              control service being running
                            properties:
                              datasetName:
                                description: datasetName is Name of the dataset stored
                                  as metadata -> name on the dataset for Flocker should
                                  be considered as deprecated
                                type: string
                              datasetUUID:
                                description: datasetUUID is the UUID of the dataset.
                                  This is unique identifier of a Flocker dataset
                                type: string
                            type: object
                          gcePersistentDisk:
                            description: 'gcePersistentDisk represents a GCE Disk resource
                            that is attached to a kubelet''s host machine and then
                            exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            properties:
                              fsType:
                                description: 'fsType is filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              partition:
                                description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                format: int32
                                type: integer
                              pdName:
                                description: 'pdName is unique name of the PD resource
                                in GCE. Used to identify the disk in GCE. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: boolean
                            required:
                              - pdName
                            type: object
                          gitRepo:
                            description: 'gitRepo represents a git repository at a particular
                            revision. DEPRECATED: GitRepo is deprecated. To provision
                            a container with a git repo, mount an EmptyDir into an
                            InitContainer that clones the repo using git, then mount
                            the EmptyDir into the Pod''s container.'
                            properties:
                              directory:
                                description: directory is the target directory name.
                                  Must not contain or start with '..'.  If '.' is supplied,
                                  the volume directory will be the git repository.  Otherwise,
                                  if specified, the volume will contain the git repository
                                  in the subdirectory with the given name.
                                type: string
                              repository:
                                description: repository is the URL
                                type: string
                              revision:
                                description: revision is the commit hash for the specified
                                  revision.
                                type: string
                            required:
                              - repository
                            type: object
                          glusterfs:
                            description: 'glusterfs represents a Glusterfs mount on
                            the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                            properties:
                              endpoints:
                                description: 'endpoints is the endpoint name that details
                                Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              path:
                                description: 'path is the Glusterfs volume path. More
                                info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the Glusterfs
                                volume to be mounted with read-only permissions. Defaults
                                to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: boolean
                            required:
                              - endpoints
                              - path
                            type: object
                          hostPath:
                            description: 'hostPath represents a pre-existing file or
                            directory on the host machine that is directly exposed
                            to the container. This is generally used for system agents
                            or other privileged things that are allowed to see the
                            host machine. Most containers will NOT need this. More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            --- TODO(jonesdl) We need to restrict who can use host
                            directory mounts and who can/can not mount host directories
                            as read/write.'
                            properties:
                              path:
                                description: 'path of the directory on the host. If
                                the path is a symlink, it will follow the link to
                                the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                              type:
                                description: 'type for HostPath Volume Defaults to ""
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                            required:
                              - path
                            type: object
                          iscsi:
                            description: 'iscsi represents an ISCSI Disk resource that
                            is attached to a kubelet''s host machine and then exposed
                            to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                            properties:
                              chapAuthDiscovery:
                                description: chapAuthDiscovery defines whether support
                                  iSCSI Discovery CHAP authentication
                                type: boolean
                              chapAuthSession:
                                description: chapAuthSession defines whether support
                                  iSCSI Session CHAP authentication
                                type: boolean
                              fsType:
                                description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              initiatorName:
                                description: initiatorName is the custom iSCSI Initiator
                                  Name. If initiatorName is specified with iscsiInterface
                                  simultaneously, new iSCSI interface <target portal>:<volume
                                  name> will be created for the connection.
                                type: string
                              iqn:
                                description: iqn is the target iSCSI Qualified Name.
                                type: string
                              iscsiInterface:
                                description: iscsiInterface is the interface Name that
                                  uses an iSCSI transport. Defaults to 'default' (tcp).
                                type: string
                              lun:
                                description: lun represents iSCSI Target Lun number.
                                format: int32
                                type: integer
                              portals:
                                description: portals is the iSCSI Target Portal List.
                                  The portal is either an IP or ip_addr:port if the
                                  port is other than default (typically TCP ports 860
                                  and 3260).
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              readOnly:
                                description: readOnly here will force the ReadOnly setting
                                  in VolumeMounts. Defaults to false.
                                type: boolean
                              secretRef:
                                description: secretRef is the CHAP Secret for iSCSI
                                  target and initiator authentication
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              targetPortal:
                                description: targetPortal is iSCSI Target Portal. The
                                  Portal is either an IP or ip_addr:port if the port
                                  is other than default (typically TCP ports 860 and
                                  3260).
                                type: string
                            required:
                              - iqn
                              - lun
                              - targetPortal
                            type: object
                          mountPath:
                            description: Path within the Portworx container at which
                              the volume should be mounted. Must not contain ':'.
                            type: string
                          mountPropagation:
                            description: MountPropagation determines how mounts are
                              propagated from the host to container and the other way
                              around. When not set, MountPropagationNone is used.
                            type: string
                          name:
                            description: Name is unique name for the volume.
                            type: string
                          nfs:
                            description: 'nfs represents an NFS mount on the host that
                            shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            properties:
                              path:
                                description: 'path that is exported by the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the NFS export
                                to be mounted with read-only permissions. Defaults
                                to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: boolean
                              server:
                                description: 'server is the hostname or IP address of
                                the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                            required:
                              - path
                              - server
                            type: object
                          persistentVolumeClaim:
                            description: 'persistentVolumeClaimVolumeSource represents
                            a reference to a PersistentVolumeClaim in the same namespace.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            properties:
                              claimName:
                                description: 'claimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                type: string
                              readOnly:
                                description: readOnly Will force the ReadOnly setting
                                  in VolumeMounts. Default false.
                                type: boolean
                            required:
                              - claimName
                            type: object
                          photonPersistentDisk:
                            description: photonPersistentDisk represents a PhotonController
                              persistent disk attached and mounted on kubelets host
                              machine
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              pdID:
                                description: pdID is the ID that identifies Photon Controller
                                  persistent disk
                                type: string
                            required:
                              - pdID
                            type: object
                          portworxVolume:
                            description: portworxVolume represents a portworx volume
                              attached and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: fSType represents the filesystem type to
                                  mount Must be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              readOnly:
                                description: readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              volumeID:
                                description: volumeID uniquely identifies a Portworx
                                  volume
                                type: string
                            required:
                              - volumeID
                            type: object
                          projected:
                            description: projected items for all in one resources secrets,
                              configmaps, and downward API
                            properties:
                              defaultMode:
                                description: defaultMode are the mode bits used to set
                                  permissions on created files by default. Must be an
                                  octal value between 0000 and 0777 or a decimal value
                                  between 0 and 511. YAML accepts both octal and decimal
                                  values, JSON requires decimal values for mode bits.
                                  Directories within the path are not affected by this
                                  setting. This might be in conflict with other options
                                  that affect the file mode, like fsGroup, and the result
                                  can be other mode bits set.
                                format: int32
                                type: integer
                              sources:
                                description: sources is the list of volume projections
                                items:
                                  description: Projection that may be projected along
                                    with other supported volume types
                                  properties:
                                    clusterTrustBundle:
                                      description: "ClusterTrustBundle allows a pod
                                      to access the `.spec.trustBundle` field of ClusterTrustBundle
                                      objects in an auto-updating file. \n Alpha,
                                      gated by the ClusterTrustBundleProjection feature
                                      gate. \n ClusterTrustBundle objects can either
                                      be selected by name, or by the combination of
                                      signer name and a label selector. \n Kubelet
                                      performs aggressive normalization of the PEM
                                      contents written into the pod filesystem.  Esoteric
                                      PEM features such as inter-block comments and
                                      block headers are stripped.  Certificates are
                                      deduplicated. The ordering of certificates within
                                      the file is arbitrary, and Kubelet may change
                                      the order over time."
                                      properties:
                                        labelSelector:
                                          description: Select all ClusterTrustBundles
                                            that match this label selector.  Only has
                                            effect if signerName is set.  Mutually-exclusive
                                            with name.  If unset, interpreted as "match
                                            nothing".  If set but empty, interpreted
                                            as "match everything".
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key
                                                      that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value}
                                                pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        name:
                                          description: Select a single ClusterTrustBundle
                                            by object name.  Mutually-exclusive with
                                            signerName and labelSelector.
                                          type: string
                                        optional:
                                          description: If true, don't block pod startup
                                            if the referenced ClusterTrustBundle(s)
                                            aren't available.  If using name, then the
                                            named ClusterTrustBundle is allowed not
                                            to exist.  If using signerName, then the
                                            combination of signerName and labelSelector
                                            is allowed to match zero ClusterTrustBundles.
                                          type: boolean
                                        path:
                                          description: Relative path from the volume
                                            root to write the bundle.
                                          type: string
                                        signerName:
                                          description: Select all ClusterTrustBundles
                                            that match this signer name. Mutually-exclusive
                                            with name.  The contents of all selected
                                            ClusterTrustBundles will be unified and
                                            deduplicated.
                                          type: string
                                      required:
                                        - path
                                      type: object
                                    configMap:
                                      description: configMap information about the configMap
                                        data to project
                                      properties:
                                        items:
                                          description: items if unspecified, each key-value
                                            pair in the Data field of the referenced
                                            ConfigMap will be projected into the volume
                                            as a file whose name is the key and content
                                            is the value. If specified, the listed keys
                                            will be projected into the specified paths,
                                            and unlisted keys will not be present. If
                                            a key is specified which is not present
                                            in the ConfigMap, the volume setup will
                                            error unless it is marked optional. Paths
                                            must be relative and may not contain the
                                            '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative path
                                                  of the file to map the key to. May
                                                  not be an absolute path. May not contain
                                                  the path element '..'. May not start
                                                  with the string '..'.
                                                type: string
                                            required:
                                              - key
                                              - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        name:
                                          default: ""
                                          description: 'Name of the referent. This field
                                          is effectively required, but due to backwards
                                          compatibility is allowed to be empty. Instances
                                          of this type with an empty value here are
                                          almost certainly wrong. TODO: Add other
                                          useful fields. apiVersion, kind, uid? More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Drop `kubebuilder:default` when controller-gen
                                          doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    downwardAPI:
                                      description: downwardAPI information about the
                                        downwardAPI data to project
                                      properties:
                                        items:
                                          description: Items is a list of DownwardAPIVolume
                                            file
                                          items:
                                            description: DownwardAPIVolumeFile represents
                                              information to create the file containing
                                              the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name, namespace and uid are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in terms
                                                      of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to
                                                      select in the specified API version.
                                                    type: string
                                                required:
                                                  - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              mode:
                                                description: 'Optional: mode bits used
                                                to set permissions on this file, must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                requests.cpu and requests.memory)
                                                are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                    to select'
                                                    type: string
                                                required:
                                                  - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            required:
                                              - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    secret:
                                      description: secret information about the secret
                                        data to project
                                      properties:
                                        items:
                                          description: items if unspecified, each key-value
                                            pair in the Data field of the referenced
                                            Secret will be projected into the volume
                                            as a file whose name is the key and content
                                            is the value. If specified, the listed keys
                                            will be projected into the specified paths,
                                            and unlisted keys will not be present. If
                                            a key is specified which is not present
                                            in the Secret, the volume setup will error
                                            unless it is marked optional. Paths must
                                            be relative and may not contain the '..'
                                            path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative path
                                                  of the file to map the key to. May
                                                  not be an absolute path. May not contain
                                                  the path element '..'. May not start
                                                  with the string '..'.
                                                type: string
                                            required:
                                              - key
                                              - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        name:
                                          default: ""
                                          description: 'Name of the referent. This field
                                          is effectively required, but due to backwards
                                          compatibility is allowed to be empty. Instances
                                          of this type with an empty value here are
                                          almost certainly wrong. TODO: Add other
                                          useful fields. apiVersion, kind, uid? More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Drop `kubebuilder:default` when controller-gen
                                          doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                          type: string
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its key must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    serviceAccountToken:
                                      description: serviceAccountToken is information
                                        about the serviceAccountToken data to project
                                      properties:
                                        audience:
                                          description: audience is the intended audience
                                            of the token. A recipient of a token must
                                            identify itself with an identifier specified
                                            in the audience of the token, and otherwise
                                            should reject the token. The audience defaults
                                            to the identifier of the apiserver.
                                          type: string
                                        expirationSeconds:
                                          description: expirationSeconds is the requested
                                            duration of validity of the service account
                                            token. As the token approaches expiration,
                                            the kubelet volume plugin will proactively
                                            rotate the service account token. The kubelet
                                            will start trying to rotate the token if
                                            the token is older than 80 percent of its
                                            time to live or if the token is older than
                                            24 hours.Defaults to 1 hour and must be
                                            at least 10 minutes.
                                          format: int64
                                          type: integer
                                        path:
                                          description: path is the path relative to
                                            the mount point of the file to project the
                                            token into.
                                          type: string
                                      required:
                                        - path
                                      type: object
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          quobyte:
                            description: quobyte represents a Quobyte mount on the host
                              that shares a pod's lifetime
                            properties:
                              group:
                                description: group to map volume access to Default is
                                  no group
                                type: string
                              readOnly:
                                description: readOnly here will force the Quobyte volume
                                  to be mounted with read-only permissions. Defaults
                                  to false.
                                type: boolean
                              registry:
                                description: registry represents a single or multiple
                                  Quobyte Registry services specified as a string as
                                  host:port pair (multiple entries are separated with
                                  commas) which acts as the central registry for volumes
                                type: string
                              tenant:
                                description: tenant owning the given Quobyte volume
                                  in the Backend Used with dynamically provisioned Quobyte
                                  volumes, value is set by the plugin
                                type: string
                              user:
                                description: user to map volume access to Defaults to
                                  serivceaccount user
                                type: string
                              volume:
                                description: volume is a string that references an already
                                  created Quobyte volume by name.
                                type: string
                            required:
                              - registry
                              - volume
                            type: object
                          rbd:
                            description: 'rbd represents a Rados Block Device mount
                            on the host that shares a pod''s lifetime. More info:
                            https://examples.k8s.io/volumes/rbd/README.md'
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              image:
                                description: 'image is the rados image name. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              keyring:
                                description: 'keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              monitors:
                                description: 'monitors is a collection of Ceph monitors.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              pool:
                                description: 'pool is the rados pool name. Default is
                                rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: boolean
                              secretRef:
                                description: 'secretRef is name of the authentication
                                secret for RBDUser. If provided overrides keyring.
                                Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              user:
                                description: 'user is the rados user name. Default is
                                admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                            required:
                              - image
                              - monitors
                            type: object
                          readOnly:
                            description: Mounted read-only if true, read-write otherwise
                              (false or unspecified). Defaults to false.
                            type: boolean
                          scaleIO:
                            description: scaleIO represents a ScaleIO persistent volume
                              attached and mounted on Kubernetes nodes.
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                                type: string
                              gateway:
                                description: gateway is the host address of the ScaleIO
                                  API Gateway.
                                type: string
                              protectionDomain:
                                description: protectionDomain is the name of the ScaleIO
                                  Protection Domain for the configured storage.
                                type: string
                              readOnly:
                                description: readOnly Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: secretRef references to the secret for
                                  ScaleIO user and other sensitive information. If this
                                  is not provided, Login operation will fail.
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              sslEnabled:
                                description: sslEnabled Flag enable/disable SSL communication
                                  with Gateway, default false
                                type: boolean
                              storageMode:
                                description: storageMode indicates whether the storage
                                  for a volume should be ThickProvisioned or ThinProvisioned.
                                  Default is ThinProvisioned.
                                type: string
                              storagePool:
                                description: storagePool is the ScaleIO Storage Pool
                                  associated with the protection domain.
                                type: string
                              system:
                                description: system is the name of the storage system
                                  as configured in ScaleIO.
                                type: string
                              volumeName:
                                description: volumeName is the name of a volume already
                                  created in the ScaleIO system that is associated with
                                  this volume source.
                                type: string
                            required:
                              - gateway
                              - secretRef
                              - system
                            type: object
                          secret:
                            description: 'secret represents a secret that should populate
                            this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                            properties:
                              defaultMode:
                                description: 'defaultMode is Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                                format: int32
                                type: integer
                              items:
                                description: items If unspecified, each key-value pair
                                  in the Data field of the referenced Secret will be
                                  projected into the volume as a file whose name is
                                  the key and content is the value. If specified, the
                                  listed keys will be projected into the specified paths,
                                  and unlisted keys will not be present. If a key is
                                  specified which is not present in the Secret, the
                                  volume setup will error unless it is marked optional.
                                  Paths must be relative and may not contain the '..'
                                  path or start with '..'.
                                items:
                                  description: Maps a string key to a path within a
                                    volume.
                                  properties:
                                    key:
                                      description: key is the key to project.
                                      type: string
                                    mode:
                                      description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: path is the relative path of the
                                        file to map the key to. May not be an absolute
                                        path. May not contain the path element '..'.
                                        May not start with the string '..'.
                                      type: string
                                  required:
                                    - key
                                    - path
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              optional:
                                description: optional field specify whether the Secret
                                  or its keys must be defined
                                type: boolean
                              secretName:
                                description: 'secretName is the name of the secret in
                                the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                type: string
                            type: object
                          storageos:
                            description: storageOS represents a StorageOS volume attached
                              and mounted on Kubernetes nodes.
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount.
                                  Must be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              readOnly:
                                description: readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: secretRef specifies the secret to use for
                                  obtaining the StorageOS API credentials.  If not specified,
                                  default values will be attempted.
                                properties:
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              volumeName:
                                description: volumeName is the human-readable name of
                                  the StorageOS volume.  Volume names are only unique
                                  within a namespace.
                                type: string
                              volumeNamespace:
                                description: volumeNamespace specifies the scope of
                                  the volume within StorageOS.  If no namespace is specified
                                  then the Pod's namespace will be used.  This allows
                                  the Kubernetes name scoping to be mirrored within
                                  StorageOS for tighter integration. Set VolumeName
                                  to any name to override the default behaviour. Set
                                  to "default" if you are not using namespaces within
                                  StorageOS. Namespaces that do not pre-exist within
                                  StorageOS will be created.
                                type: string
                            type: object
                          vsphereVolume:
                            description: vsphereVolume represents a vSphere volume attached
                              and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: fsType is filesystem type to mount. Must
                                  be a filesystem type supported by the host operating
                                  system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              storagePolicyID:
                                description: storagePolicyID is the storage Policy Based
                                  Management (SPBM) profile ID associated with the StoragePolicyName.
                                type: string
                              storagePolicyName:
                                description: storagePolicyName is the storage Policy
                                  Based Management (SPBM) profile name.
                                type: string
                              volumePath:
                                description: volumePath is the path that identifies
                                  vSphere volume vmdk
                                type: string
                            required:
                              - volumePath
                            type: object
                        type: object
                      type: array
                  type: object
                updateStrategy:
                  description: An update strategy to replace existing StorageCluster
                    pods with new pods. Default strategy is RollingUpdate
                  properties:
                    rollingUpdate:
                      description: RollingUpdate is spec to control the desired behavior
                        of storage cluster rolling update.
                      properties:
                        disruption:
                          description: The default behavior is non-disruptive upgrades.
                            This setting disables the default non-disruptive upgrades
                            and reverts to the previous behavior of upgrading nodes
                            in parallel without worrying about disruption.
                          properties:
                            allow:
                              description: Allow flag indicates whether updates are
                                non-disruptive or disruptive.
                              type: boolean
                          type: object
                        maxUnavailable:
                          anyOf:
                            - type: integer
                            - type: string
                          description: 'The maximum number of StorageCluster pods that
                          can be unavailable during the update. Value can be an absolute
                          number (ex: 5) or a percentage of total number of StorageCluster
                          pods at the start of the update (ex: 10%). Absolute number
                          is calculated from percentage by rounding up. This cannot
                          be 0. Default value is 1. Example: when this is set to 30%,
                          at most 30% of the total number of nodes that should be
                          running the storage pod can have their pods stopped for
                          an update at any given time. The update starts by stopping
                          at most 30% of those StorageCluster pods and then brings
                          up new StorageCluster pods in their place. Once the new
                          pods are available, it then proceeds onto other StorageCluster
                          pods, thus ensuring that at least 70% of original number
                          of StorageCluster pods are available at all times during
                          the update.'
                          x-kubernetes-int-or-string: true
                        minReadySeconds:
                          description: Minimum number of seconds for which a newly created
                            Portworx pod should be ready without any of its container
                            crashing, for it to be considered available. During rolling
                            updates, this flag will wait for all pods to be ready for
                            at least `minReadySeconds` before updating the next batch
                            of pods, where the size of the pod batch is specified through
                            the `spec.updateStrategy.rollingUpdate.maxUnavailable` flag.
                            Defaults to 0 (pod will be considered available as soon
                            as it is ready)
                          format: int32
                          type: integer
                      type: object
                    type:
                      description: Type of storage cluster update strategy. Currently,
                        Portworx supports the following update strategies- `RollingUpdate`
                        and `OnDelete`. Default value is `RollingUpdate`.
                      enum:
                        - RollingUpdate
                        - OnDelete
                      type: string
                  type: object
                userInterface:
                  description: UserInterface contains details of a user interface for
                    the storage driver
                  properties:
                    enabled:
                      description: Enabled decides whether the user interface component
                        needs to be enabled
                      type: boolean
                    env:
                      description: Env is a list of environment variables used by UI
                        component. This is an array of Kubernetes EnvVar where the value
                        can be given directly or from a source like field, config map
                        or secret.
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its
                                      key must be defined
                                    type: boolean
                                required:
                                  - key
                                type: object
                                x-kubernetes-map-type: atomic
                              fieldRef:
                                description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                  - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              resourceFieldRef:
                                description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                    optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                  - resource
                                type: object
                                x-kubernetes-map-type: atomic
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: 'Name of the referent. This field is
                                    effectively required, but due to backwards compatibility
                                    is allowed to be empty. Instances of this type
                                    with an empty value here are almost certainly
                                    wrong. TODO: Add other useful fields. apiVersion,
                                    kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen
                                    doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key
                                      must be defined
                                    type: boolean
                                required:
                                  - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                        required:
                          - name
                        type: object
                      type: array
                    image:
                      description: Image is the docker image of the user interface container
                      type: string
                    lockImage:
                      description: 'LockImage is a boolean indicating if the user interface
                      image needs to be locked to the given image. If the image is
                      not locked, it can be updated by the driver during upgrades.
                      DEPRECATED: This is no longer needed to lock an image. The new
                      behavior is to use the image as it is, if present, else use
                      a default image.'
                      type: boolean
                  type: object
                version:
                  description: Version is the version of storage driver. This field
                    is read-only.
                  type: string
                volumes:
                  description: Volumes extra list of volumes for the storage driver
                    pod
                  items:
                    description: VolumeSpec describes a volume that needs to be mounted
                      inside a container
                    properties:
                      awsElasticBlockStore:
                        description: 'awsElasticBlockStore represents an AWS Disk resource
                        that is attached to a kubelet''s host machine and then exposed
                        to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type of the volume
                            that you want to mount. Tip: Ensure that the filesystem
                            type is supported by the host operating system. Examples:
                            "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                            if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                            TODO: how do we prevent errors in the filesystem from
                            compromising the machine'
                            type: string
                          partition:
                            description: 'partition is the partition in the volume that
                            you want to mount. If omitted, the default is to mount
                            by volume name. Examples: For volume /dev/sda1, you specify
                            the partition as "1". Similarly, the volume partition
                            for /dev/sda is "0" (or you can leave the property empty).'
                            format: int32
                            type: integer
                          readOnly:
                            description: 'readOnly value true will force the readOnly
                            setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            type: boolean
                          volumeID:
                            description: 'volumeID is unique ID of the persistent disk
                            resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            type: string
                        required:
                          - volumeID
                        type: object
                      azureDisk:
                        description: azureDisk represents an Azure Data Disk mount on
                          the host and bind mount to the pod.
                        properties:
                          cachingMode:
                            description: 'cachingMode is the Host Caching mode: None,
                            Read Only, Read Write.'
                            type: string
                          diskName:
                            description: diskName is the Name of the data disk in the
                              blob storage
                            type: string
                          diskURI:
                            description: diskURI is the URI of data disk in the blob
                              storage
                            type: string
                          fsType:
                            description: fsType is Filesystem type to mount. Must be
                              a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified.
                            type: string
                          kind:
                            description: 'kind expected values are Shared: multiple
                            blob disks per storage account  Dedicated: single blob
                            disk per storage account  Managed: azure managed data
                            disk (only in managed availability set). defaults to shared'
                            type: string
                          readOnly:
                            description: readOnly Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                        required:
                          - diskName
                          - diskURI
                        type: object
                      azureFile:
                        description: azureFile represents an Azure File Service mount
                          on the host and bind mount to the pod.
                        properties:
                          readOnly:
                            description: readOnly defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretName:
                            description: secretName is the  name of secret that contains
                              Azure Storage Account Name and Key
                            type: string
                          shareName:
                            description: shareName is the azure share Name
                            type: string
                        required:
                          - secretName
                          - shareName
                        type: object
                      cephfs:
                        description: cephFS represents a Ceph FS mount on the host that
                          shares a pod's lifetime
                        properties:
                          monitors:
                            description: 'monitors is Required: Monitors is a collection
                            of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          path:
                            description: 'path is Optional: Used as the mounted root,
                            rather than the full Ceph tree, default is /'
                            type: string
                          readOnly:
                            description: 'readOnly is Optional: Defaults to false (read/write).
                            ReadOnly here will force the ReadOnly setting in VolumeMounts.
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: boolean
                          secretFile:
                            description: 'secretFile is Optional: SecretFile is the
                            path to key ring for User, default is /etc/ceph/user.secret
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: string
                          secretRef:
                            description: 'secretRef is Optional: SecretRef is reference
                            to the authentication secret for User, default is empty.
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            properties:
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          user:
                            description: 'user is optional: User is the rados user name,
                            default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                            type: string
                        required:
                          - monitors
                        type: object
                      cinder:
                        description: 'cinder represents a cinder volume attached and
                        mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type to mount. Must
                            be a filesystem type supported by the host operating system.
                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to
                            be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: string
                          readOnly:
                            description: 'readOnly defaults to false (read/write). ReadOnly
                            here will force the ReadOnly setting in VolumeMounts.
                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: boolean
                          secretRef:
                            description: 'secretRef is optional: points to a secret
                            object containing parameters used to connect to OpenStack.'
                            properties:
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          volumeID:
                            description: 'volumeID used to identify the volume in cinder.
                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: string
                        required:
                          - volumeID
                        type: object
                      configMap:
                        description: configMap represents a configMap that should populate
                          this volume
                        properties:
                          defaultMode:
                            description: 'defaultMode is optional: mode bits used to
                            set permissions on created files by default. Must be an
                            octal value between 0000 and 0777 or a decimal value between
                            0 and 511. YAML accepts both octal and decimal values,
                            JSON requires decimal values for mode bits. Defaults to
                            0644. Directories within the path are not affected by
                            this setting. This might be in conflict with other options
                            that affect the file mode, like fsGroup, and the result
                            can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: items if unspecified, each key-value pair in
                              the Data field of the referenced ConfigMap will be projected
                              into the volume as a file whose name is the key and content
                              is the value. If specified, the listed keys will be projected
                              into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in
                              the ConfigMap, the volume setup will error unless it is
                              marked optional. Paths must be relative and may not contain
                              the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: 'mode is Optional: mode bits used to
                                  set permissions on this file. Must be an octal value
                                  between 0000 and 0777 or a decimal value between
                                  0 and 511. YAML accepts both octal and decimal values,
                                  JSON requires decimal values for mode bits. If not
                                  specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that
                                  affect the file mode, like fsGroup, and the result
                                  can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: path is the relative path of the file
                                    to map the key to. May not be an absolute path.
                                    May not contain the path element '..'. May not start
                                    with the string '..'.
                                  type: string
                              required:
                                - key
                                - path
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          name:
                            default: ""
                            description: 'Name of the referent. This field is effectively
                            required, but due to backwards compatibility is allowed
                            to be empty. Instances of this type with an empty value
                            here are almost certainly wrong. TODO: Add other useful
                            fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Drop `kubebuilder:default` when controller-gen doesn''t
                            need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                            type: string
                          optional:
                            description: optional specify whether the ConfigMap or its
                              keys must be defined
                            type: boolean
                        type: object
                        x-kubernetes-map-type: atomic
                      csi:
                        description: csi (Container Storage Interface) represents ephemeral
                          storage that is handled by certain external CSI drivers (Beta
                          feature).
                        properties:
                          driver:
                            description: driver is the name of the CSI driver that handles
                              this volume. Consult with your admin for the correct name
                              as registered in the cluster.
                            type: string
                          fsType:
                            description: fsType to mount. Ex. "ext4", "xfs", "ntfs".
                              If not provided, the empty value is passed to the associated
                              CSI driver which will determine the default filesystem
                              to apply.
                            type: string
                          nodePublishSecretRef:
                            description: nodePublishSecretRef is a reference to the
                              secret object containing sensitive information to pass
                              to the CSI driver to complete the CSI NodePublishVolume
                              and NodeUnpublishVolume calls. This field is optional,
                              and  may be empty if no secret is required. If the secret
                              object contains more than one secret, all secret references
                              are passed.
                            properties:
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          readOnly:
                            description: readOnly specifies a read-only configuration
                              for the volume. Defaults to false (read/write).
                            type: boolean
                          volumeAttributes:
                            additionalProperties:
                              type: string
                            description: volumeAttributes stores driver-specific properties
                              that are passed to the CSI driver. Consult your driver's
                              documentation for supported values.
                            type: object
                        required:
                          - driver
                        type: object
                      downwardAPI:
                        description: downwardAPI represents downward API about the pod
                          that should populate this volume
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                            by default. Must be a Optional: mode bits used to set
                            permissions on created files by default. Must be an octal
                            value between 0000 and 0777 or a decimal value between
                            0 and 511. YAML accepts both octal and decimal values,
                            JSON requires decimal values for mode bits. Defaults to
                            0644. Directories within the path are not affected by
                            this setting. This might be in conflict with other options
                            that affect the file mode, like fsGroup, and the result
                            can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: Items is a list of downward API volume file
                            items:
                              description: DownwardAPIVolumeFile represents information
                                to create the file containing the pod field
                              properties:
                                fieldRef:
                                  description: 'Required: Selects a field of the pod:
                                  only annotations, labels, name, namespace and uid
                                  are supported.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the
                                        specified API version.
                                      type: string
                                  required:
                                    - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                mode:
                                  description: 'Optional: mode bits used to set permissions
                                  on this file, must be an octal value between 0000
                                  and 0777 or a decimal value between 0 and 511. YAML
                                  accepts both octal and decimal values, JSON requires
                                  decimal values for mode bits. If not specified,
                                  the volume defaultMode will be used. This might
                                  be in conflict with other options that affect the
                                  file mode, like fsGroup, and the result can be other
                                  mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: 'Required: Path is  the relative path
                                  name of the file to be created. Must not be absolute
                                  or contain the ''..'' path. Must be utf-8 encoded.
                                  The first item of the relative path must not start
                                  with ''..'''
                                  type: string
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                  only resources limits and requests (limits.cpu,
                                  limits.memory, requests.cpu and requests.memory)
                                  are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                      optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Specifies the output format of the
                                        exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                    - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                                - path
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      emptyDir:
                        description: 'emptyDir represents a temporary directory that
                        shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                        properties:
                          medium:
                            description: 'medium represents what type of storage medium
                            should back this directory. The default is "" which means
                            to use the node''s default medium. Must be an empty string
                            (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit:
                            anyOf:
                              - type: integer
                              - type: string
                            description: 'sizeLimit is the total amount of local storage
                            required for this EmptyDir volume. The size limit is also
                            applicable for memory medium. The maximum usage on memory
                            medium EmptyDir would be the minimum value between the
                            SizeLimit specified here and the sum of memory limits
                            of all containers in a pod. The default is nil which means
                            that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      ephemeral:
                        description: "ephemeral represents a volume that is handled
                        by a cluster storage driver. The volume's lifecycle is tied
                        to the pod that defines it - it will be created before the
                        pod starts, and deleted when the pod is removed. \n Use this
                        if: a) the volume is only needed while the pod runs, b) features
                        of normal volumes like restoring from snapshot or capacity
                        tracking are needed, c) the storage driver is specified through
                        a storage class, and d) the storage driver supports dynamic
                        volume provisioning through a PersistentVolumeClaim (see EphemeralVolumeSource
                        for more information on the connection between this volume
                        type and PersistentVolumeClaim). \n Use PersistentVolumeClaim
                        or one of the vendor-specific APIs for volumes that persist
                        for longer than the lifecycle of an individual pod. \n Use
                        CSI for light-weight local ephemeral volumes if the CSI driver
                        is meant to be used that way - see the documentation of the
                        driver for more information. \n A pod can use both types of
                        ephemeral volumes and persistent volumes at the same time."
                        properties:
                          volumeClaimTemplate:
                            description: "Will be used to create a stand-alone PVC to
                            provision the volume. The pod in which this EphemeralVolumeSource
                            is embedded will be the owner of the PVC, i.e. the PVC
                            will be deleted together with the pod.  The name of the
                            PVC will be `<pod name>-<volume name>` where `<volume
                            name>` is the name from the `PodSpec.Volumes` array entry.
                            Pod validation will reject the pod if the concatenated
                            name is not valid for a PVC (for example, too long). \n
                            An existing PVC with that name that is not owned by the
                            pod will *not* be used for the pod to avoid using an unrelated
                            volume by mistake. Starting the pod is then blocked until
                            the unrelated PVC is removed. If such a pre-created PVC
                            is meant to be used by the pod, the PVC has to updated
                            with an owner reference to the pod once the pod exists.
                            Normally this should not be necessary, but it may be useful
                            when manually reconstructing a broken cluster. \n This
                            field is read-only and no changes will be made by Kubernetes
                            to the PVC after it has been created. \n Required, must
                            not be nil."
                            properties:
                              metadata:
                                description: May contain labels and annotations that
                                  will be copied into the PVC when creating it. No other
                                  fields are allowed and will be rejected during validation.
                                type: object
                              spec:
                                description: The specification for the PersistentVolumeClaim.
                                  The entire content is copied unchanged into the PVC
                                  that gets created from this template. The same fields
                                  as in a PersistentVolumeClaim are also valid here.
                                properties:
                                  accessModes:
                                    description: 'accessModes contains the desired access
                                    modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  dataSource:
                                    description: 'dataSource field can be used to specify
                                    either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                    * An existing PVC (PersistentVolumeClaim) If the
                                    provisioner or an external controller can support
                                    the specified data source, it will create a new
                                    volume based on the contents of the specified
                                    data source. When the AnyVolumeDataSource feature
                                    gate is enabled, dataSource contents will be copied
                                    to dataSourceRef, and dataSourceRef contents will
                                    be copied to dataSource when dataSourceRef.namespace
                                    is not specified. If the namespace is specified,
                                    then dataSourceRef will not be copied to dataSource.'
                                    properties:
                                      apiGroup:
                                        description: APIGroup is the group for the resource
                                          being referenced. If APIGroup is not specified,
                                          the specified Kind must be in the core API
                                          group. For any other third-party types, APIGroup
                                          is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource being
                                          referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource being
                                          referenced
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  dataSourceRef:
                                    description: 'dataSourceRef specifies the object
                                    from which to populate the volume with data, if
                                    a non-empty volume is desired. This may be any
                                    object from a non-empty API group (non core object)
                                    or a PersistentVolumeClaim object. When this field
                                    is specified, volume binding will only succeed
                                    if the type of the specified object matches some
                                    installed volume populator or dynamic provisioner.
                                    This field will replace the functionality of the
                                    dataSource field and as such if both fields are
                                    non-empty, they must have the same value. For
                                    backwards compatibility, when namespace isn''t
                                    specified in dataSourceRef, both fields (dataSource
                                    and dataSourceRef) will be set to the same value
                                    automatically if one of them is empty and the
                                    other is non-empty. When namespace is specified
                                    in dataSourceRef, dataSource isn''t set to the
                                    same value and must be empty. There are three
                                    important differences between dataSource and dataSourceRef:
                                    * While dataSource only allows two specific types
                                    of objects, dataSourceRef allows any non-core
                                    object, as well as PersistentVolumeClaim objects.
                                    * While dataSource ignores disallowed values (dropping
                                    them), dataSourceRef preserves all values, and
                                    generates an error if a disallowed value is specified.
                                    * While dataSource only allows local objects,
                                    dataSourceRef allows objects in any namespaces.
                                    (Beta) Using this field requires the AnyVolumeDataSource
                                    feature gate to be enabled. (Alpha) Using the
                                    namespace field of dataSourceRef requires the
                                    CrossNamespaceVolumeDataSource feature gate to
                                    be enabled.'
                                    properties:
                                      apiGroup:
                                        description: APIGroup is the group for the resource
                                          being referenced. If APIGroup is not specified,
                                          the specified Kind must be in the core API
                                          group. For any other third-party types, APIGroup
                                          is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource being
                                          referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource being
                                          referenced
                                        type: string
                                      namespace:
                                        description: Namespace is the namespace of resource
                                          being referenced Note that when a namespace
                                          is specified, a gateway.networking.k8s.io/ReferenceGrant
                                          object is required in the referent namespace
                                          to allow that namespace's owner to accept
                                          the reference. See the ReferenceGrant documentation
                                          for details. (Alpha) This field requires the
                                          CrossNamespaceVolumeDataSource feature gate
                                          to be enabled.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                  resources:
                                    description: 'resources represents the minimum resources
                                    the volume should have. If RecoverVolumeExpansionFailure
                                    feature is enabled users are allowed to specify
                                    resource requirements that are lower than previous
                                    value but must still be higher than capacity recorded
                                    in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                    properties:
                                      limits:
                                        additionalProperties:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                      requests:
                                        additionalProperties:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. Requests
                                        cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                    type: object
                                  selector:
                                    description: selector is a label query over volumes
                                      to consider for binding.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  storageClassName:
                                    description: 'storageClassName is the name of the
                                    StorageClass required by the claim. More info:
                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                    type: string
                                  volumeAttributesClassName:
                                    description: 'volumeAttributesClassName may be used
                                    to set the VolumeAttributesClass used by this
                                    claim. If specified, the CSI driver will create
                                    or update the volume with the attributes defined
                                    in the corresponding VolumeAttributesClass. This
                                    has a different purpose than storageClassName,
                                    it can be changed after the claim is created.
                                    An empty string value means that no VolumeAttributesClass
                                    will be applied to the claim but it''s not allowed
                                    to reset this field to empty string once it is
                                    set. If unspecified and the PersistentVolumeClaim
                                    is unbound, the default VolumeAttributesClass
                                    will be set by the persistentvolume controller
                                    if it exists. If the resource referred to by volumeAttributesClass
                                    does not exist, this PersistentVolumeClaim will
                                    be set to a Pending state, as reflected by the
                                    modifyVolumeStatus field, until such as a resource
                                    exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                    (Alpha) Using this field requires the VolumeAttributesClass
                                    feature gate to be enabled.'
                                    type: string
                                  volumeMode:
                                    description: volumeMode defines what type of volume
                                      is required by the claim. Value of Filesystem
                                      is implied when not included in claim spec.
                                    type: string
                                  volumeName:
                                    description: volumeName is the binding reference
                                      to the PersistentVolume backing this claim.
                                    type: string
                                type: object
                            required:
                              - spec
                            type: object
                        type: object
                      fc:
                        description: fc represents a Fibre Channel resource that is
                          attached to a kubelet's host machine and then exposed to the
                          pod.
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type to mount. Must
                            be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                            if unspecified. TODO: how do we prevent errors in the
                            filesystem from compromising the machine'
                            type: string
                          lun:
                            description: 'lun is Optional: FC target lun number'
                            format: int32
                            type: integer
                          readOnly:
                            description: 'readOnly is Optional: Defaults to false (read/write).
                            ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                            type: boolean
                          targetWWNs:
                            description: 'targetWWNs is Optional: FC target worldwide
                            names (WWNs)'
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          wwids:
                            description: 'wwids Optional: FC volume world wide identifiers
                            (wwids) Either wwids or combination of targetWWNs and
                            lun must be set, but not both simultaneously.'
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      flexVolume:
                        description: flexVolume represents a generic volume resource
                          that is provisioned/attached using an exec based plugin.
                        properties:
                          driver:
                            description: driver is the name of the driver to use for
                              this volume.
                            type: string
                          fsType:
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". The default filesystem depends
                              on FlexVolume script.
                            type: string
                          options:
                            additionalProperties:
                              type: string
                            description: 'options is Optional: this field holds extra
                            command options if any.'
                            type: object
                          readOnly:
                            description: 'readOnly is Optional: defaults to false (read/write).
                            ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                            type: boolean
                          secretRef:
                            description: 'secretRef is Optional: secretRef is reference
                            to the secret object containing sensitive information
                            to pass to the plugin scripts. This may be empty if no
                            secret object is specified. If the secret object contains
                            more than one secret, all secrets are passed to the plugin
                            scripts.'
                            properties:
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                          - driver
                        type: object
                      flocker:
                        description: flocker represents a Flocker volume attached to
                          a kubelet's host machine. This depends on the Flocker control
                          service being running
                        properties:
                          datasetName:
                            description: datasetName is Name of the dataset stored as
                              metadata -> name on the dataset for Flocker should be
                              considered as deprecated
                            type: string
                          datasetUUID:
                            description: datasetUUID is the UUID of the dataset. This
                              is unique identifier of a Flocker dataset
                            type: string
                        type: object
                      gcePersistentDisk:
                        description: 'gcePersistentDisk represents a GCE Disk resource
                        that is attached to a kubelet''s host machine and then exposed
                        to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        properties:
                          fsType:
                            description: 'fsType is filesystem type of the volume that
                            you want to mount. Tip: Ensure that the filesystem type
                            is supported by the host operating system. Examples: "ext4",
                            "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                            TODO: how do we prevent errors in the filesystem from
                            compromising the machine'
                            type: string
                          partition:
                            description: 'partition is the partition in the volume that
                            you want to mount. If omitted, the default is to mount
                            by volume name. Examples: For volume /dev/sda1, you specify
                            the partition as "1". Similarly, the volume partition
                            for /dev/sda is "0" (or you can leave the property empty).
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            format: int32
                            type: integer
                          pdName:
                            description: 'pdName is unique name of the PD resource in
                            GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            type: string
                          readOnly:
                            description: 'readOnly here will force the ReadOnly setting
                            in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            type: boolean
                        required:
                          - pdName
                        type: object
                      gitRepo:
                        description: 'gitRepo represents a git repository at a particular
                        revision. DEPRECATED: GitRepo is deprecated. To provision
                        a container with a git repo, mount an EmptyDir into an InitContainer
                        that clones the repo using git, then mount the EmptyDir into
                        the Pod''s container.'
                        properties:
                          directory:
                            description: directory is the target directory name. Must
                              not contain or start with '..'.  If '.' is supplied, the
                              volume directory will be the git repository.  Otherwise,
                              if specified, the volume will contain the git repository
                              in the subdirectory with the given name.
                            type: string
                          repository:
                            description: repository is the URL
                            type: string
                          revision:
                            description: revision is the commit hash for the specified
                              revision.
                            type: string
                        required:
                          - repository
                        type: object
                      glusterfs:
                        description: 'glusterfs represents a Glusterfs mount on the
                        host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                        properties:
                          endpoints:
                            description: 'endpoints is the endpoint name that details
                            Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: string
                          path:
                            description: 'path is the Glusterfs volume path. More info:
                            https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: string
                          readOnly:
                            description: 'readOnly here will force the Glusterfs volume
                            to be mounted with read-only permissions. Defaults to
                            false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                            type: boolean
                        required:
                          - endpoints
                          - path
                        type: object
                      hostPath:
                        description: 'hostPath represents a pre-existing file or directory
                        on the host machine that is directly exposed to the container.
                        This is generally used for system agents or other privileged
                        things that are allowed to see the host machine. Most containers
                        will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                        --- TODO(jonesdl) We need to restrict who can use host directory
                        mounts and who can/can not mount host directories as read/write.'
                        properties:
                          path:
                            description: 'path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                          type:
                            description: 'type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                        required:
                          - path
                        type: object
                      iscsi:
                        description: 'iscsi represents an ISCSI Disk resource that is
                        attached to a kubelet''s host machine and then exposed to
                        the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                        properties:
                          chapAuthDiscovery:
                            description: chapAuthDiscovery defines whether support iSCSI
                              Discovery CHAP authentication
                            type: boolean
                          chapAuthSession:
                            description: chapAuthSession defines whether support iSCSI
                              Session CHAP authentication
                            type: boolean
                          fsType:
                            description: 'fsType is the filesystem type of the volume
                            that you want to mount. Tip: Ensure that the filesystem
                            type is supported by the host operating system. Examples:
                            "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                            if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                            TODO: how do we prevent errors in the filesystem from
                            compromising the machine'
                            type: string
                          initiatorName:
                            description: initiatorName is the custom iSCSI Initiator
                              Name. If initiatorName is specified with iscsiInterface
                              simultaneously, new iSCSI interface <target portal>:<volume
                              name> will be created for the connection.
                            type: string
                          iqn:
                            description: iqn is the target iSCSI Qualified Name.
                            type: string
                          iscsiInterface:
                            description: iscsiInterface is the interface Name that uses
                              an iSCSI transport. Defaults to 'default' (tcp).
                            type: string
                          lun:
                            description: lun represents iSCSI Target Lun number.
                            format: int32
                            type: integer
                          portals:
                            description: portals is the iSCSI Target Portal List. The
                              portal is either an IP or ip_addr:port if the port is
                              other than default (typically TCP ports 860 and 3260).
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          readOnly:
                            description: readOnly here will force the ReadOnly setting
                              in VolumeMounts. Defaults to false.
                            type: boolean
                          secretRef:
                            description: secretRef is the CHAP Secret for iSCSI target
                              and initiator authentication
                            properties:
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          targetPortal:
                            description: targetPortal is iSCSI Target Portal. The Portal
                              is either an IP or ip_addr:port if the port is other than
                              default (typically TCP ports 860 and 3260).
                            type: string
                        required:
                          - iqn
                          - lun
                          - targetPortal
                        type: object
                      mountPath:
                        description: Path within the Portworx container at which the
                          volume should be mounted. Must not contain ':'.
                        type: string
                      mountPropagation:
                        description: MountPropagation determines how mounts are propagated
                          from the host to container and the other way around. When
                          not set, MountPropagationNone is used.
                        type: string
                      name:
                        description: Name is unique name for the volume.
                        type: string
                      nfs:
                        description: 'nfs represents an NFS mount on the host that shares
                        a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        properties:
                          path:
                            description: 'path that is exported by the NFS server. More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: string
                          readOnly:
                            description: 'readOnly here will force the NFS export to
                            be mounted with read-only permissions. Defaults to false.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: boolean
                          server:
                            description: 'server is the hostname or IP address of the
                            NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            type: string
                        required:
                          - path
                          - server
                        type: object
                      persistentVolumeClaim:
                        description: 'persistentVolumeClaimVolumeSource represents a
                        reference to a PersistentVolumeClaim in the same namespace.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        properties:
                          claimName:
                            description: 'claimName is the name of a PersistentVolumeClaim
                            in the same namespace as the pod using this volume. More
                            info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            type: string
                          readOnly:
                            description: readOnly Will force the ReadOnly setting in
                              VolumeMounts. Default false.
                            type: boolean
                        required:
                          - claimName
                        type: object
                      photonPersistentDisk:
                        description: photonPersistentDisk represents a PhotonController
                          persistent disk attached and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified.
                            type: string
                          pdID:
                            description: pdID is the ID that identifies Photon Controller
                              persistent disk
                            type: string
                        required:
                          - pdID
                        type: object
                      portworxVolume:
                        description: portworxVolume represents a portworx volume attached
                          and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: fSType represents the filesystem type to mount
                              Must be a filesystem type supported by the host operating
                              system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4"
                              if unspecified.
                            type: string
                          readOnly:
                            description: readOnly defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          volumeID:
                            description: volumeID uniquely identifies a Portworx volume
                            type: string
                        required:
                          - volumeID
                        type: object
                      projected:
                        description: projected items for all in one resources secrets,
                          configmaps, and downward API
                        properties:
                          defaultMode:
                            description: defaultMode are the mode bits used to set permissions
                              on created files by default. Must be an octal value between
                              0000 and 0777 or a decimal value between 0 and 511. YAML
                              accepts both octal and decimal values, JSON requires decimal
                              values for mode bits. Directories within the path are
                              not affected by this setting. This might be in conflict
                              with other options that affect the file mode, like fsGroup,
                              and the result can be other mode bits set.
                            format: int32
                            type: integer
                          sources:
                            description: sources is the list of volume projections
                            items:
                              description: Projection that may be projected along with
                                other supported volume types
                              properties:
                                clusterTrustBundle:
                                  description: "ClusterTrustBundle allows a pod to access
                                  the `.spec.trustBundle` field of ClusterTrustBundle
                                  objects in an auto-updating file. \n Alpha, gated
                                  by the ClusterTrustBundleProjection feature gate.
                                  \n ClusterTrustBundle objects can either be selected
                                  by name, or by the combination of signer name and
                                  a label selector. \n Kubelet performs aggressive
                                  normalization of the PEM contents written into the
                                  pod filesystem.  Esoteric PEM features such as inter-block
                                  comments and block headers are stripped.  Certificates
                                  are deduplicated. The ordering of certificates within
                                  the file is arbitrary, and Kubelet may change the
                                  order over time."
                                  properties:
                                    labelSelector:
                                      description: Select all ClusterTrustBundles that
                                        match this label selector.  Only has effect
                                        if signerName is set.  Mutually-exclusive with
                                        name.  If unset, interpreted as "match nothing".  If
                                        set but empty, interpreted as "match everything".
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of
                                            label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values, a
                                              key, and an operator that relates the
                                              key and values.
                                            properties:
                                              key:
                                                description: key is the label key that
                                                  the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's
                                                  relationship to a set of values. Valid
                                                  operators are In, NotIn, Exists and
                                                  DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string
                                                  values. If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This
                                                  array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator is
                                            "In", and the values array contains only
                                            "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    name:
                                      description: Select a single ClusterTrustBundle
                                        by object name.  Mutually-exclusive with signerName
                                        and labelSelector.
                                      type: string
                                    optional:
                                      description: If true, don't block pod startup
                                        if the referenced ClusterTrustBundle(s) aren't
                                        available.  If using name, then the named ClusterTrustBundle
                                        is allowed not to exist.  If using signerName,
                                        then the combination of signerName and labelSelector
                                        is allowed to match zero ClusterTrustBundles.
                                      type: boolean
                                    path:
                                      description: Relative path from the volume root
                                        to write the bundle.
                                      type: string
                                    signerName:
                                      description: Select all ClusterTrustBundles that
                                        match this signer name. Mutually-exclusive with
                                        name.  The contents of all selected ClusterTrustBundles
                                        will be unified and deduplicated.
                                      type: string
                                  required:
                                    - path
                                  type: object
                                configMap:
                                  description: configMap information about the configMap
                                    data to project
                                  properties:
                                    items:
                                      description: items if unspecified, each key-value
                                        pair in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified which
                                        is not present in the ConfigMap, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain the
                                        '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                            used to set permissions on this file.
                                            Must be an octal value between 0000 and
                                            0777 or a decimal value between 0 and
                                            511. YAML accepts both octal and decimal
                                            values, JSON requires decimal values for
                                            mode bits. If not specified, the volume
                                            defaultMode will be used. This might be
                                            in conflict with other options that affect
                                            the file mode, like fsGroup, and the result
                                            can be other mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path of
                                              the file to map the key to. May not be
                                              an absolute path. May not contain the
                                              path element '..'. May not start with
                                              the string '..'.
                                            type: string
                                        required:
                                          - key
                                          - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    name:
                                      default: ""
                                      description: 'Name of the referent. This field
                                      is effectively required, but due to backwards
                                      compatibility is allowed to be empty. Instances
                                      of this type with an empty value here are almost
                                      certainly wrong. TODO: Add other useful fields.
                                      apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Drop `kubebuilder:default` when controller-gen
                                      doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                      type: string
                                    optional:
                                      description: optional specify whether the ConfigMap
                                        or its keys must be defined
                                      type: boolean
                                  type: object
                                  x-kubernetes-map-type: atomic
                                downwardAPI:
                                  description: downwardAPI information about the downwardAPI
                                    data to project
                                  properties:
                                    items:
                                      description: Items is a list of DownwardAPIVolume
                                        file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                            of the pod: only annotations, labels,
                                            name, namespace and uid are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema the
                                                  FieldPath is written in terms of,
                                                  defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to select
                                                  in the specified API version.
                                                type: string
                                            required:
                                              - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          mode:
                                            description: 'Optional: mode bits used to
                                            set permissions on this file, must be
                                            an octal value between 0000 and 0777 or
                                            a decimal value between 0 and 511. YAML
                                            accepts both octal and decimal values,
                                            JSON requires decimal values for mode
                                            bits. If not specified, the volume defaultMode
                                            will be used. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                            path name of the file to be created. Must
                                            not be absolute or contain the ''..''
                                            path. Must be utf-8 encoded. The first
                                            item of the relative path must not start
                                            with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, requests.cpu
                                            and requests.memory) are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: Specifies the output format
                                                  of the exposed resources, defaults
                                                  to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                select'
                                                type: string
                                            required:
                                              - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        required:
                                          - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                secret:
                                  description: secret information about the secret data
                                    to project
                                  properties:
                                    items:
                                      description: items if unspecified, each key-value
                                        pair in the Data field of the referenced Secret
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified which
                                        is not present in the Secret, the volume setup
                                        will error unless it is marked optional. Paths
                                        must be relative and may not contain the '..'
                                        path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                            used to set permissions on this file.
                                            Must be an octal value between 0000 and
                                            0777 or a decimal value between 0 and
                                            511. YAML accepts both octal and decimal
                                            values, JSON requires decimal values for
                                            mode bits. If not specified, the volume
                                            defaultMode will be used. This might be
                                            in conflict with other options that affect
                                            the file mode, like fsGroup, and the result
                                            can be other mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path of
                                              the file to map the key to. May not be
                                              an absolute path. May not contain the
                                              path element '..'. May not start with
                                              the string '..'.
                                            type: string
                                        required:
                                          - key
                                          - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    name:
                                      default: ""
                                      description: 'Name of the referent. This field
                                      is effectively required, but due to backwards
                                      compatibility is allowed to be empty. Instances
                                      of this type with an empty value here are almost
                                      certainly wrong. TODO: Add other useful fields.
                                      apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Drop `kubebuilder:default` when controller-gen
                                      doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                      type: string
                                    optional:
                                      description: optional field specify whether the
                                        Secret or its key must be defined
                                      type: boolean
                                  type: object
                                  x-kubernetes-map-type: atomic
                                serviceAccountToken:
                                  description: serviceAccountToken is information about
                                    the serviceAccountToken data to project
                                  properties:
                                    audience:
                                      description: audience is the intended audience
                                        of the token. A recipient of a token must identify
                                        itself with an identifier specified in the audience
                                        of the token, and otherwise should reject the
                                        token. The audience defaults to the identifier
                                        of the apiserver.
                                      type: string
                                    expirationSeconds:
                                      description: expirationSeconds is the requested
                                        duration of validity of the service account
                                        token. As the token approaches expiration, the
                                        kubelet volume plugin will proactively rotate
                                        the service account token. The kubelet will
                                        start trying to rotate the token if the token
                                        is older than 80 percent of its time to live
                                        or if the token is older than 24 hours.Defaults
                                        to 1 hour and must be at least 10 minutes.
                                      format: int64
                                      type: integer
                                    path:
                                      description: path is the path relative to the
                                        mount point of the file to project the token
                                        into.
                                      type: string
                                  required:
                                    - path
                                  type: object
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      quobyte:
                        description: quobyte represents a Quobyte mount on the host
                          that shares a pod's lifetime
                        properties:
                          group:
                            description: group to map volume access to Default is no
                              group
                            type: string
                          readOnly:
                            description: readOnly here will force the Quobyte volume
                              to be mounted with read-only permissions. Defaults to
                              false.
                            type: boolean
                          registry:
                            description: registry represents a single or multiple Quobyte
                              Registry services specified as a string as host:port pair
                              (multiple entries are separated with commas) which acts
                              as the central registry for volumes
                            type: string
                          tenant:
                            description: tenant owning the given Quobyte volume in the
                              Backend Used with dynamically provisioned Quobyte volumes,
                              value is set by the plugin
                            type: string
                          user:
                            description: user to map volume access to Defaults to serivceaccount
                              user
                            type: string
                          volume:
                            description: volume is a string that references an already
                              created Quobyte volume by name.
                            type: string
                        required:
                          - registry
                          - volume
                        type: object
                      rbd:
                        description: 'rbd represents a Rados Block Device mount on the
                        host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type of the volume
                            that you want to mount. Tip: Ensure that the filesystem
                            type is supported by the host operating system. Examples:
                            "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                            if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                            TODO: how do we prevent errors in the filesystem from
                            compromising the machine'
                            type: string
                          image:
                            description: 'image is the rados image name. More info:
                            https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          keyring:
                            description: 'keyring is the path to key ring for RBDUser.
                            Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          monitors:
                            description: 'monitors is a collection of Ceph monitors.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          pool:
                            description: 'pool is the rados pool name. Default is rbd.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                          readOnly:
                            description: 'readOnly here will force the ReadOnly setting
                            in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: boolean
                          secretRef:
                            description: 'secretRef is name of the authentication secret
                            for RBDUser. If provided overrides keyring. Default is
                            nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            properties:
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          user:
                            description: 'user is the rados user name. Default is admin.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                            type: string
                        required:
                          - image
                          - monitors
                        type: object
                      readOnly:
                        description: Mounted read-only if true, read-write otherwise
                          (false or unspecified). Defaults to false.
                        type: boolean
                      scaleIO:
                        description: scaleIO represents a ScaleIO persistent volume
                          attached and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                            type: string
                          gateway:
                            description: gateway is the host address of the ScaleIO
                              API Gateway.
                            type: string
                          protectionDomain:
                            description: protectionDomain is the name of the ScaleIO
                              Protection Domain for the configured storage.
                            type: string
                          readOnly:
                            description: readOnly Defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: secretRef references to the secret for ScaleIO
                              user and other sensitive information. If this is not provided,
                              Login operation will fail.
                            properties:
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          sslEnabled:
                            description: sslEnabled Flag enable/disable SSL communication
                              with Gateway, default false
                            type: boolean
                          storageMode:
                            description: storageMode indicates whether the storage for
                              a volume should be ThickProvisioned or ThinProvisioned.
                              Default is ThinProvisioned.
                            type: string
                          storagePool:
                            description: storagePool is the ScaleIO Storage Pool associated
                              with the protection domain.
                            type: string
                          system:
                            description: system is the name of the storage system as
                              configured in ScaleIO.
                            type: string
                          volumeName:
                            description: volumeName is the name of a volume already
                              created in the ScaleIO system that is associated with
                              this volume source.
                            type: string
                        required:
                          - gateway
                          - secretRef
                          - system
                        type: object
                      secret:
                        description: 'secret represents a secret that should populate
                        this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                        properties:
                          defaultMode:
                            description: 'defaultMode is Optional: mode bits used to
                            set permissions on created files by default. Must be an
                            octal value between 0000 and 0777 or a decimal value between
                            0 and 511. YAML accepts both octal and decimal values,
                            JSON requires decimal values for mode bits. Defaults to
                            0644. Directories within the path are not affected by
                            this setting. This might be in conflict with other options
                            that affect the file mode, like fsGroup, and the result
                            can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: items If unspecified, each key-value pair in
                              the Data field of the referenced Secret will be projected
                              into the volume as a file whose name is the key and content
                              is the value. If specified, the listed keys will be projected
                              into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in
                              the Secret, the volume setup will error unless it is marked
                              optional. Paths must be relative and may not contain the
                              '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: 'mode is Optional: mode bits used to
                                  set permissions on this file. Must be an octal value
                                  between 0000 and 0777 or a decimal value between
                                  0 and 511. YAML accepts both octal and decimal values,
                                  JSON requires decimal values for mode bits. If not
                                  specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that
                                  affect the file mode, like fsGroup, and the result
                                  can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: path is the relative path of the file
                                    to map the key to. May not be an absolute path.
                                    May not contain the path element '..'. May not start
                                    with the string '..'.
                                  type: string
                              required:
                                - key
                                - path
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          optional:
                            description: optional field specify whether the Secret or
                              its keys must be defined
                            type: boolean
                          secretName:
                            description: 'secretName is the name of the secret in the
                            pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                            type: string
                        type: object
                      storageos:
                        description: storageOS represents a StorageOS volume attached
                          and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            description: fsType is the filesystem type to mount. Must
                              be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified.
                            type: string
                          readOnly:
                            description: readOnly defaults to false (read/write). ReadOnly
                              here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: secretRef specifies the secret to use for obtaining
                              the StorageOS API credentials.  If not specified, default
                              values will be attempted.
                            properties:
                              name:
                                default: ""
                                description: 'Name of the referent. This field is effectively
                                required, but due to backwards compatibility is allowed
                                to be empty. Instances of this type with an empty
                                value here are almost certainly wrong. TODO: Add other
                                useful fields. apiVersion, kind, uid? More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen
                                doesn''t need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          volumeName:
                            description: volumeName is the human-readable name of the
                              StorageOS volume.  Volume names are only unique within
                              a namespace.
                            type: string
                          volumeNamespace:
                            description: volumeNamespace specifies the scope of the
                              volume within StorageOS.  If no namespace is specified
                              then the Pod's namespace will be used.  This allows the
                              Kubernetes name scoping to be mirrored within StorageOS
                              for tighter integration. Set VolumeName to any name to
                              override the default behaviour. Set to "default" if you
                              are not using namespaces within StorageOS. Namespaces
                              that do not pre-exist within StorageOS will be created.
                            type: string
                        type: object
                      vsphereVolume:
                        description: vsphereVolume represents a vSphere volume attached
                          and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: fsType is filesystem type to mount. Must be
                              a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                              if unspecified.
                            type: string
                          storagePolicyID:
                            description: storagePolicyID is the storage Policy Based
                              Management (SPBM) profile ID associated with the StoragePolicyName.
                            type: string
                          storagePolicyName:
                            description: storagePolicyName is the storage Policy Based
                              Management (SPBM) profile name.
                            type: string
                          volumePath:
                            description: volumePath is the path that identifies vSphere
                              volume vmdk
                            type: string
                        required:
                          - volumePath
                        type: object
                    type: object
                  type: array
              type: object
            status:
              description: StorageClusterStatus is the most recently observed status
                of the storage cluster.
              properties:
                clusterName:
                  description: ClusterName name of the storage cluster
                  type: string
                clusterUid:
                  description: ClusterUID unique ID for the storage cluster
                  type: string
                collisionCount:
                  description: Count of hash collisions for the StorageCluster. The
                    StorageCluster controller uses this field as a collision avoidance
                    mechanism when it needs to create the name of the newest ControllerRevision.
                  format: int32
                  type: integer
                conditions:
                  description: Conditions describes the current conditions of the cluster
                  items:
                    description: ClusterCondition contains condition information for
                      the cluster
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime the condition transitioned from
                          one status to another
                        format: date-time
                        type: string
                      message:
                        description: Message is human readable message indicating details
                          about the current state of the cluster
                        type: string
                      source:
                        description: Source is the name of component
                        type: string
                      status:
                        description: Status of the condition
                        type: string
                      type:
                        description: Type is the type of condition
                        type: string
                    type: object
                  type: array
                desiredImages:
                  description: DesiredImages represents all the desired images of various
                    components
                  properties:
                    alertManager:
                      description: Desired image for AlertManager.
                      type: string
                    autopilot:
                      description: Desired image for autopilot.
                      type: string
                    csiAttacher:
                      description: Desired image for CSI attacher.
                      type: string
                    csiDriverRegistrar:
                      description: Desired image for CSI driver registrar.
                      type: string
                    csiHealthMonitorController:
                      description: Desired image for CSI health monitor controller.
                      type: string
                    csiNodeDriverRegistrar:
                      description: Desired image for CSI node driver registrar.
                      type: string
                    csiProvisioner:
                      description: Desired image for CSI provisioner.
                      type: string
                    csiResizer:
                      description: Desired image for CSI resizer.
                      type: string
                    csiSnapshotController:
                      description: Desired image for CSI snapshot controller.
                      type: string
                    csiSnapshotter:
                      description: Desired image for CSI snapshotter.
                      type: string
                    dynamicPlugin:
                      description: Desired image for dynamic plugin image.
                      type: string
                    dynamicPluginProxy:
                      description: Desired image for dynamic plugin proxy.
                      type: string
                    grafana:
                      description: Desired image for Grafana.
                      type: string
                    kubeControllerManager:
                      description: Desired image for kube controller manager.
                      type: string
                    kubeScheduler:
                      description: Desired image for kube scheduler.
                      type: string
                    logUploader:
                      description: Desired image for log uploader.
                      type: string
                    metricsCollector:
                      description: Desired image for metrics collector.
                      type: string
                    metricsCollectorProxy:
                      description: Desired image for metrics collector proxy.
                      type: string
                    pause:
                      description: Desired image for pause image.
                      type: string
                    prometheus:
                      description: Desired image for Prometheus.
                      type: string
                    prometheusConfigMapReload:
                      description: Desired image for Prometheus config map reload.
                      type: string
                    prometheusConfigReloader:
                      description: Desired image for Prometheus config reloader.
                      type: string
                    prometheusOperator:
                      description: Desired image for Prometheus operator.
                      type: string
                    stork:
                      description: Desired image for stork.
                      type: string
                    telemetry:
                      description: Desired image for Telemetry.
                      type: string
                    telemetryProxy:
                      description: Desired image for telemetry proxy.
                      type: string
                    userInterface:
                      description: Desired image for user interface.
                      type: string
                  type: object
                phase:
                  description: Phase of the StorageCluster is a simple, high-level summary
                    of where the StorageCluster is in its lifecycle. The condition array
                    contains more detailed information about the state of the cluster.
                  type: string
                reason:
                  description: Reason is CamelCase messages split with commas indicating
                    details about why the StorageCluster is in this state.
                  type: string
                storage:
                  description: Storage represents cluster storage details
                  properties:
                    storageNodesPerZone:
                      description: StorageNodesPerZone describes the amount of instances
                        per zone
                      format: int64
                      type: integer
                  type: object
                version:
                  description: Version version of the storage driver image
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: StorageCluster is the Schema for the storageclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: false
      storage: false
      subresources:
        status: {}
