clusterDomain: svc.cluster.local

image:
  repository: asserts/promxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  name:
  # Secrets for the service accout
  imagePullSecrets: []
  annotations: {}

strategy: {}
  # rollingUpdate:
  #   maxSurge: 25%
  #   maxUnavailable: 25%

service:
  type: ClusterIP
  port: 8082
  clusterIP: ""
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  annotations: {}

ingress:
  enabled: false

  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx

  annotations: {}

  extraLabels: {}

  hosts: []
  #   - promxy.domain.com

  path: /

  # pathType is only for k8s >= 1.18
  pathType: Prefix

  ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation

  tls: []
  #   - secretName: promxy-tls
  #     hosts:
  #       - promxy.domain.com

podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  # maxUnavailable: 1

resources: {}

verticalAutoscaler:
  enabled: false
  # updateMode: "Auto"
  # containerPolicies:
  # - containerName: 'promxy'
  #   minAllowed:
  #     cpu: "250m"
  #     memory: "100Mi"
  #   maxAllowed:
  #     cpu: "2000m"
  #     memory: "2048Mi"
  # - containerName: "promxy-server-configmap-reload"
  #   mode: "Off"

extraArgs:
  log-level: "info"

initContainers: []

# common annotations for all resources without their own annotations field
annotations: {}

# extra labels for all resources without their own extraLabels field
extraLabels: {}

# extra labels for the pods deployed
extraPodLabels: {}

# extra annotations for the pods deployed
podAnnotations: {}

nodeSelector: {}

tolerations: []

affinity: {}

extraContainers: []

extraVolumeMounts: []

extraVolumes: []

# existing configmap name
# else config values will be used
existingConfigMap:

configPath: "/etc/promxy/config.yaml"

config:
  ##
  ## Regular prometheus configuration
  ##
  global:
    evaluation_interval: 5s
    # external_labels:
  # remote_write configuration is used by promxy as its local Appender, meaning all
  # metrics promxy would "write" (not export) would be sent to this. Examples
  # of this include: recording rules, metrics on alerting rules, etc.
  remote_write:
    - url: http://localhost:8083/receive
  ##
  ### Promxy configuration
  ##
  # promxy:
  #   server_groups:
  #     - static_configs:
  #         - targets:
  #             - localhost:9090

# alerts defined here are set in
# templates/configmap.yaml they
# are part of the same ConfigMap as
# the prometheus/promxy configuration
alerts: {}
  # groups:
  #   - name: alerts
  #     rules:
  #       - alert: TestMinData
  #         expr: absent(metric_no_data)
