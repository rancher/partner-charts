apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "promxy.fullname" . }}
  labels: {{- include "promxy.labels" . | nindent 4 }}
    {{- with .Values.extraLabels }}
    {{- toYaml . | nindent 4 -}}
    {{- end }}
  {{- with .Values.annotations }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- with .Values.strategy }}
  strategy: {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "promxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "promxy.selectorLabels" . | nindent 8 }}
        {{- with .Values.extraPodLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "promxy.serviceAccountName" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.initContainers }}
      initContainers: {{ include "render-values" ( dict "value" .Values.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        - args:
            - "--config={{ .Values.configPath }}"
            - "--web.enable-lifecycle"
            {{- range $key, $value := .Values.extraArgs }}
            - "--{{ $key }}={{ $value }}"
            {{- end }}
          {{- with .Values.env }}
          env: {{- toYaml . | nindent 12 }}
          {{- end }}
          command:
            - "/bin/promxy"
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: promxy
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /-/healthy
              port: http
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 120
            httpGet:
              path: /-/ready
              port: http
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          ports:
            - containerPort: 8082
              name: http
          volumeMounts:
            - mountPath: "/etc/promxy/"
              name: config
              readOnly: false
          {{- with .Values.extraVolumeMounts }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
        # container to reload configs on configmap change
        - name: promxy-server-configmap-reload
          args:
            - "--volume-dir=/etc/promxy"
            - "--webhook-url=http://localhost:8082/-/reload"
          image: jimmidyson/configmap-reload:v0.5.0
          volumeMounts:
            - mountPath: "/etc/promxy/"
              name: config
              readOnly: false
          resources:
            requests:
              cpu: 0.02
              memory: 20Mi
            limits:
              cpu: 0.02
              memory: 20Mi
      volumes:
        - name: config
          configMap:
            name: {{ include "promxy.configName" .}}
      {{- with .Values.extraVolumes }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
