apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "asserts.grafanaFullname" . }}
  labels: {{- include "asserts.grafanaLabels" . | nindent 4 }}
  {{- if .Values.grafana.annotations }}
  annotations:
  {{- toYaml .Values.grafana.annotations | nindent 4 -}}
  {{- end }}
data:
  datasource.yml: |
    apiVersion: 1
    {{ include "common.tplvalues.render" ( dict "value" .Values.grafana.datasources "context" $) | nindent 4 }}
  dashboard.yml: |
    apiVersion: 1
    {{ include "common.tplvalues.render" ( dict "value" .Values.grafana.providers "context" $) | nindent 4 }}
  grafana.ini: |
    ##################### Grafana Configuration #####################
    #
    # https://github.com/grafana/grafana/blob/master/conf/sample.ini

    [analytics]
    # Server reporting, sends usage counters to stats.grafana.org every 24 hours.
    # No ip addresses are being tracked, only simple counters to track
    # running instances, dashboard and error counts. It is very helpful to us.
    # Change this option to false to disable reporting.
    reporting_enabled = false

    # Set to false to disable all checks to https://grafana.net
    # for new versions (grafana itself and plugins), check is used
    # in some UI views to notify that grafana or plugin update exists
    # This option does not cause any auto updates, nor send any information
    # only a GET request to http://grafana.com to get latest versions
    check_for_updates = false

    [log]
    # Either "console", "file", "syslog". Default is console and  file
    # Use space to separate multiple modes, e.g. "console file"
    mode = console

    # Either "debug", "info", "warn", "error", "critical", default is "info"
    level = info

    [paths]
    # Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)
    data = /var/lib/grafana/data
    # Directory where grafana can store logs
    logs = /var/log/grafana
    # Directory where grafana will automatically scan and look for plugins
    plugins = /var/lib/grafana/plugins
    # folder that contains provisioning config files that grafana will apply on startup and while running.
    provisioning = /etc/grafana/provisioning

    [security]
    # default admin user, created on startup
    admin_user = admin
    # set to true if you want to allow browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. default is false.
    allow_embedding = true
    # set cookie SameSite attribute. defaults to `lax`. can be set to "lax", "strict", "none" and "disabled"
    cookie_samesite = disabled

    [server]
    # The full public facing url you use in browser, used for redirects and emails
    # If you use reverse proxy and sub path specify full url (with sub path)
    ;root_url = %(protocol)s://%(domain)s:%(http_port)s/api-server/v1/grafana
    root_url = %(protocol)s://%(domain)s:%(http_port)s/api-server/v1/grafana
    # Serve Grafana from subpath specified in `root_url` setting. By default it is set to `false` for compatibility reasons.
    serve_from_sub_path = true

    [users]
    # Default UI theme ("dark" or "light")
    default_theme = light
    # Set to true to automatically assign new users to the default organization (id 1)
    auto_assign_org = true
    # Set this value to automatically add new users to the provided organization (if auto_assign_org above is set to true)
    auto_assign_org_id = 1
    # Default role new users will be automatically assigned (if disabled above is set to true)
    auto_assign_org_role = Admin
    # Viewers can edit/inspect dashboard settings in the browser. But not save the dashboard.
    viewers_can_edit = true

    [auth]
    login_cookie_name = asserts_grafana_session

    #################################### Unified Alerting ####################
    # [unified_alerting]
    # Enable the Unified Alerting sub-system and interface. When enabled we'll migrate all of your alert rules and notification channels to the new system. New alert rules will be created and your notification channels will be converted into an Alertmanager configuration. Previous data is preserved to enable backwards compatibility but new data is removed.
    # enabled = true

    #################################### Alerting ############################
    # [alerting]
    # Disable legacy alerting engine & UI features
    # enabled = false
