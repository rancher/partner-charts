{{- if or .Values.authCredentials.ycql.user .Values.authCredentials.ycql.password .Values.authCredentials.ycql.keyspace .Values.authCredentials.ysql.password .Values.authCredentials.ysql.user .Values.authCredentials.ysql.database }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "yugabyte.fullname" . }}-setup-credentials
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: "setup-credentials"
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}"
    component: "{{ .Values.Component }}"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 2
  template:
    metadata:
      name: "setup-credentials"
      labels:
        app: "setup-credentials"
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}"
        component: "{{ .Values.Component }}"
    spec:
      restartPolicy: Never
      containers:
      - name: setup-credentials
        image: "{{ .Values.Image.repository }}:{{ .Values.Image.tag }}"
        env:
        {{- if .Values.authCredentials.ysql.user }}
        - name: YSQL_USER
          value: "{{ .Values.authCredentials.ysql.user }}"
        {{- end }}
        {{- if .Values.authCredentials.ysql.password }}
        - name: YSQL_PASSWORD
          value: "{{ .Values.authCredentials.ysql.password }}"
        {{- end }}
        {{- if .Values.authCredentials.ysql.database }}
        - name: YSQL_DB
          value: "{{ .Values.authCredentials.ysql.database }}"
        {{- end }}
        {{- if .Values.authCredentials.ycql.user }}
        - name: YCQL_USER
          value: "{{ .Values.authCredentials.ycql.user }}"
        {{- end }}
        {{- if .Values.authCredentials.ycql.password }}
        - name: YCQL_PASSWORD
          value: "{{ .Values.authCredentials.ycql.password }}"
        {{- end }}
        {{- if .Values.authCredentials.ycql.keyspace }}
        - name: YCQL_KEYSPACE
          value: "{{ .Values.authCredentials.ycql.keyspace }}"
        {{- end }}
        {{- if .Values.tls.enabled }}
        - name: SSL_CERTFILE
          value: "/root/.yugabytedb/root.crt"
        {{- end }}
        command:
        - 'bash'
        - '/home/yugabyte/bin/setup-credentials/setup-credentials.sh'
        volumeMounts:
        - name: setup-credentials-script
          mountPath: "/home/yugabyte/bin/setup-credentials"
        {{- if .Values.tls.enabled }}
        - name: yugabyte-tls-client-cert
          mountPath: "/root/.yugabytedb/"
        {{- end }}
      volumes:
      - name: setup-credentials-script
        configMap:
          name: {{ include "yugabyte.fullname" . }}-setup-credentials-script
      {{- if .Values.tls.enabled }}
      - name: yugabyte-tls-client-cert
        secret:
          secretName: yugabyte-tls-client-cert
          defaultMode: 256
      {{- end }}
{{- end }}
