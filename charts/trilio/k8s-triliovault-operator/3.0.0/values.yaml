## TrilioVault Operator
registry: "eu.gcr.io/triliovault"
operator-webhook-init:
  repository: operator-webhook-init
k8s-triliovault-operator:
  repository: k8s-triliovault-operator
tag: "3.0.0"
# create image pull secrets and specify the name here.
imagePullSecret: ""
priorityClassName: ""
preflight:
  enabled: false
  repository: preflight
  imageTag: "v1.2.1"
  logLevel: "INFO"
  cleanupOnFailure: false
  imagePullSecret: ""
  limits: ""
  localRegistry: ""
  nodeSelector: ""
  pvcStorageRequest: ""
  requests: ""
  storageClass: ""
  volumeSnapshotClass: ""
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
masterEncryptionKeyConfig:
  name: "triliovault-master-encryption-key"
  namespace: ""
image:
  pullPolicy: Always
tls:
  secretName: "helm-client-certs"
  verify: false
  enable: false
  keyFile: "tls.key"
  certFile: "tls.crt"
  caContent: ""
  hostname: ""
nameOverride: ""
replicaCount: 1
proxySettings:
  PROXY_ENABLED: false
  NO_PROXY: ""
  HTTP_PROXY: ""
  HTTPS_PROXY: ""
  CA_BUNDLE_CONFIGMAP: ""
podSpec:
  hostIPC: false
  hostNetwork: false
  hostPID: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
securityContext:
  allowPrivilegeEscalation: false
  privileged: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001
  capabilities:
    drop:
      - ALL
installTVK:
  enabled: true
  applicationScope: Cluster
  tvkInstanceName: ""
  ingressConfig:
    host: ""
    tlsSecretName: ""
    annotations: {}
    ingressClass: ""
  ComponentConfiguration:
    ingressController:
      enabled: true
      service:
        type: NodePort
observability:
  enabled: false
  name: "tvk-integration"
  logging:
    loki:
      enabled: true
      fullnameOverride: "loki"
    promtail:
      enabled: true
      fullnameOverride: "promtail"
      config:
        clients:
          - url: http://loki:3100/loki/api/v1/push
  monitoring:
    prometheus:
      enabled: true
      fullnameOverride: "prom"
      server:
        enabled: true
        fullnameOverride: "prom-server"
        persistentVolume:
          enabled: false
      kubeStateMetrics:
        enabled: false
      nodeExporter:
        enabled: false
      pushgateway:
        enabled: false
      alertmanager:
        enabled: false
  visualization:
    grafana:
      enabled: true
      adminPassword: "admin123"
      fullnameOverride: "grafana"
      service:
        type: ClusterIP
# these annotations will be added to all tvk pods
podAnnotations:
  sidecar.istio.io/inject: false
# these labels will be added to all tvk pods
podLabels:
  sidecar.portshift.io/inject: false
relatedImages:
  tags:
    tvk: "3.0.0"
    event: "3.0.0"
  control-plane:
    image: "control-plane"
  metamover:
    image: "datamover"
  datamover:
    image: "datamover"
  datastore-attacher:
    image: "datamover"
  admission-webhook:
    image: "control-plane"
  analyzer:
    image: "control-plane"
  ingress-controller:
    image: "ingress-controller"
    tag: "v1.1.1"
  kube-certgen:
    image: "kube-certgen"
    tag: "v1.1.1"
  exporter:
    image: "control-plane"
  web:
    image: "web"
  web-backend:
    image: "control-plane"
  backup-scheduler:
    image: "control-plane"
  backup-cleaner:
    image: "datamover"
  target-browser:
    image: "datamover"
  backup-retention:
    image: "datamover"
  hook:
    image: "control-plane"
  resource-cleaner:
    image: "control-plane"
  tvk-init:
    image: "control-plane"
  dex:
    image: "dex"
    tag: "2.30.2"
  minio:
    image: "minio"
    tag: "20211229"
  nats:
    image: "nats"
    tag: "2.8.3"
  service-manager:
    image: "event-stack"
  syncer:
    image: "event-stack"
  watcher:
    image: "event-stack"
  continuous-restore:
    image: "datamover"
svcAccountName: ""
