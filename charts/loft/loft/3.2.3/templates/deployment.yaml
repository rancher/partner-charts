apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "loft.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "loft.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    {{- with .Values.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- if or .Values.annotations .Values.commonAnnotations }}
  annotations:
    {{- with .Values.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with .Values.commonAnnotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ template "loft.fullname" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      {{- if (eq (int .Values.replicaCount) 1) }}
      maxUnavailable: 0
      {{- else }}
      maxUnavailable: 1
      {{- end }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "loft.fullname" . }}
        release: {{ .Release.Name }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ template "loft.serviceAccountName" . }}
      volumes:
      {{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 8 }}
      {{- end }}
      {{- if .Values.audit }}
      {{- if .Values.audit.persistence.enabled }}
      - name: audit-log
        persistentVolumeClaim:
          claimName: {{ template "loft.fullname" . }}-audit
      {{- else if .Values.audit.enableSideCar }}
      - name: audit-log
        emptyDir: {}
      {{- end }}
      {{- end }}
      containers:
      - name: manager
        {{- if .Values.image }}
        image: "{{ .Values.image }}"
        {{- else }}
        image: "ghcr.io/loft-sh/loft:{{ .Chart.Version }}"
        {{- end }}
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 10443
        {{- if .Values.livenessProbe }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          failureThreshold: 20
          initialDelaySeconds: 5
          periodSeconds: 10
        {{- end }}
        {{- end }}
        {{- if .Values.readinessProbe }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          failureThreshold: 20
          initialDelaySeconds: 5
          periodSeconds: 10
        {{- end }}
        {{- end }}
        env:
        - name: ADMIN_EMAIL
          value: {{ .Values.admin.email | quote }}
        {{- if .Values.admin.password }}
        - name: ADMIN_PASSWORD_HASH
          value: {{ .Values.admin.password | sha256sum | quote }}
        {{- end }}
        {{- range $key, $value := .Values.envValueFrom }}
        - name: {{ $key | quote }}
          valueFrom:
{{ toYaml $value | indent 12 }}
        {{- end }}
        {{- if .Values.tls }}
        {{- if .Values.tls.enabled }}
        - name: PROXY_TLS_CERT
          valueFrom:
            secretKeyRef:
              name: {{ .Values.tls.secret }}
              key: {{ .Values.tls.crtKey }}
        - name: PROXY_TLS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.tls.secret }}
              key: {{ .Values.tls.keyKey }}
        {{- end }}
        {{- end }}
        {{- range $key, $value := .Values.env }}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
        {{- end }}
        volumeMounts:
        {{- if .Values.volumeMounts }}
{{ toYaml .Values.volumeMounts | indent 10 }}
        {{- end }}
        {{- if .Values.audit }}
        {{- if or .Values.audit.enableSideCar .Values.audit.persistence.enabled }}
        - mountPath: /var/log/loft
          name: audit-log
        {{- end }}
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
      {{- if .Values.securityContext }}
      {{- if .Values.securityContext.enabled }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          runAsNonRoot: true
      {{- end }}
      {{- end }}
      {{- if .Values.audit }}
      {{- if .Values.audit.enableSideCar }}
      - name: audit
        image: "{{ .Values.audit.image }}"
        command: ["sh"]
        args: ["-c", "touch /var/log/loft/audit.log && tail -F /var/log/loft/audit.log"]
        volumeMounts:
        - mountPath: /var/log/loft
          name: audit-log
      {{- end }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}