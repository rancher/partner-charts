{{ $cfCommonTplSemver := printf "cf-common-%s" (index .Subcharts "cf-common").Chart.Version }}
{{ $values := .Values.runtime.patch }}
{{- if $values.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "runtime.fullname" . }}-patch
  labels:
    {{- include "runtime.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "5"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    {{- with $values.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- with $values.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ . }}
  {{- end }}
  {{- with $values.backoffLimit }}
  backoffLimit: {{ . | int }}
  {{- end }}
  template:
    metadata:
      name: {{ include "runtime.fullname" . }}-patch
      labels:
        {{- include "runtime.labels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml $values.podSecurityContext | nindent 8 }}
      containers:
      - name: patch-runtime
        image: {{ include (printf "%s.image.name" $cfCommonTplSemver ) (dict "image" $values.image "context" .) }}
        imagePullPolicy: {{ $values.image.pullPolicy | default "Always" }}
        command:
        - "/bin/bash"
        args:
        - -ec
        - |
          codefresh auth create-context --api-key $API_KEY --url $API_HOST
          cat /usr/share/extras/runtime.yaml
          codefresh get re
{{- if .Values.runtime.agent }}
          codefresh patch re -f /usr/share/extras/runtime.yaml
{{- else }}
          codefresh patch sys-re -f /usr/share/extras/runtime.yaml
{{- end }}
        env:
        - name: API_KEY
          {{- include "runtime.installation-token-env-var-value" . | indent 10}}
        - name: API_HOST
          value: {{ include "runtime.runtime-environment-spec.codefresh-host" . }}
          {{- include (printf "%s.env-vars" $cfCommonTplSemver) (dict "Values" $values.env "context" .) | nindent 8 }}
        volumeMounts:
        - name: config
          mountPath: /usr/share/extras/runtime.yaml
          subPath: runtime.yaml
      {{- with $values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      restartPolicy: OnFailure
      volumes:
      - name: config
        configMap:
          name: {{ include "runtime.fullname" . }}-spec
{{- end }}
