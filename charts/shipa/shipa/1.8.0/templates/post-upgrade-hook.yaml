{{- if .Values.shipaCluster.enablePostUpgradeHookForRootClusterUpdate }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "shipa.fullname" . }}-post-upgrade-config
  labels: {{- include "shipa.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "post-upgrade"
    "helm.sh/hook-weight": "-1"
data:
  post-upgrade.sh: |
{{ .Files.Get "scripts/post-upgrade.sh" | indent 4 }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ template "shipa.fullname" . }}-post-upgrade-hook-{{ .Release.Revision }}"
  labels: {{- include "shipa.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "post-upgrade"
    "helm.sh/hook-weight": 0"
    "helm.sh/hook-delete-policy": hook-succeeded
    sidecar.istio.io/inject: "false"
spec:
  backoffLimit: 0
  template:
    metadata:
      name: "{{ template "shipa.fullname" . }}-post-upgrade-hook-{{ .Release.Revision }}"
      labels:
        shipa-hook: "post-upgrade"
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      terminationGracePeriodSeconds: 3
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ template "shipa.fullname" . }}
      {{- else }}
      serviceAccountName: default
      {{- end }}
      restartPolicy: Never
      containers:
        - name: post-upgrade-hook
        {{- if .Values.cli.image }}
          image: "{{ .Values.cli.image }}"
        {{- else }}
          image: "{{ .Values.images.shipaRepositoryDirname }}/{{ .Values.cli.repositoryBasename }}:{{ .Values.cli.tag }}"
        {{- end }}
          command:
            - /scripts/post-upgrade.sh
          imagePullPolicy: {{ .Values.cli.pullPolicy }}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: shipa-conf
              mountPath: /etc/shipa-default/
            - name: config-dir
              mountPath: /etc/shipa/
          env:
            - name: RELEASE_NAME
              value: {{ template "shipa.fullname" . }}
            - name: SHIPA_INTERNAL_DNS
              value:  "{{ template "shipa.fullname" . }}-api.{{ .Release.Namespace }}.svc.{{ .Values.shipaCluster.clusterDomain }}"
            - name: SHIPA_ORGANIZATION_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ template "shipa.fullname" . }}-defaults-configmap
                  key: shipa-org-id
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SHIPA_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "shipa.fullname" . }}-api-init-secret
                  key: username
            - name: SHIPA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "shipa.fullname" . }}-api-init-secret
                  key: password
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      volumes:
        - name: config-dir
          emptyDir: {}
        - name: shipa-conf
          configMap:
            name: {{ template "shipa.fullname" . }}-api-config
            items:
              - key: shipa.conf
                path: shipa.conf
        - name: scripts
          configMap:
            defaultMode: 0755
            name: {{ template "shipa.fullname" . }}-post-upgrade-config
{{- end }}
