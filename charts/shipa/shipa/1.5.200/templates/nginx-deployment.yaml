apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "shipa.fullname" . }}-nginx-ingress
  labels: {{- include "shipa.labels" . | nindent 4 }}
    shipa.io/shipa-api-ingress-controller: "true"
  annotations:
    sidecar.istio.io/inject: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ template "shipa.fullname" . }}-nginx-ingress
  template:
    metadata:
      labels:
        name: {{ template "shipa.fullname" . }}-nginx-ingress
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      # wait up to 30 seconds for the drain of connections
      terminationGracePeriodSeconds: 30
      serviceAccountName: {{ template "shipa.fullname" . }}-nginx-ingress-serviceaccount
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: nginx-ingress-controller
          image: k8s.gcr.io/ingress-nginx/controller:v1.1.0@sha256:f766669fdcf3dc26347ed273a55e754b427eb4411ee075a53f30718b4499076a
          args:
            - /nginx-ingress-controller
            - --election-id={{ template "shipa.fullname" . }}-leader
            - --configmap=$(POD_NAMESPACE)/{{ template "shipa.fullname" . }}-nginx
            - --tcp-services-configmap=$(POD_NAMESPACE)/{{ template "shipa.fullname" . }}-nginx-tcp-services
            - --publish-service=$(POD_NAMESPACE)/{{ template "shipa.fullname" . }}-ingress-nginx
            - --ingress-class=shipa-nginx-ingress
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsUser: 101
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            {{- if not .Values.shipaApi.secureIngressOnly }}
            - name: shipa
              containerPort: {{ .Values.shipaApi.port }}
              protocol: TCP
            {{- end }}
            - name: shipa-secure
              containerPort: {{ .Values.shipaApi.securePort }}
              protocol: TCP
            {{ if not .Values.ketch.enabled }}
            - name: etcd
              containerPort: 2379
              protocol: TCP
            {{- end }}
            {{- if .Values.ketch.enabled }}
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            {{- end }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
