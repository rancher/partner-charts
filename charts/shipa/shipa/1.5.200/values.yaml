# Default values for shipa.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

auth:
  dummyDomain: "@shipa.io"

shipaApi:
  port: 8080
  securePort: 8081
  etcdPort: 2379
  image: shipasoftware/api:c3e1157d643795f8dbc2e9f300c3be60f9e598fc
  pullPolicy: Always
  debug: false
  cnames: []
  allowRestartIngressControllers: true
  allowMigrationDowntime: true
  appAutoDiscoveryEnabled: true
  isCAEndpointDisabled: false
  secureIngressOnly: false

license: ""

shipaCluster:
  # use debug logs in traefik ingress controller
  debug: false

  # non ketch only
  # kubernetes service type for traefik ingress controller (LoadBalancer/ClusterIP)
  serviceType: LoadBalancer

  # non ketch only
  # override traefik ingress controller ip address
  # ip: 10.100.10.11

  # use debug logs in istio ingress controller
  istioDebug: false

  # kubernetes service type for istio ingress controller (LoadBalancer/ClusterIP)
  istioServiceType: LoadBalancer

  # override istio ingress controller ip address
  # istioIp: 10.100.10.11
  
  # ketch only
  # kubernetes service type for traefik ingress controller (LoadBalancer/ClusterIP)
  traefikServiceType: LoadBalancer

  # ketch only
  # override traefik ingress controller ip address
  # traefikIp: 10.100.10.11

# populate with docker hub username to use authenticated user. Secrets should be added to cluster outside shipa helm chart
# imagePullSecrets: ""

service:
  nginx:
    enabled: true

    # kubernetes service type for nginx ingress (LoadBalancer/ClusterIP)
    serviceType: LoadBalancer

    # the following *NodePort values will be used only if serviceType is "NodePort"
    # apiNodePort specifies "nodePort" for shipa-api over http
    #apiNodePort: 32200
    # secureNodePort specifies "nodePort" for shipa-api over https
    #secureApiNodePort: 32201
    # etcdNodePort specifies "nodePort" for etcd
    #etcdNodePort: 32202

    # override nginx ingress controller ip address based on serviceType
    #ip: 10.100.10.10

    # If set, defines nginx configuration as described in the manual:
    # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap
    # there are default values, take a look at templates/nginx-configmap.yaml
    #config:
    #  proxy-body-size: "128M"

dashboard:
  enabled: true
  image: shipasoftware/dashboard:v1.5.0

etcd:
  debug: false
  persistence:
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.
    ##
    ## storageClass: ""
    accessMode: "ReadWriteOnce"
    size: 10Gi

postgres:
  source:
    ## Leave blank to default to {{ template "shipa.fullname" . }}-postgres.{{ .Release.Namespace }} e.g. shipa-postgres.shipa-system
    host:
    port: 5432
    user: postgres
    ## Leave blank to generate a random value
    password:
    ## options for postgres.source.sslmode are "require", "verify-full", "verify-ca", or "disable
    sslmode: disable
  ## set postgres.create to false to avoid creating a postgres instance
  create: true
  persistence:
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.
    ##
    ## storageClass: ""
    accessMode: "ReadWriteOnce"
    size: 10Gi

cli:
  image: shipasoftware/cli:06efa27f05ba858e8b5f82ce2f9bdf7533508656
  pullPolicy: Always

metrics:
  image: shipasoftware/metrics:v0.0.7
  pullPolicy: Always

  # Extra configuration to add to prometheus.yaml
  # extraPrometheusConfiguration: |
  #   remote_read:
  #      - url: http://localhost:9268/read
  #   remote_write:
  #      - url: http://localhost:9268/write
  extraPrometheusConfiguration:
  #password: hardcoded
  prometheusArgs: "--storage.tsdb.retention.time=1d"

busybody:
  image: shipasoftware/bb:v0.0.10

shipaController:
  image: shipasoftware/image-controller:v0.0.18

shipaNodeTraefik:
  user: admin

# --------------------------------------------------------------------------

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

rbac:
  enabled: true

# Connect your own instance of mongodb
externalMongodb:
  # url must follow Standard Connection String Format as described here: https://docs.mongodb.com/manual/reference/connection-string/#standard-connection-string-format
  # For a sharded cluster it should be a comma separated list of hosts:
  # e.g. "mongos0.example.com:27017,mongos1.example.com:27017,mongos2.example.com:27017"
  # Due to some limitations of the dependencies, we currently do not support url with 'DNS Seed List Connection Format'.
  url: < database url >
  auth:
    username: < username >
    password: < password >
  # Enable/Disable TLS when connectiong to external DB instance.
  tls:
    enable: true

# tags are standard way to handle chart dependencies.
tags:
  # Set defaultDB to 'false' when using external DB to not install default DB.
  # It will also prevent creating Persistent Volumes.
  defaultDB: true

certManager:
  installUrl: https://github.com/jetstack/cert-manager/releases/download/v1.5.3/cert-manager.yaml

# Default DB config
mongodb-replicaset:
  replicaSetName: rs0
  replicas: 1
  port: 27017
  nodeSelector:
    kubernetes.io/os: linux
  auth:
    enabled: false
  installImage:
    name: k8s.gcr.io/mongodb-install
    tag: 0.6
    pullPolicy: IfNotPresent
  image:
    name: mongo
    tag: latest
    pullPolicy: IfNotPresent
  persistentVolume:
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.
    ##
    ## storageClass: ""
    enabled: true
    size: 10Gi
  tls:
    enabled: false
  configmap:

shipaCloud:
  enabled: false
  shipaPayApi:
    host: ""
    token: ""
  googleRecaptcha:
    sitekey: ""
    secret: ""
  smartlook:
    projectKey: ""
  launchDarkly:
    sdkKey: ""

ketch:
  enabled: true
  image: shipasoftware/ketch:009a4d673d9693dcec331b9fed6a39dfafc6e0ec
  metricsAddress: 127.0.0.1:8080
