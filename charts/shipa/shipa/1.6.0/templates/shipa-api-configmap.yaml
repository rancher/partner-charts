apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "shipa.fullname" . }}-api-config
  labels: {{- include "shipa.labels" . | nindent 4 }}
data:
  shipa.conf: |-
    shipaVersion: {{ .Chart.Version }}
    tls-listen: "0.0.0.0:{{ .Values.shipaApi.securePort }}"
    listen: "0.0.0.0:{{ .Values.shipaApi.port }}"
    host: https://SHIPA_PUBLIC_IP:{{ .Values.shipaApi.securePort }}
    use-tls: true
    shipaCloud:
      enabled: {{ .Values.shipaCloud.enabled }}
    tls:
      server-cert: /certs/api-server.crt
      server-key: /certs/api-server.key

    database:
     {{- if not .Values.tags.defaultDB }}
      url: {{ .Values.externalMongodb.url}}
      tls: {{ .Values.externalMongodb.tls.enable }}
     {{ else }}
      url: {{ .Release.Name }}-mongodb-replicaset:27017
      tls: false
     {{- end }}
      name: shipa
      username: $DB_USERNAME
      password: $DB_PASSWORD
    license: {{ .Values.license }}
    organization:
      id: SHIPA_ORGANIZATION_ID
    dashboard:
      enabled: $DASHBOARD_ENABLED
      image: $DASHBOARD_IMAGE
      envs:
        SHIPA_ADMIN_USER: {{ .Values.auth.adminUser | quote }}
        SHIPA_CLOUD: {{ .Values.shipaCloud.enabled | quote }}
        SHIPA_TARGETS: {{ join "," .Values.shipaApi.cnames }}
        SHIPA_PAY_API_HOST: {{ .Values.shipaCloud.shipaPayApi.host }}
        SHIPA_PAY_API_TOKEN: {{ .Values.shipaCloud.shipaPayApi.token }}
        GOOGLE_RECAPTCHA_SITEKEY: {{ .Values.shipaCloud.googleRecaptcha.sitekey }}
        GOOGLE_RECAPTCHA_SECRET: {{ .Values.shipaCloud.googleRecaptcha.secret }}
        SMARTLOOK_PROJECT_KEY: {{ .Values.shipaCloud.smartlook.projectKey }}
        LAUNCH_DARKLY_SDK_KEY: {{ .Values.shipaCloud.launchDarkly.sdkKey }}
    auth:
      admin-email: {{ .Values.auth.adminUser | quote }}
      dummy-domain: {{ .Values.auth.dummyDomain | quote }}
      token-expire-days: 2
      hash-cost: 4
      user-registration: true
    user-activation:
      cert: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6TXIwd3hETklDcm9JN3VEVkdoTgpFZytVbTdkQzk3NVZpM1l1NnJHUUdlc3ZwZTY5T2NhT0VxZHFML0NNWGVRMW1oTVFtUnplQnlxWEJ1Q2xOemphCjlEbjV2WTBlVnNIZUhuVTJ4bkkyV1dSR3JjUE1mRGJuRzlDSnNZQmdHd3A2eDcrYVR2RXZCRFBtS3YrcjdOcysKUXhhNzBFZEk4NTZLMWQyTTQ1U3RuZW1hcm51cjdOTDdGb2VsS1FWNGREd1hxU2EvVW1tdHdOOGNSTENUQ0N4NQpObkVya2UrTWo1RFFqTW5TUlRHbjFxOE91azlOUXRxNDlrbFMwMUhIQTJBWnR6ZExteTMrTktXRVZta3Z0cGgxClJseHBtZVQ5SERNbHI5aFI3U3BidnRHeVZVUG1pbXVYWFA4cXdOcHZab01Ka3hWRm4zbWNRVHRMbk8xa0Jjb1cKZVFJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==
    provisioner: kubernetes
    metrics:
      host: {{ template "shipa.fullname" . }}-metrics
      password: $METRICS_PASSWORD

      # section contains configuration of Prometheus Metrics Exporter
      prometheus-metrics-exporter:
        image: shipasoftware/prometheus-metrics-exporter:v0.0.7

    docker:
      cluster:
        storage: mongodb
        mongo-database: cluster
      collection: docker
      registry-scheme: https
      repository-namespace: shipa
      router: traefik
      deploy-cmd: /var/lib/shipa/deploy
      run-cmd:
        bin: /var/lib/shipa/start
        port: "8888"
      tls:
        root-path: /certs
      auto-scale:
        enabled: true
        run-interval: $DOCKER_AUTOSCALE_RUN_INTERVAL
    routers:
      traefik:
        type: traefik
        domain: shipa.cloud
        kv:
          endpoint: {{ template "shipa.fullname" . }}-etcd:2379
          username: root
          password: $ETCD_PASSWORD
          ca: /certs/ca.pem
          client-key: /certs/etcd-client.key
          client-cert: /certs/etcd-client.crt
      istio:
        type: istio
      nginx:
        type: nginx
        serviceType: {{ .Values.service.nginx.serviceType }}
        ip: {{ .Values.service.nginx.ip }}
    queue:
      mongo-database: queuedb
    quota:
      units-per-app: 4
      apps-per-user: 8
    log:
      disable-syslog: true
      use-stderr: true
    clair:
      server: http://{{ template "shipa.fullname" . }}-clair:6060
      disabled: false
    kubernetes:
      # pod name is used by a leader election thing as an identifier for the current shipa-api instance
      pod-name: $POD_NAME
      pod-namespace: $POD_NAMESPACE
      core-services-address: SHIPA_PUBLIC_IP
      etcd-port: {{ .Values.shipaApi.etcdPort }}
      use-pool-namespaces: true
      remote-cluster-ingress:
        http-port: 80
        https-port: 443
        protected-port: 31567
        service-type: LoadBalancer
      ketch:
        enabled: {{ .Values.ketch.enabled }}
        image: {{ .Values.ketch.image }}
        metrics-address: {{ .Values.ketch.metricsAddress }}
      cert-manager:
        install-url: {{ .Values.certManager.installUrl }}

      cluster-update:
       # it's a default value that specifies if cluster-update operations can restart ingress controllers
        ingress-restart-is-allowed: {{ .Values.shipaApi.allowRestartIngressControllers }}

      app-auto-discovery:
        enabled: {{ .Values.shipaApi.appAutoDiscoveryEnabled }}

    debug: {{ .Values.shipaApi.debug }}
    node-traefik:
      image: {{ .Values.shipaNodeTraefik.image }}
      user: {{ .Values.shipaNodeTraefik.user }}
      password: $NODE_TRAEFIK_PASSWORD
    certificates:
      root: /certs/
      ca: ca.pem
      ca-key: ca-key.pem
      client-ca: client-ca.crt
      client-ca-key: client-ca.key
      is-ca-endpoint-disabled: {{ .Values.shipaApi.isCAEndpointDisabled }}

    shipa-controller:
      image: {{ .Values.shipaController.image }}

    busybody:
      image: {{ .Values.busybody.image }}
      socket: /var/run/docker.sock

    signatures: single # multiple/single
    launch-darkly:
      api-key: {{ .Values.shipaCloud.launchDarkly.sdkKey }}
