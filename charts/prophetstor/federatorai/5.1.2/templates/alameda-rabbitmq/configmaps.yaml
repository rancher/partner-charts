---
apiVersion: v1
data:
  definitions.json: |
    {
      "bindings": [
        {
          "arguments": {},
          "destination": "dispatcher",
          "destination_type": "queue",
          "routing_key": "TOPIC_OBSERVATION",
          "source": "EXCHANGE_NAME_NOTIFICATION_TOPIC",
          "vhost": "/"
        },
        {
          "arguments": {},
          "destination": "data_adapter",
          "destination_type": "queue",
          "routing_key": "TOPIC_RESOURCE_CONFIG",
          "source": "EXCHANGE_NAME_NOTIFICATION_TOPIC",
          "vhost": "/"
        },
        {
          "arguments": {},
          "destination": "historical_data_adapter",
          "destination_type": "queue",
          "routing_key": "TOPIC_RESOURCE_CONFIG",
          "source": "EXCHANGE_NAME_NOTIFICATION_TOPIC",
          "vhost": "/"
        },
        {
          "arguments": {},
          "destination": "data_adapter",
          "destination_type": "queue",
          "routing_key": "TOPIC_RESOURCE_INSTANCE",
          "source": "EXCHANGE_NAME_NOTIFICATION_TOPIC",
          "vhost": "/"
        },
        {
          "arguments": {},
          "destination": "dispatcher",
          "destination_type": "queue",
          "routing_key": "TOPIC_RESOURCE_INSTANCE",
          "source": "EXCHANGE_NAME_NOTIFICATION_TOPIC",
          "vhost": "/"
        },
        {
          "arguments": {},
          "destination": "historical_data_adapter",
          "destination_type": "queue",
          "routing_key": "TOPIC_RESOURCE_INSTANCE",
          "source": "EXCHANGE_NAME_NOTIFICATION_TOPIC",
          "vhost": "/"
        },
        {
          "arguments": {},
          "destination": "dispatcher",
          "destination_type": "queue",
          "routing_key": "TOPIC_SYSTEM",
          "source": "EXCHANGE_NAME_NOTIFICATION_TOPIC",
          "vhost": "/"
        }
      ],
      "exchanges": [
        {
          "arguments": {},
          "auto_delete": false,
          "durable": true,
          "name": "EXCHANGE_NAME_NOTIFICATION_TOPIC",
          "type": "topic",
          "vhost": "/"
        }
      ],
      "queues": [
        {
          "arguments": {
            "x-max-priority": 9,
            "x-message-deduplication": false
          },
          "auto_delete": false,
          "durable": true,
          "name": "dispatcher",
          "type": "classic",
          "vhost": "/"
        },
        {
          "arguments": {
            "x-max-priority": 9,
            "x-message-deduplication": false
          },
          "auto_delete": false,
          "durable": true,
          "name": "data_adapter",
          "type": "classic",
          "vhost": "/"
        },
        {
          "arguments": {
            "x-max-priority": 9,
            "x-message-deduplication": false
          },
          "auto_delete": false,
          "durable": true,
          "name": "historical_data_adapter",
          "type": "classic",
          "vhost": "/"
        },
        {
          "arguments": {
            "x-message-deduplication": true
          },
          "auto_delete": false,
          "durable": true,
          "name": "recommendation",
          "type": "classic",
          "vhost": "/"
        }
      ],
      "vhosts": [
        {
          "limits": [],
          "metadata": {
            "description": "Default virtual host",
            "tags": []
          },
          "name": "/"
        }
      ]
    }
kind: ConfigMap
metadata:
  annotations:
{{- if .Values.global.commonAnnotations }}
{{- include "render-value" ( dict "value" .Values.global.commonAnnotations "context" .) | nindent 4 }}
{{- end }}
  labels:
{{- if .Values.global.commonLabels }}
{{- include "render-value" ( dict "value" .Values.global.commonLabels "context" .) | nindent 4 }}
{{- end }}
    app.kubernetes.io/part-of: federatorai
    app: alameda
  name: rabbitmq-config
  namespace: {{ .Release.Namespace }}
