---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
{{- if .Values.global.commonAnnotations }}
{{- include "render-value" ( dict "value" .Values.global.commonAnnotations "context" .) | nindent 4 }}
{{- end }}
  labels:
{{- if .Values.global.commonLabels }}
{{- include "render-value" ( dict "value" .Values.global.commonLabels "context" .) | nindent 4 }}
{{- end }}
    app.kubernetes.io/part-of: federatorai
    app: alameda
    component: alameda-ai
  name: alameda-ai
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alameda
      component: alameda-ai
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
{{- if .Values.global.podAnnotations }}
{{- include "render-value" ( dict "value" .Values.global.podAnnotations "context" .) | nindent 8 }}
{{- end }}
      labels:
{{- if .Values.global.podLabels }}
{{- include "render-value" ( dict "value" .Values.global.podLabels "context" .) | nindent 8 }}
{{- end }}
        app.kubernetes.io/part-of: federatorai
        app: alameda
        component: alameda-ai
      name: alameda-ai
    spec:
      affinity:
{{- if .Values.alamedaAi.affinity }}
{{- include "render-value" ( dict "value" .Values.alamedaAi.affinity "context" .) | nindent 8 }}
{{- end }}
      containers:
        - env:
            - name: NAMESPACE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: LOG_LEVEL
              value: warning
            - name: DATAHUB_ADDRESS
              value: alameda-datahub.{{ .Release.Namespace }}.svc:50050
            - name: PREDICT_QUEUE_URL
              value: amqp://admin:adminpass@alameda-rabbitmq.{{ .Release.Namespace }}.svc:5672
            - name: MAX_CPU_USAGE_PERCENTAGE
              value: "0.5"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: FEDERATORAI_MAXIMUM_LOG_SIZE
              value: "1932735283"
{{- if .Values.alamedaAi.image }}
          image: {{ .Values.alamedaAi.image }}
{{- else }}
          image: {{ .Values.global.imageRegistry }}/alameda-ai:{{ .Values.global.imageTag }}
{{- end }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          livenessProbe:
            exec:
              command:
                - /probe.sh
                - --type=liveness
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          name: alameda-ai-engine
          ports:
            - containerPort: 9091
              name: ai-metrics
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /probe.sh
                - --type=readiness
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          resources:
{{- if .Values.global.resourcesLimitsEnabled }}
            limits:
{{- include "render-value" ( dict "value" .Values.alamedaAi.resources.limits "context" .) | nindent 14 }}
{{- end }}
            requests:
{{- if .Values.global.resourcesRequestsEnabled }}
{{- include "render-value" ( dict "value" .Values.alamedaAi.resources.requests "context" .) | nindent 14 }}
{{- else }}
              cpu: 2000m
              memory: 1000Mi
{{- end }}
          volumeMounts:
            - mountPath: /var/lib/alameda
              name: alameda-ai-data-storage
            - mountPath: /etc/alameda/alameda-ai/config.yaml
              name: alameda-ai-config
              subPath: config.yaml
      imagePullSecrets:
{{- if .Values.global.imagePullSecrets }}
{{ include "render-value" ( dict "value" .Values.global.imagePullSecrets "context" .) | nindent 8 }}
{{- end }}
      securityContext:
        fsGroup: 1001
{{- if .Values.alamedaAi.podSecurityContext }}
{{- include "render-value" ( dict "value" .Values.alamedaAi.podSecurityContext "context" .) | nindent 8 }}
{{- end }}
      serviceAccount: alameda-ai
      serviceAccountName: alameda-ai
      tolerations:
{{- if .Values.alamedaAi.tolerations }}
{{- include "render-value" ( dict "value" .Values.alamedaAi.tolerations "context" .) | nindent 6 }}
{{- end }}
      volumes:
        - configMap:
            defaultMode: 420
            name: alameda-ai-config
          name: alameda-ai-config
        - name: alameda-ai-data-storage
          persistentVolumeClaim:
            claimName: alameda-ai-data.pvc
