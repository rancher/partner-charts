# Default values for storageos.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: ondat-operator

k8sDistro: default

# operator-specific configuation parameters.
images:
  # imagePullSecrets:
  #   - name: ""
  operator:
    registry: docker.io/storageos
    image: operator
    tag: v2.10.0
  apiManager:
    registry: docker.io/storageos
    image: api-manager
    tag: v1.2.16
  cli:
    registry: docker.io/storageos
    image: cli
    tag: v2.10.0
  csiV1ExternalAttacherV3:
    registry: k8s.gcr.io/sig-storage
    image: csi-attacher
    tag: v3.5.0
  csiV1ExternalProvisioner:
    registry: docker.io/storageos
    image: csi-provisioner
    tag: v3.3.0-patched
  csiV1ExternalResizer:
    registry: k8s.gcr.io/sig-storage
    image: csi-resizer
    tag: v1.6.0
  csiV1ExternalSnapshotter:
    registry: k8s.gcr.io/sig-storage
    image: csi-snapshotter
    tag: v4.2.1
  csiV1LivenessProbe:
    registry: registry.k8s.io/sig-storage
    image: livenessprobe
    tag: v2.8.0
  csiV1NodeDriverRegistrar:
    registry: registry.k8s.io/sig-storage
    image: csi-node-driver-registrar
    tag: v2.6.0
  init:
    registry: docker.io/storageos
    image: init
    tag: v2.1.3
  # The following is used for cleaning up unmanaged cluster resources when
  # auto-install is enabled.
  kubectl:
    registry: docker.io/bitnami
    image: kubectl
    tag: 1.18.2
  kubeRbacProxy:
    registry: quay.io/brancz
    image: kube-rbac-proxy
    tag: v0.10.0
  # These values SHOULD be set dynamically on install based on Kubernetes version.
  # That behaviour will be overridden if values are set here.
  # i.e. only fill these fields if you are sure you know what you're doing.
  kubeScheduler:
    registry:
    image:
    tag:
  node:
    registry: docker.io/storageos
    image: node
    tag: v2.10.0
  metricsExporter:
    registry: docker.io/storageos
    image: metrics-exporter
    tag: v0.1.7
  nodeManager:
    registry: docker.io/storageos
    image: node-manager
    tag: v0.0.9
  portalManager:
    registry: docker.io/storageos
    image: portal-manager
    tag: v1.0.7
  nodeGuard:
    registry: docker.io/storageos
    image: node-guard
    tag: v0.0.2
  snapshotController:
    registry: k8s.gcr.io/sig-storage
    image: snapshot-controller
    tag: v4.2.1

# parameters for StorageOS resource quotas
# Required for GKE installation!
resourceQuotas:
  create: true
  pods: 100

# cluster-specific configuation parameters.
cluster:
  # set create to true if the operator should auto-create the StorageOS cluster.
  create: true

  # Name of the deployment.
  name: storageos

  # Namespace to install the StorageOS cluster into.
  # By default the release namespace will be used.
  namespace:

  # Name of the secret containing StorageOS API credentials.
  secretRefName: storageos-api

  # Enable protection for volumes during orchestrator upgrades - Tech Preview
  nodeManagerFeatures:
    nodeGuard:
      enabled: false

  # Enable Prometheus metrics exporting
  metricsExporter:
    enabled: false

  # Enable volume snapshotting with Kasten
  snapshots:
    enabled: false
    volumeSnapshotClassName: storageos

  # Default admin account.
  admin:
    # Username to authenticate to the StorageOS API with.
    username: storageos

    # Password to authenticate to the StorageOS API with. This must be at least
    # 8 characters long.
    password: storageos

  # sharedDir should be set if running kubelet in a container.  This should
  # be the path shared into to kubelet container, typically:
  # "/var/lib/kubelet/plugins/kubernetes.io~storageos".  If not set, defaults
  # will be used.
  sharedDir:

  # Key-Value store backend.
  kvBackend:
    svcName: storageos-etcd
    # The namespace to look for the kvBackend in.
    # Will default to the release namespace
    namespace:
    backend: etcd
    tlsSecretName: storageos-etcd-secret

  # Resource requests and limits for the node container
  resources: {}
#    requests:
#      cpu: 1
#      memory: 2Gi
#    limits:
#      cpu:
#      memory:

  # Node selector terms to install StorageOS on.
  nodeSelectorTerm:
    key:
    value:

  # Pod toleration for the StorageOS pods.
  toleration:
    key:
    value:

  # To disable anonymous usage reporting across the cluster, set to true.
  # Defaults to false. To help improve the product, data such as API usage and
  # StorageOS configuration information is collected.
  disableTelemetry: false

  # Connect to Ondat portal
  portalManager:
    secretRefName: storageos-portal-client
    enabled: false
    clientId:
    secret:
    apiUrl:
    tenantId:

  # The name of the StorageClass to be created
  # Using a YAML anchor to allow deletion of the custom storageClass
  storageClassName: storageos
