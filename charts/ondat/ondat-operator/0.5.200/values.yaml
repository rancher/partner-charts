# Default values for storageos.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: ondat-operator

k8sDistro: default

serviceAccount:
  create: true
  name: storageos-operator

podSecurityPolicy:
  enabled: false
  annotations:
    {}
    ## Specify pod annotations
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#sysctl
    ##
    # seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
    # seccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'
    # apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'

# operator-specific configuation parameters.
operator:
  image:
    repository: storageos/operator
    tag: v2.5.0
    pullPolicy: IfNotPresent

# cluster-specific configuation parameters.
cluster:
  # set create to true if the operator should auto-create the StorageOS cluster.
  create: true

  # Name of the deployment.
  name: storageos

  # Namespace to install the StorageOS cluster into.
  # This is opposed to the namespace of the operator, which is refered to
  # with .Release.Namespace
  namespace: storageos
  # Set to false if you'd like to use a pre-existing namespace
  createNamespace: true

  # Name of the secret containing StorageOS API credentials.
  secretRefName: storageos-api

  # Default admin account.
  admin:
    # Username to authenticate to the StorageOS API with.
    username: storageos

    # Password to authenticate to the StorageOS API with. This must be at least
    # 8 characters long.
    password:

  # sharedDir should be set if running kubelet in a container.  This should
  # be the path shared into to kubelet container, typically:
  # "/var/lib/kubelet/plugins/kubernetes.io~storageos".  If not set, defaults
  # will be used.
  sharedDir:

  # Key-Value store backend.
  kvBackend:
    address:
    backend: etcd
    tlsSecretName:
    tlsSecretNamespace:

  # Resource requessts and limits for the node container
  resources: {}
#    requests:
#      cpu: 1
#      memory: 2Gi
#    limits:
#      cpu: 
#      memory:
  # Node selector terms to install StorageOS on.
  nodeSelectorTerm:
    key:
    value:

  # Pod toleration for the StorageOS pods.
  toleration:
    key:
    value:

  # To disable anonymous usage reporting across the cluster, set to true.
  # Defaults to false. To help improve the product, data such as API usage and
  # StorageOS configuration information is collected.
  disableTelemetry: false

  # The name of the StorageClass to be created
  # Using a YAML anchor to allow deletion of the custom storageClass
  storageClassName: storageos

  images:
    apiManager:
      repository: storageos/api-manager
      tag: v1.2.2
    csiV1ExternalAttacherV3:
      repository: quay.io/k8scsi/csi-attacher
      tag: v3.1.0
    csiV1ExternalProvisioner:
      repository: storageos/csi-provisioner
      tag: v2.1.1-patched
    csiV1ExternalResizer:
      repository: quay.io/k8scsi/csi-resizer
      tag: v1.1.0
    csiV1LivenessProbe:
      repository: quay.io/k8scsi/livenessprobe
      tag: v2.2.0
    csiV1NodeDriverRegistrar:
      repository: quay.io/k8scsi/csi-node-driver-registrar
      tag: v2.1.0
    init:
      repository:  storageos/init
      tag: v2.1.0
    # nodeContainer is the StorageOS node image to use, available from the
    # [Docker Hub](https://hub.docker.com/r/storageos/node/).
    node:
      repository: storageos/node
      tag: v2.5.0

# The following is used for cleaning up unmanaged cluster resources when
# auto-install is enabled.
cleanup:
  images:
    kubectl:
      repository: bitnami/kubectl
      tag: 1.18.2
