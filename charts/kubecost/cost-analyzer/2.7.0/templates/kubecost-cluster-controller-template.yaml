{{- if (.Values.clusterController).enabled }}
{{- $serviceName := include "cost-analyzer.serviceName" . -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "kubecost.clusterControllerName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cost-analyzer.commonLabels" . | nindent 4 }}
---
#
# NOTE: 
# The following ClusterRole permissions are only created and assigned for the 
# cluster controller feature. They will not be added to any clusters by default. 
#
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ template "kubecost.clusterControllerName" . }}
  labels:
    {{- include "cost-analyzer.commonLabels" . | nindent 4 }}
rules:
  - apiGroups:
      - kubecost.com
    resources:
      - turndownschedules
      - turndownschedules/status
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - ''
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ''
    resources:
      - deployments
      - nodes
      - pods
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - pods/eviction
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ''
    resources:
      - configmaps
      - namespaces
      - persistentvolumeclaims
      - persistentvolumes
      - endpoints
      - events
      - services
    verbs:
      - get 
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - configmaps
    resourceNames:
      - 'cluster-controller-nsturndown-config'
    verbs:
      - get
      - create
      - update
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - deployments
      - daemonsets
      - replicasets
    verbs:
      - get 
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
  - apiGroups: 
      - storage.k8s.io
    resources: 
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - events.k8s.io
    resources:
      - events
    verbs:
      - get
      - list
      - watch
  # Used for namespace turndown 
  # When cleaning a namespace, we need the ability to remove
  # arbitrary resources (since we helm uninstall all releases in that NS first)
  {{- if .Values.clusterController.namespaceTurndown.rbac.enabled }}
  - apiGroups: ["*"]
    resources: ["*"]
    verbs:
      - list
      - get
      - delete
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "kubecost.clusterControllerName" . }}
  labels:
    {{- include "cost-analyzer.commonLabels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ template "kubecost.clusterControllerName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ template "kubecost.clusterControllerName" . }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kubecost.clusterControllerName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cost-analyzer.commonLabels" . | nindent 4 }}
    {{- if .Values.global.additionalLabels }}
    {{- toYaml .Values.global.additionalLabels | nindent 4 }}
    {{- end }}
    {{- if .Values.clusterController.labels }}
    {{- toYaml .Values.clusterController.labels | nindent 4 }}
    {{- end }}
  annotations:
  {{- with .Values.global.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.clusterController.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "kubecost.clusterControllerName" . }}
  template:
    metadata:
      labels:
        app: {{ template "kubecost.clusterControllerName" . }}
        {{- if .Values.global.additionalLabels }}
        {{- toYaml .Values.global.additionalLabels | nindent 8 }}
        {{- end }}
        {{- if .Values.clusterController.labels }}
        {{- toYaml .Values.clusterController.labels | nindent 8 }}
        {{- end }}
      {{- with .Values.global.podAnnotations}}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.global.platforms.openshift.enabled }}
      securityContext:
      {{- toYaml .Values.global.platforms.openshift.securityContext | nindent 8 }}
      {{- else if .Values.global.securityContext }}
      securityContext:
      {{- toYaml .Values.global.securityContext | nindent 8 }}
      {{- else }}
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      {{- end }}
      {{- if .Values.clusterController.priorityClassName }}
      priorityClassName: "{{ .Values.clusterController.priorityClassName }}"
      {{- end }}
      containers:
      - name: {{ template "kubecost.clusterControllerName" . }}
        {{- if eq (typeOf .Values.clusterController.image) "string" }}
        image: {{ .Values.clusterController.image }}
        {{- else }}
        image: {{ .Values.clusterController.image.repository }}:{{ .Values.clusterController.image.tag }}
        {{- end}}
        imagePullPolicy: {{ .Values.clusterController.imagePullPolicy }}
        securityContext:
        {{- if .Values.clusterController.securityContext }}
          {{- toYaml .Values.clusterController.securityContext | nindent 10 -}}
        {{- else if .Values.global.containerSecurityContext }}
          {{- toYaml .Values.global.containerSecurityContext | nindent 10 -}}
        {{- end }}
        volumeMounts:
        - name: cluster-controller-keys
          mountPath: /var/keys
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CLUSTER_ID
          value: {{ .Values.prometheus.server.global.external_labels.cluster_id }}
        - name: TURNDOWN_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: TURNDOWN_DEPLOYMENT
          value: {{ template "kubecost.clusterControllerName" . }}
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/keys/service-key.json
        - name: CC_LOG_LEVEL
          value: {{ .Values.clusterController.logLevel | default "info" }}
        - name: CC_KUBESCALER_COST_MODEL_PATH
          {{- if .Values.clusterController.primaryKubecostURL }}
          value: {{ .Values.clusterController.primaryKubecostURL }}/model
          {{- else }}
          value: http://{{ $serviceName }}.{{ .Release.Namespace }}:{{ .Values.service.targetPort | default 9090 }}/model
          {{- end }}
        - name: CC_CCL_COST_MODEL_PATH
          {{- if .Values.clusterController.primaryKubecostURL }}
          value: {{ .Values.clusterController.primaryKubecostURL }}/model
          {{- else }}
          value: http://{{ $serviceName }}.{{ .Release.Namespace }}:{{ .Values.service.targetPort | default 9090 }}/model
          {{- end }}
        {{- if .Values.clusterController.kubecostAPIKey }}
        - name: KUBECOST_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.clusterController.secretName }}
              key: kubecostAPIKey
        {{- end }}
        {{- if .Values.clusterController.kubescaler }}
        - name: CC_KUBESCALER_DEFAULT_RESIZE_ALL
          value: {{ .Values.clusterController.kubescaler.defaultResizeAll | default "false" | quote }}
        {{- end }}
        {{- if .Values.clusterController.extraEnv -}}
        {{ toYaml .Values.clusterController.extraEnv | nindent 8 }}
        {{- end }}
        ports:
        - name: http-server
          containerPort: 9731
        resources:
          {{- toYaml .Values.clusterController.resources | nindent 12 }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range $.Values.imagePullSecrets }}
        - name: {{ .name }}
        {{- end }}
      {{- end }}
      serviceAccount: {{ template "kubecost.clusterControllerName" . }}
      serviceAccountName: {{ template "kubecost.clusterControllerName" . }}
      {{- with .Values.clusterController.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.clusterController.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.clusterController.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: cluster-controller-keys
        secret:
          secretName: {{ .Values.clusterController.secretName | default "cluster-controller-service-key" }}
          # The secret is optional because not all of cluster controller's
          # functionality requires this secret. Cluster controller will
          # partially or fully initialize based on the presence of these keys
          # and their validity.
          optional: true
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "kubecost.clusterControllerName" . }}-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cost-analyzer.commonLabels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 9731
    targetPort: 9731
  selector:
    app: {{ template "kubecost.clusterControllerName" . }}
---
{{- if and .Values.clusterController.createClusterControllerSecret .Values.clusterController.kubecostAPIKey }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Values.clusterController.secretName }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cost-analyzer.commonLabels" . | nindent 4 }}
data:
  kubecostAPIKey: {{ .Values.clusterController.kubecostAPIKey | b64enc }}
{{- end }}
{{- end }}