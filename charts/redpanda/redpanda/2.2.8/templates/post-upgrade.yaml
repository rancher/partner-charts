{{- if (include "redpanda-atleast-22-1-1" . | fromJson).bool }}
{{- $rpkFlags := include "rpk-common-flags" . }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "redpanda.fullname" . }}-post-upgrade
  namespace: {{ .Release.Namespace | quote }}
  labels:
    helm.sh/chart: {{ template "redpanda.chart" . }}
    app.kubernetes.io/name: {{ template "redpanda.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/component: {{ template "redpanda.name" . }}
{{- with .Values.commonLabels }}
  {{- toYaml . | nindent 4 }}
{{- end }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "-5"
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/name: {{ template "redpanda.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/component: {{ template "redpanda.name" . }}
{{- with .Values.commonLabels }}
  {{- toYaml . | nindent 8 }}
{{- end }}
    spec:
      restartPolicy: Never
      containers:
      - name: {{ template "redpanda.name" . }}-post-upgrade
        image: {{ .Values.image.repository}}:{{ template "redpanda.tag" . }}
        command: ["/bin/sh", "-c"]
        args:
          - |
            rpk cluster config import -f /tmp/base-config/bootstrap.yaml {{ $rpkFlags }}
{{- range $key, $value := .Values.config.cluster }}
            rpk cluster config set {{ $key }} {{ $value }} {{ $rpkFlags }}
{{- end }}
{{- if not (hasKey .Values.config.cluster "storage_min_free_bytes") }}
            rpk cluster config set storage_min_free_bytes {{ include "storage-min-free-bytes" . }} {{ $rpkFlags }}
{{- end }}
        {{- with .Values.post_upgrade_job.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: {{ template "redpanda.fullname" . }}
            mountPath: /tmp/base-config
          - name: config
            mountPath: /etc/redpanda
{{- if (include "tls-enabled" . | fromJson).bool }}
  {{- range $name, $cert := .Values.tls.certs }}
          - name: redpanda-{{ $name }}-cert
            mountPath: {{ printf "/etc/tls/certs/%s" $name }}
  {{- end }}
{{- end }}
      volumes:
        - name: {{ template "redpanda.fullname" . }}
          configMap:
            name: {{ template "redpanda.fullname" . }}
        - name: config
          emptyDir: {}
{{- if (include "tls-enabled" . | fromJson).bool }}
  {{- range $name, $cert := .Values.tls.certs }}
        - name: redpanda-{{ $name }}-cert
          secret:
            defaultMode: 420
            items:
            - key: tls.key
              path: tls.key
            - key: tls.crt
              path: tls.crt
    {{- if $cert.caEnabled }}
            - key: ca.crt
              path: ca.crt
    {{- end }}
            secretName: {{ template "redpanda.fullname" $ }}-{{ $name }}-cert
  {{- end }}
{{- end -}}
{{- end }}
