apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cpxconfigmap.fullname" . }}
  namespace: {{ .Release.Namespace }}
data:
  LOGLEVEL: {{ .Values.logLevel | quote | lower }}
  JSONLOG: {{ .Values.jsonLog | quote | lower }}
{{- if eq (upper .Values.nsProtocol) "HTTPS" }}
  NS_PROTOCOL: "https"
{{- if .Values.cpxBgpRouter }}
  NS_PORT: "9443"
{{- else }}
  NS_PORT: "443"
{{- end }}
{{- else }}
  NS_PROTOCOL: "http"
{{- if .Values.cpxBgpRouter }}
  NS_PORT: "9080"
{{- else }}
  NS_PORT: "80"
{{- end }}
{{- end }}

{{- if ne (upper .Values.nsHTTP2ServerSide) "OFF" }}
  NS_HTTP2_SERVER_SIDE: {{ .Values.nsHTTP2ServerSide | quote }}
{{- end }}
{{- if ne (toString .Values.nsCookieVersion) "0" }}
  NS_COOKIE_VERSION: {{ .Values.nsCookieVersion | quote }}
{{- end }}
{{- if .Values.nsDnsNameserver }}
  NS_DNS_NAMESERVER: {{ .Values.nsDnsNameserver }}
{{- end }}

{{- if .Values.analyticsConfig.required }}
  NS_ANALYTICS_CONFIG: |
    distributed_tracing:
      enable: {{ .Values.analyticsConfig.distributedTracing.enable | quote }}
      samplingrate: {{ .Values.analyticsConfig.distributedTracing.samplingrate }}
    endpoint:
      server: {{ include "analytics.server" . | quote }}
      service: {{ .Values.analyticsConfig.endpoint.service | quote }}
    timeseries:
      port: {{ .Values.analyticsConfig.timeseries.port }}
      metrics:
        enable: {{ .Values.analyticsConfig.timeseries.metrics.enable | quote }}
        mode: {{ .Values.analyticsConfig.timeseries.metrics.mode | quote }}
      auditlogs:
        enable: {{ .Values.analyticsConfig.timeseries.auditlogs.enable | quote }}
      events:
        enable: {{ .Values.analyticsConfig.timeseries.events.enable | quote }}
    transactions:
      enable: {{ .Values.analyticsConfig.transactions.enable | quote }}
      port: {{ .Values.analyticsConfig.transactions.port }}
{{- end }}

{{- if .Values.cpxBgpRouter }}
{{- if .Values.bgpSettings.required }}
  NS_BGP_CONFIG: |
{{- with .Values.bgpSettings.bgpConfig }}
    bgpConfig:
{{ toYaml . | indent 4 }}
{{- end }}
{{- end }}
{{- end }}

{{- if .Values.nsLbHashAlgo.required }}
  NS_LB_HASH_ALGO: |
    hashFingers: {{ .Values.nsLbHashAlgo.hashFingers }}
    hashAlgorithm: {{ .Values.nsLbHashAlgo.hashAlgorithm | quote }}
{{- end }}

{{- if .Values.profileSslFrontend }}
  FRONTEND_SSL_PROFILE: |
    {{- toYaml .Values.profileSslFrontend | nindent 4 }}
{{- end }}

{{- if .Values.profileTcpFrontend }}
  FRONTEND_TCP_PROFILE: |
    {{- toYaml .Values.profileTcpFrontend | nindent 4 }}
{{- end }}

{{- if .Values.profileHttpFrontend }}
  FRONTEND_HTTP_PROFILE: |
    {{- toYaml .Values.profileHttpFrontend | nindent 4 }}
{{- end }}