apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app: rabbitmq
    app-id: appsab909ba8cbe61c46e1cb3f9c4dffd24b038a
    family: servicegroup
    name: rabbitmq
    released-by: gopaddle
    servicegroup: rabbitmq-ijdwt5eu
    servicegroup-name: rabbitmq
  name: rabbitmq
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rabbitmq
  serviceName: rabbitmq-headless
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: rabbitmq
        app-id: appsab909ba8cbe61c46e1cb3f9c4dffd24b038a
        family: servicegroup
        name: rabbitmq
        released-by: gopaddle
        servicegroup: rabbitmq-ijdwt5eu
      name: rabbitmq
    spec:
      affinity: {}
{{- if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
{{- end }}
      containers:
      - args:
        - sh
        - -c
        - chmod 0777 /initscript/rabbitmq.sh;sh -x /initscript/rabbitmq.sh
        env:
        - name: RABBITMQ_DEFAULT_PASS
          value: {{ quote .Values.rabbitmq.rabbitmq.envMap.RABBITMQ_DEFAULT_PASS }}
        - name: RABBITMQ_DEFAULT_USER
          value: {{ quote .Values.rabbitmq.rabbitmq.envMap.RABBITMQ_DEFAULT_USER }}
        - name: GP_RELEASE
          value: gp-4.2
        envFrom:
        - secretRef:
            name: rabbitmq-rabbitmq-envsecret-tgmx3
{{- if .Values.global.airgapped.enabled }}
        image: {{ template "gopaddle.registryUrl" . }}/rabbitmq:{{ .Values.rabbitmq.rabbitmq.imageTag }}
{{- else }}
        image: rabbitmq:{{ .Values.rabbitmq.rabbitmq.imageTag }}
{{- end}}
        name: rabbitmq
        ports:
        - containerPort: 5672
          name: 5672-tcp
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 1G
          requests:
            cpu: 100m
            memory: 100M
        securityContext: {}
        volumeMounts:
        - mountPath: /initscript
          name: rabbitmq-rabbitmq-cmnt-5h2yx
        - mountPath: /var/lib/rabbitmq/
          name: data
{{- if .Values.global.airgapped.enabled }}
      imagePullSecrets:
      - name: {{ .Values.global.airgapped.imageRegistryInfo.imageSecret }}
{{- end }}
      securityContext: {}
      subdomain: rabbitmq
      volumes:
      - configMap:
          defaultMode: 420
          name: rabbitmq-rabbitmq-configmap-lc0ok
        name: rabbitmq-rabbitmq-cmnt-5h2yx
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      labels:
        app: data
        app-id: appsab909ba8cbe61c46e1cb3f9c4dffd24b038a
        name: rabbitmq
        released-by: gopaddle
        servicegroup: rabbitmq-ijdwt5eu
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        limits:
          storage: 20Gi
        requests:
          storage: 10Gi
      storageClassName: {{ template "gopaddle.storageClass" . }}
      volumeMode: Filesystem
    status: {}
