apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: gateway
    app-id: appsab909ba8cbe61c46e1cb3f9c4dffd24b038a
    family: servicegroup
    name: gateway
    released-by: gopaddle
    servicegroup: gateway-i11oclpd
    servicegroup-name: gateway
  name: gateway
  namespace: {{ .Release.Namespace }}
spec:
  minReadySeconds: 5
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: gateway
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gateway
        app-id: appsab909ba8cbe61c46e1cb3f9c4dffd24b038a
        family: servicegroup
        name: gateway
        released-by: gopaddle
        servicegroup: gateway-i11oclpd
        servicetype: gopaddle
      name: gateway
    spec:
      affinity: {}
{{- if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
{{- end }}
      containers:
      - args:
        - |-
          #!/bin/bash
          ./gateway kube > /var/log/gopaddle/gateway.log
          tail -f /var/log/gopaddle/gateway.log
        command:
        - /bin/sh
        - -c
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: {{ quote .Values.gateway.gateway.envMap.NODE_NAME }}
        - name: GP_RELEASE
          value: gp-4.2
        envFrom:
        - secretRef:
            name: gateway-gateway-envsecret-gctwp
        image: {{ template "gopaddle.registryUrl" . }}/gateway:{{ .Values.gateway.gateway.imageTag }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: 8006
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 10
        name: gateway
        ports:
        - containerPort: 8006
          name: 8006-tcp
          protocol: TCP
        - containerPort: 8017
          name: 8017-tcp
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: 8006
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 100M
          requests:
            cpu: 10m
            memory: 50M
        securityContext: {}
        volumeMounts:
        - mountPath: /app/config
          name: gateway-gateway-cmnt-goefl
        - mountPath: /var/log/gopaddle/
          name: log
      - args:
        - |-
          #!/bin/bash
          sed -i 's,<\/head>,<script>window.VUE_APP_SERVER="'$BASE_SERVER'"<\/script><\/head>,g' index.html
          sed -i 's/<\/head>/<script>window.VUE_APP_GP_RELEASE="'$GP_RELEASE'"<\/script><\/head>/g' index.html
          sed -i 's/<\/head>/<script>window.VUE_APP_INSTALL_SOURCE="'$INSTALL_SOURCE'"<\/script><\/head>/g' index.html
          serve -s -l tcp://0.0.0.0:8080 > current_ui.log
          tail -f current_ui.log
        command:
        - /bin/sh
        - -c
        env:
        - name: HOST
          value: {{ quote .Values.gateway.gpkubeux.envMap.HOST }}
        - name: GP_RELEASE
          value: {{ quote .Values.gateway.gpkubeux.gpReleaseVersion }}
        - name: BASE_SERVER
          value: {{ template "gopaddle.baseServer" . }}
        - name: INSTALL_SOURCE
          value: {{quote .Values.global.installer.edition }}
        envFrom:
        - secretRef:
            name: gateway-gpkubeux-envsecret-ai5wl
        image: {{ template "gopaddle.registryUrl" . }}/gpkubeux:{{ .Values.gateway.gpkubeux.imageTag }}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl http://localhost:8080
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: gpkubeux
        ports:
        - containerPort: 8080
          name: 8080-tcp
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl http://localhost:8080
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 150m
            memory: 500M
          requests:
            cpu: 10m
            memory: 50M
        securityContext: {}
      imagePullSecrets:
{{- if .Values.global.airgapped.enabled }}
      - name: {{ .Values.global.airgapped.imageRegistryInfo.imageSecret }}
{{- else }}
      - name: gcr-json-key
{{- end }}
      securityContext: {}
      volumes:
      - configMap:
          defaultMode: 420
          name: gateway-gateway-configmap-w4tc1
        name: gateway-gateway-cmnt-goefl
      - emptyDir: {}
        name: log
status: {}
