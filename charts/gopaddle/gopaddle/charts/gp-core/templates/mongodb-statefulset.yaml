apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app: mongodb
    app-id: appsab909ba8cbe61c46e1cb3f9c4dffd24b038a
    family: servicegroup
    name: mongodb
    released-by: gopaddle
    servicegroup: mongodb-sr2ai9v6
    servicegroup-name: mongodb
  name: mongodb
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: mongodb
  serviceName: mongodb-headless
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongodb
        app-id: appsab909ba8cbe61c46e1cb3f9c4dffd24b038a
        family: servicegroup
        name: mongodb
        released-by: gopaddle
        servicegroup: mongodb-sr2ai9v6
      name: mongodb
    spec:
      affinity: {}
{{- if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
{{- end }}
      containers:
      - args:
        - sh
        - -c
        - chmod 0777 /initscript/init.sh;/bin/bash -x /initscript/init.sh
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: {{ quote .Values.mongodb.mongo.envMap.MONGO_INITDB_ROOT_USERNAME }}
        - name: MONGO_LITE_USERNAME
          value: {{ quote .Values.mongodb.mongo.envMap.MONGO_LITE_USERNAME }}
        - name:  GP_EDITION
          value: {{quote .Values.global.installer.edition }}
        - name: GP_RELEASE
          value: gp-4.2
        envFrom:
        - secretRef:
            name: mongodb-mongo-envsecret-bd5xi
{{- if .Values.global.airgapped.enabled }}
        image: {{ template "gopaddle.registryUrl" . }}/mongo:{{ .Values.mongodb.mongo.imageTag }}
{{- else }}
        image: mongo:{{ .Values.mongodb.mongo.imageTag }}
{{- end }}
        name: mongo
        ports:
        - containerPort: 27017
          name: 27017-tcp
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: 2G
          requests:
            cpu: 100m
            memory: 500M
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/mongodb/
          name: mongodb-mongo-cmnt-bwgdu
        - mountPath: /initscript
          name: mongodb-mongo-cmnt-g18zp
        - mountPath: /data/db
          name: data
        - mountPath: /backupscript
          name: backupscript
      initContainers:
      - args:
        - sh
        - -c
        - cp -a /cronjobscript/.  /backupscript/
        env:
        - name: GP_RELEASE
          value: gp-4.2
        - name:  GP_EDITION
          value: {{quote .Values.global.installer.edition }}
        envFrom:
        - secretRef:
            name: mongodb-mongo-init-envsecret-b99qs
{{- if .Values.global.airgapped.enabled }}
        image: {{ template "gopaddle.registryUrl" . }}/mongo:{{ .Values.mongodb.mongoInit.imageTag }}
{{- else }}
        image: mongo:{{ .Values.mongodb.mongoInit.imageTag }}
{{- end }}
        name: mongo-init
        resources:
          limits:
            cpu: "1"
            memory: 1G
          requests:
            cpu: 100m
            memory: 100M
        securityContext: {}
        volumeMounts:
        - mountPath: /cronjobscript
          name: mongodb-mongo-init-cmnt-6fl9r
        - mountPath: /backupscript
          name: backupscript
{{- if .Values.global.airgapped.enabled }}
      imagePullSecrets:
      - name: {{ .Values.global.airgapped.imageRegistryInfo.imageSecret }}
{{- end }}
      securityContext: {}
      subdomain: mongodb
      volumes:
      - configMap:
          defaultMode: 420
          name: mongodb-mongo-init-configmap-346jg
        name: mongodb-mongo-init-cmnt-6fl9r
      - configMap:
          defaultMode: 420
          name: mongodb-mongo-configmap-s79ue
        name: mongodb-mongo-cmnt-bwgdu
      - configMap:
          defaultMode: 420
          name: mongodb-mongo-configmap-hp8xu
        name: mongodb-mongo-cmnt-g18zp
      - emptyDir: {}
        name: backupscript
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      labels:
        app: data
        app-id: appsab909ba8cbe61c46e1cb3f9c4dffd24b038a
        name: mongodb
        released-by: gopaddle
        servicegroup: mongodb-sr2ai9v6
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        limits:
          storage: 20Gi
        requests:
          storage: 10Gi
      storageClassName: {{ template "gopaddle.storageClass" . }}
      volumeMode: Filesystem
    status: {}
