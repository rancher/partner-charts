apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: appworker
    app-id: appsab909ba8cbe61c46e1cb3f9c4dffd24b038a
    family: servicegroup
    name: appworker
    released-by: gopaddle
    servicegroup: appworker-6iwtvs3g
    servicegroup-name: appworker
  name: appworker
  namespace: {{ .Release.Namespace }}
spec:
  minReadySeconds: 5
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: appworker
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: appworker
        app-id: appsab909ba8cbe61c46e1cb3f9c4dffd24b038a
        family: servicegroup
        name: appworker
        released-by: gopaddle
        servicegroup: appworker-6iwtvs3g
        servicetype: gopaddle
      name: appworker
    spec:
      affinity: {}
{{- if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
{{- end }}
      containers:
      - {{ template "cluster.provider.appworker" . }}
        command:
        - /bin/sh
        - -c
        env:
        - name: rabbitmq_user
          value: {{ quote .Values.appworker.appworker.envMap.rabbitmq_user }}
        - name: NODE_IP
          value: {{ template "gopaddle.nodeIP" . }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: {{ quote .Values.appworker.appworker.envMap.NODE_NAME }}
{{- if .Values.global.airgapped.enabled }}
        - name: AIR_GAPPED
          value: {{ quote .Values.global.airgapped.enabled }}
        - name: IMAGE_REGISTRY
          value: {{ quote .Values.global.airgapped.imageRegistryType }}
        - name: DOCKER_REGISTRY_URL
          value: {{ .Values.global.airgapped.imageRegistryInfo.registryUrl }}
  {{- if eq ( .Values.global.airgapped.imageRegistryType | toString) "private" }}
        - name: INGRESS_IMAGE_BELOW_V22
          value: {{ template "gopaddle.deploymentmanager.nginx-ingress-controller" . }}
        - name: INGRESS_IMAGE_ABOVE_V22
          value: {{ template "gopaddle.deploymentmanager.controller" . }}
    {{- if eq (.Values.global.airgapped.imageRegistryInfo.authType | toString) "dockerconfig" }}
        - name: DOCKER_CONFIG_JSON_B64
          value: {{ .Values.global.airgapped.imageRegistryInfo.dockerConfig }}
        - name: AUTHTYPE
          value: {{ .Values.global.airgapped.imageRegistryInfo.authType }}
    {{- else if eq (.Values.global.airgapped.imageRegistryInfo.authType | toString) "basic" }}
        - name: DOCKER_REGISTRY_USERNAME
          value: {{ .Values.global.airgapped.imageRegistryInfo.basicAuth.registryUserName }}
        - name: DOCKER_REGISTRY_PASSWORD
          value: {{ .Values.global.airgapped.imageRegistryInfo.basicAuth.registryPassword }}
        - name: AUTHTYPE
          value: {{ .Values.global.airgapped.imageRegistryInfo.authType }}
    {{- end}}
  {{- end }}
{{- end }}
        - name: GP_RELEASE
          value: gp-4.2
        envFrom:
        - secretRef:
            name: appworker-appworker-envsecret-ycm42
        image: {{ template "gopaddle.registryUrl" . }}/appworker:{{ .Values.appworker.appworker.imageTag }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/status
            port: 8010
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 10
        name: appworker
        ports:
        - containerPort: 8010
          name: 8010-tcp
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/status
            port: 8010
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 200M
          requests:
            cpu: 50m
            memory: 50M
        securityContext: {}
        volumeMounts:
        - mountPath: /app/config
          name: appworker-appworker-cmnt-nt2cg
        - mountPath: /var/log/gopaddle/
          name: log
      imagePullSecrets:
{{- if .Values.global.airgapped.enabled }}
      - name: {{ .Values.global.airgapped.imageRegistryInfo.imageSecret }}
{{- else }}
      - name: gcr-json-key
{{- end }}
      securityContext: {}
      volumes:
      - configMap:
          defaultMode: 420
          name: appworker-appworker-configmap-njdt6
        name: appworker-appworker-cmnt-nt2cg
      - emptyDir: {}
        name: log
status: {}
