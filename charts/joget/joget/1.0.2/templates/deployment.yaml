apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "joget.fullname" . }}
  labels:
    {{- include "joget.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "joget.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "joget.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "joget.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          image: ubuntu:20.04
          command: [ "sh", "-c", "chmod -R ugo+w {{ .Values.image.volumePath }}"]
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: {{ include "joget.fullname" . }}
              mountPath: {{ .Values.image.volumePath }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: {{ include "joget.fullname" . }}
              mountPath: {{ .Values.image.volumePath }}
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                    fieldPath: metadata.namespace
          ports:
            - containerPort: {{ .Values.service.http.port }}
            - containerPort: {{ .Values.service.https.port }}
          startupProbe:
            httpGet:
              path: /jw/home/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 30
            failureThreshold: 200
          livenessProbe:
            httpGet:
              path: /jw/home/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 300
            timeoutSeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 20
          readinessProbe:
            httpGet:
              path: /jw/home/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "joget.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ include "joget.fullname" . }}
