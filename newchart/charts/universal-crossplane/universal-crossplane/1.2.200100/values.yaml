nameOverride: "crossplane"

replicas: 1

deploymentStrategy: RollingUpdate

image:
  repository: crossplane/crossplane
  tag: v1.2.2
  pullPolicy: IfNotPresent

nodeSelector: {}
tolerations: {}
affinity: {}

leaderElection: true
args: {}

provider:
  packages: []

configuration:
  packages: []

imagePullSecrets:
  - dockerhub

rbacManager:
  deploy: true
  skipAggregatedClusterRoles: true
  replicas: 1
  managementPolicy: Basic
  leaderElection: true
  args: {}
  nodeSelector: {}
  tolerations: {}
  affinity: {}

priorityClassName: ""

resourcesCrossplane:
  limits:
    cpu: 100m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

securityContextCrossplane:
  runAsUser: 65532
  runAsGroup: 65532
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true

packageCache:
  medium: ""
  sizeLimit: 5Mi
  pvc: ""

resourcesRBACManager:
  limits:
    cpu: 100m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

securityContextRBACManager:
  runAsUser: 65532
  runAsGroup: 65532
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true

alpha:
  oam:
    enabled: false

metrics:
  enabled: false

# List of extra environment variables to set in the crossplane deployment.
# EXAMPLE
# extraEnvironmentVars:
#   sample.key=value1
#   ANOTHER.KEY=value2
# RESULT
#   - name: sample_key
#     value: "value1"
#   - name: ANOTHER_KEY
#     value: "value2"
extraEnvVarsCrossplane: {}

# List of extra environment variables to set in the crossplane rbac manager deployment.
# EXAMPLE
# extraEnvironmentVars:
#   sample.key=value1
#   ANOTHER.KEY=value2
# RESULT
#   - name: sample_key
#     value: "value1"
#   - name: ANOTHER_KEY
#     value: "value2"
extraEnvVarsRBACManager: {}

### Agent Values

upbound:
  apiURL: "https://api.upbound.io"
  connectHost: "connect.upbound.io"
  controlPlane:
    permission: edit
    tokenSecretName: upbound-control-plane-token
    token: ""

xgql:
  image:
    repository: upbound/xgql
    tag: v0.1.3
    pullPolicy: IfNotPresent
  resources: {}
  metrics:
    enabled: false
  config:
    debugMode: false
    args: []

agent:
  image:
    repository: upbound/upbound-agent
    tag: v1.2.2-up.1
    pullPolicy: IfNotPresent
  resources: {}
  config:
    debugMode: false
    args: []

### Bootstrapper Values

bootstrapper:
  image:
    repository: upbound/uxp-bootstrapper
    tag: v1.2.2-up.1
    pullPolicy: IfNotPresent
  resources: {}
  config:
    debugMode: false
    args: []

billing:
  awsMarketplace:
    enabled: false
    iamRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
